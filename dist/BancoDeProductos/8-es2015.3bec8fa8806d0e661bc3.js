(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"+xFH":function(r,e,o){"use strict";o.r(e),e.default='<ngx-spinner\r\n  bdColor="rgba(0, 0, 0, .45)">\r\n  <p style="font-size: 20px; color: white">Cargando...</p>\r\n</ngx-spinner>\r\n\r\n<section class="display-flex mb-5 pt-4">\r\n    <div class="container-fluid">\r\n        <div class="row">\r\n\r\n            <form   [formGroup]="forma"\r\n                    (ngSubmit)="addProducts()" \r\n                    novalidate="novalidate"\r\n                    class="row width-100 pl-3"\r\n                    >\r\n\r\n                    \x3c!-- ======  SUBIDA DE PRODUCTO =====--\x3e\r\n                    \x3c!-- ===================================--\x3e\r\n                    <section class="col-12 col-sm-12 col-md-4">\r\n\r\n                        <app-image-preview-gallery *ngIf="myFlag" [imgs]="IMG" [sync]="this.sync"></app-image-preview-gallery>\r\n\r\n                    </section>\r\n\r\n                    <section class="col-12 col-sm-12 col-md-7">\r\n\r\n                        <div class="form-group row">\r\n                            <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">\r\n                                <label class="family-500 size-16">Nombre</label>\r\n                                <textarea  class="form-control"\r\n                                        type="text"\r\n                                        placeholder="Ingresar nombre del producto"\r\n                                        formControlName="name"\r\n                                        [ngClass]="{\'is-invalid\':  (!forma.controls[\'name\'].valid || forma.controls[\'name\'].errors?.minlength)&& forma.controls[\'name\'].touched, \'is-valid\': forma.controls[\'name\'].valid }"     \r\n                                ></textarea>\r\n\r\n                                <mat-error  *ngIf="forma.get(\'name\').errors?.required"  \r\n                                            class="invalid-feedback">\r\n                                            Ingresa un nombre del producto\r\n                                </mat-error>\r\n\r\n                                <mat-error  *ngIf="forma.get(\'name\').errors?.minlength"  \r\n                                            class="invalid-feedback">\r\n                                            Por lo menos 5 caracteres\r\n                                </mat-error>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        \r\n                        <div class="form-group row">\r\n                            <div class="col-12 col-sm-10 col-md-12 col-lg-12 col-xl-12">\r\n                                <label class="family-500 size-16">Descripci\xf3n</label>\r\n                                <textarea   class="form-control text-area" \r\n                                            type="text"\r\n                                            placeholder="Ingresar descripci\xf3n del producto" \r\n                                            formControlName="description"\r\n                                            [ngClass]="{\'is-invalid\':  (!forma.controls[\'description\'].valid || forma.controls[\'description\'].errors?.minlength)&& forma.controls[\'description\'].touched, \'is-valid\': forma.controls[\'description\'].valid }"     \r\n                                            ></textarea>\r\n\r\n                                <mat-error  *ngIf="forma.get(\'description\').errors?.required"  \r\n                                            class="invalid-feedback">\r\n                                            Debe indicar una descripci\xf3n del producto\r\n                                </mat-error>\r\n\r\n                                <mat-error  *ngIf="forma.get(\'description\').errors?.minlength"  \r\n                                            class="invalid-feedback">\r\n                                            Por lo menos 5 caracteres\r\n                                </mat-error>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class="row">\r\n\r\n                            <div class="form-group col-md-4">\r\n                                <label for="Marca" class="family-500 size-14">Marca</label>\r\n                                <select id="Marca" \r\n                                        class="form-control"\r\n                                        formControlName="mark">\r\n                                        <option class="family-300">\r\n                                            Seleccionar\r\n                                        </option>\r\n                                        <option [value]="item.name" *ngFor="let item of marks">\r\n                                            {{item.name}}\r\n                                        </option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Fabricante" class="family-500 size-14">Fabricante</label>\r\n                                <select id="Fabricante"\r\n                                        class="form-control"\r\n                                        formControlName="factory">\r\n                                        <option class="family-300">Seleccionar</option>\r\n                                        <option [value]="item.name" *ngFor="let item of factories">\r\n                                                {{item.name}}\r\n                                        </option>\r\n                                </select>\r\n                            </div>\r\n    \r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Categoria" class="family-500 size-14 display-flex align-items-center">\r\n                                    Categoria\r\n                                    \x3c!-- <i  class="material-icons add cursor-poniter plus"\r\n                                        title="agregar nueva categoria"\r\n                                        (click)="openDialog()">add\r\n                                    </i> --\x3e\r\n                                </label>\r\n                                <select id="Categoria" \r\n                                        class="form-control"\r\n                                        formControlName="category"\r\n                                        [ngModel]="this.categoriaBanco"\r\n                                        name="category" \r\n                                        (change)="onChange($event.target.value)"\r\n                                        >\r\n                                    <option class="family-300">Seleccionar</option>\r\n                                    <option *ngFor="let item of category; let i = index"\r\n                                            [value]="item.name"\r\n                                            >\r\n                                            {{item.name}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class="row">\r\n\r\n                            <div class="form-group col-md-4">\r\n                                <label for="Subcategoria" class="family-500 size-14 display-flex align-items-center">\r\n                                    Subcategoria\r\n                                    \x3c!-- <i class="material-icons add cursor-poniter plus"\r\n                                        (click)="openDialog()"\r\n                                        title="agregar nueva subcategoria">\r\n                                        add\r\n                                    </i> --\x3e\r\n                                </label>\r\n                                <select id="Subcategoria" \r\n                                        class="form-control"\r\n                                        formControlName="subcategory_id"\r\n                                        [ngModel]="subcategory_estado[0].subcategoria"\r\n                                        (change)="Subcategory($event.target.value)">\r\n                                        <option selected class="family-300">Seleccionar</option>\r\n                                        <option selected *ngFor="let item of subcategory_estado" \r\n                                                [value]="item.subcategoria">\r\n                                                {{ item.subcategoria_nombre }}\r\n                                        </option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label class="family-500 size-16">Precio</label>\r\n                                <input  class="form-control"\r\n                                        type="number"\r\n                                        placeholder="Precio"\r\n                                        formControlName="price"\r\n                                        [ngClass]="{\'is-invalid\':  (!forma.controls[\'stock\'].valid || forma.controls[\'stock\'].errors?.minlength)&& forma.controls[\'stock\'].touched, \'is-valid\': forma.controls[\'stock\'].valid }"\r\n                                >\r\n    \r\n                                <mat-error  *ngIf="forma.get(\'price\').errors?.required"  \r\n                                            class="invalid-feedback">\r\n                                            Debe indicar precio del producto.\r\n                                </mat-error>\r\n    \r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label class="family-500 size-16">Cantidad</label>\r\n                                <input  class="form-control"\r\n                                        formControlName="stock"\r\n                                        type="number"\r\n                                        placeholder="Cantidad"\r\n                                        [ngClass]="{\'is-invalid\':  (!forma.controls[\'stock\'].valid || forma.controls[\'stock\'].errors?.minlength)&& forma.controls[\'stock\'].touched, \'is-valid\': forma.controls[\'stock\'].valid }" \r\n                                >\r\n                                <mat-error  *ngIf="forma.get(\'stock\').errors?.required"  \r\n                                            class="invalid-feedback">\r\n                                            Debe indicar la cantidad del producto.\r\n                                </mat-error>\r\n    \r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Receta" class="family-500 size-14">Recetas M\xe9dicas</label>\r\n                                <select id="Receta" \r\n                                        class="form-control" \r\n                                        formControlName="recipe">\r\n                                <option selected class="family-300">Seleccionar</option>\r\n                                <option *ngFor="let item of recipes" [value]="item.name">{{ item.name }}</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Delivery" class="family-500 size-14">Delivery</label>\r\n                                <select id="Delivery" \r\n                                        class="form-control"\r\n                                        formControlName="delivery"\r\n                                        >\r\n                                        <option selected class="family-300">Seleccionar</option>\r\n                                        <option *ngFor="let item of delivery_estado" selected [value]="item.delivery">{{item.delivery_nombre}}</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Disponible" class="family-500 size-14">Disponible</label>\r\n                                <select id="Disponible" \r\n                                        class="form-control"\r\n                                        formControlName="aviable"\r\n                                        >\r\n                                <option selected class="family-300">Seleccionar</option>\r\n                                <option *ngFor="let item of disponibilidad_estado" [value]="item.disponibilidad">{{item.disponibilidad_nombre}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </section>\r\n\r\n                    <div class="col-md-11 display-flex justify-content-flex-end">\r\n                        <hr size=1 width="70%">\r\n                        <button class="btn btn-primary button fredoka" \r\n                                type="submit"\r\n                                (click)="Send()"\r\n                                >\r\n                                Desincronizar\r\n                        </button>\r\n                    </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n'},"8vPT":function(r,e,o){"use strict";o.r(e),e.default='<ngx-spinner\r\n  bdColor="rgba(0, 0, 0, .45)">\r\n  <p style="font-size: 20px; color: white">Cargando...</p>\r\n</ngx-spinner>\r\n\r\n<section class="display-flex mb-5 pt-4">\r\n    <div class="container-fluid">\r\n        <div class="row">\r\n\r\n            <form   [formGroup]="forma"\r\n                    (ngSubmit)="addProducts()" \r\n                    novalidate="novalidate"\r\n                    class="row width-100 pl-3"\r\n                    >\r\n\r\n                    \x3c!-- ======  SUBIDA DE PRODUCTO =====--\x3e\r\n                    \x3c!-- ===================================--\x3e\r\n                    <section class="col-12 col-sm-12 col-md-4">\r\n\r\n                        <app-image-preview-gallery *ngIf="myFlag" [imgs]="IMG" [sync]="this.sync"></app-image-preview-gallery>\r\n\r\n                    </section>\r\n\r\n                <section class="col-12 col-sm-12 col-md-7">\r\n\r\n                    <div class="form-group row">\r\n                        <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">\r\n                            <label class="family-500 size-16">Nombre</label>\r\n                            <textarea  class="form-control"\r\n                                    type="text"\r\n                                    placeholder="Ingresar nombre del producto"\r\n                                    formControlName="name"\r\n                                    [ngClass]="{\'is-invalid\':  (!forma.controls[\'name\'].valid || forma.controls[\'name\'].errors?.minlength)&& forma.controls[\'name\'].touched, \'is-valid\': forma.controls[\'name\'].valid }"     \r\n                            ></textarea>\r\n\r\n                            <mat-error  *ngIf="forma.get(\'name\').errors?.required"  \r\n                                        class="invalid-feedback">\r\n                                        Ingresa un nombre del producto\r\n                            </mat-error>\r\n\r\n                            <mat-error  *ngIf="forma.get(\'name\').errors?.minlength"  \r\n                                        class="invalid-feedback">\r\n                                        Por lo menos 5 caracteres\r\n                            </mat-error>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class="form-group row">\r\n                        <div class="col-12 col-sm-10 col-md-12 col-lg-12 col-xl-12">\r\n                            <label class="family-500 size-16">Descripci\xf3n</label>\r\n                            <textarea   class="form-control text-area" \r\n                                        type="text"\r\n                                        placeholder="Ingresar descripci\xf3n del producto" \r\n                                        formControlName="description"\r\n                                        [ngClass]="{\'is-invalid\':  (!forma.controls[\'description\'].valid || forma.controls[\'description\'].errors?.minlength)&& forma.controls[\'description\'].touched, \'is-valid\': forma.controls[\'description\'].valid }"     \r\n                                        ></textarea>\r\n\r\n                            <mat-error  *ngIf="forma.get(\'description\').errors?.required"  \r\n                                        class="invalid-feedback">\r\n                                        Debe indicar una descripci\xf3n del producto\r\n                            </mat-error>\r\n\r\n                            <mat-error  *ngIf="forma.get(\'description\').errors?.minlength"  \r\n                                        class="invalid-feedback">\r\n                                        Por lo menos 5 caracteres\r\n                            </mat-error>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="row">\r\n\r\n                        <div class="form-group col-md-4">\r\n                            <label for="Marca" class="family-500 size-14">Marca</label>\r\n                            <select id="Marca" \r\n                                    class="form-control"\r\n                                    formControlName="mark">\r\n                                    <option class="family-300">\r\n                                        Seleccionar\r\n                                    </option>\r\n                                    <option [value]="item.name" *ngFor="let item of marks">\r\n                                        {{item.name}}\r\n                                    </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class="form-group col-md-4">\r\n                            <label for="Fabricante" class="family-500 size-14">Fabricante</label>\r\n                            <select id="Fabricante"\r\n                                    class="form-control"\r\n                                    formControlName="factory">\r\n                                    <option class="family-300">Seleccionar</option>\r\n                                    <option [value]="item.name" *ngFor="let item of factories">\r\n                                            {{item.name}}\r\n                                    </option>\r\n                            </select>\r\n                        </div>\r\n\r\n\r\n                        <div class="form-group col-md-4">\r\n                            <label for="Categoria" class="family-500 size-14 display-flex align-items-center">\r\n                                Categoria\r\n                                <i  class="material-icons add cursor-poniter plus"\r\n                                    title="agregar nueva categoria"\r\n                                    (click)="openDialog()">add\r\n                                </i>\r\n                            </label>\r\n                            <select id="Categoria" \r\n                                    class="form-control"\r\n                                    formControlName="category"\r\n                                    [ngModel]="this.categoriaBanco"\r\n                                    name="category" \r\n                                    (change)="onChange($event.target.value)"\r\n                                    >\r\n                                <option class="family-300">Seleccionar</option>\r\n                                <option *ngFor="let item of category; let i = index"\r\n                                        [value]="item.name"\r\n                                        >\r\n                                        {{item.name}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="row">\r\n\r\n                        <div class="form-group col-md-4">\r\n                            <label for="Subcategoria" class="family-500 size-14 display-flex align-items-center">\r\n                                Subcategoria\r\n                                <i class="material-icons add cursor-poniter plus"\r\n                                    (click)="openDialog()"\r\n                                    title="agregar nueva subcategoria">\r\n                                    add\r\n                                </i>\r\n                            </label>\r\n                            <select id="Subcategoria" \r\n                                    class="form-control"\r\n                                    formControlName="subcategory_id"\r\n                                    [ngModel]="subcategory_estado[0].subcategoria"\r\n                                    (change)="Subcategory($event.target.value)">\r\n                                    <option selected class="family-300">Seleccionar</option>\r\n                                    <option selected *ngFor="let item of subcategory_estado" \r\n                                            [value]="item.subcategoria">\r\n                                            {{ item.subcategoria_nombre }}\r\n                                    </option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class="form-group col-md-4">\r\n                            <label class="family-500 size-16">Precio</label>\r\n                            <input  class="form-control"\r\n                                    type="number"\r\n                                    placeholder="Precio"\r\n                                    formControlName="price"\r\n                                    [ngClass]="{\'is-invalid\':  (!forma.controls[\'stock\'].valid || forma.controls[\'stock\'].errors?.minlength)&& forma.controls[\'stock\'].touched, \'is-valid\': forma.controls[\'stock\'].valid }"\r\n                            >\r\n\r\n                            <mat-error  *ngIf="forma.get(\'price\').errors?.required"  \r\n                                        class="invalid-feedback">\r\n                                        Debe indicar precio del producto.\r\n                            </mat-error>\r\n\r\n                        </div>\r\n\r\n                        <div class="form-group col-md-4">\r\n                            <label class="family-500 size-16">Cantidad</label>\r\n                            <input  class="form-control"\r\n                                    formControlName="stock"\r\n                                    type="number"\r\n                                    placeholder="Cantidad"\r\n                                    [ngClass]="{\'is-invalid\':  (!forma.controls[\'stock\'].valid || forma.controls[\'stock\'].errors?.minlength)&& forma.controls[\'stock\'].touched, \'is-valid\': forma.controls[\'stock\'].valid }" \r\n                            >\r\n                            <mat-error  *ngIf="forma.get(\'stock\').errors?.required"  \r\n                                        class="invalid-feedback">\r\n                                        Debe indicar la cantidad del producto.\r\n                            </mat-error>\r\n\r\n                        </div>\r\n\r\n                        <div class="form-group col-md-4">\r\n                            <label for="Receta" class="family-500 size-14">Recetas M\xe9dicas</label>\r\n                            <select id="Receta" \r\n                                    class="form-control" \r\n                                    formControlName="recipe">\r\n                            <option selected class="family-300">Seleccionar</option>\r\n                            <option *ngFor="let item of recipes" [value]="item.name">{{ item.name }}</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class="form-group col-md-4">\r\n                            <label for="Delivery" class="family-500 size-14">Delivery</label>\r\n                            <select id="Delivery" \r\n                                    class="form-control"\r\n                                    formControlName="delivery"\r\n                                    >\r\n                                    <option selected class="family-300">Seleccionar</option>\r\n                                    <option *ngFor="let item of delivery_estado" selected [value]="item.delivery">{{item.delivery_nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div class="form-group col-md-4">\r\n                            <label for="Disponible" class="family-500 size-14">Disponible</label>\r\n                            <select id="Disponible" \r\n                                    class="form-control"\r\n                                    formControlName="aviable"\r\n                                    >\r\n                            <option selected class="family-300">Seleccionar</option>\r\n                            <option *ngFor="let item of disponibilidad_estado" [value]="item.disponibilidad">{{item.disponibilidad_nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                </section>\r\n\r\n                <div class="col-md-11 display-flex justify-content-flex-end">\r\n                    <hr size=1 width="70%">\r\n                    <button class="btn btn-primary button fredoka" \r\n                            type="submit"\r\n                            (click)="Send()"\r\n                            [disabled]="!forma.valid"\r\n                            >\r\n                            Guardar Cambios\r\n                    </button>\r\n                </div>\r\n            </form>    \r\n        \r\n        </div>\r\n    </div>\r\n</section>\r\n'},KZuV:function(r,e,o){"use strict";o.r(e),e.default='<section class="display-flex mt-5">\r\n\r\n    <div class="container-fluid">\r\n        <div class="row">\r\n\r\n            <form   [formGroup]="forma"\r\n                    (ngSubmit)="addProducts()" \r\n                    novalidate="novalidate"\r\n                    class="row width-100"\r\n                    >\r\n\r\n                    \x3c!-- ====== SUBIDA DE PRODUCTO =====--\x3e\r\n                    \x3c!-- =============================== --\x3e\r\n                    <section class="col-12 col-sm-12 col-md-4">\r\n\r\n                        <app-image-preview-gallery *ngIf="myFlag" [imgs]="IMG" [sync]="this.sync"></app-image-preview-gallery>\r\n\r\n                    </section>\r\n\r\n                    <section class="col-12 col-sm-12 col-md-7">\r\n\r\n                        <div class="form-group row">\r\n                            <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">\r\n                                <label class="family-500 size-16">Nombre</label>\r\n                                <textarea  class="form-control"\r\n                                        type="text"\r\n                                        placeholder="Ingresar nombre del producto"\r\n                                        formControlName="name"\r\n                                        [ngClass]="{\'is-invalid\':  (!forma.controls[\'name\'].valid || forma.controls[\'name\'].errors?.minlength)&& forma.controls[\'name\'].touched, \'is-valid\': forma.controls[\'name\'].valid }"     \r\n                                ></textarea>\r\n\r\n                                <mat-error    *ngIf="forma.get(\'name\').errors?.required"  \r\n                                        class="invalid-feedback">\r\n                                        Ingresa un nombre del producto\r\n                                </mat-error>\r\n\r\n                                <mat-error    *ngIf="forma.get(\'name\').errors?.minlength"  \r\n                                        class="invalid-feedback">\r\n                                        Por lo menos 5 caracteres\r\n                                </mat-error>\r\n\r\n                            </div>\r\n                        </div>\r\n    \r\n    \r\n                        <div class="form-group row">\r\n                            <div class="col-12 col-sm-10 col-md-12 col-lg-12 col-xl-12">\r\n                                <label class="family-500 size-16">Descripci\xf3n</label>\r\n                                <textarea   class="form-control text-area" \r\n                                            type="text"\r\n                                            placeholder="Ingresar descripci\xf3n del producto" \r\n                                            formControlName="description"\r\n                                            [ngClass]="{\'is-invalid\':  (!forma.controls[\'description\'].valid || forma.controls[\'description\'].errors?.minlength)&& forma.controls[\'description\'].touched, \'is-valid\': forma.controls[\'description\'].valid }"     \r\n                                            ></textarea>\r\n    \r\n                                <mat-error  *ngIf="forma.get(\'description\').errors?.required"  \r\n                                            class="invalid-feedback">\r\n                                            Debe indicar una descripci\xf3n del producto\r\n                                </mat-error>\r\n\r\n                                <mat-error  *ngIf="forma.get(\'description\').errors?.minlength"  \r\n                                            class="invalid-feedback">\r\n                                            Por lo menos 5 caracteres\r\n                                </mat-error>\r\n\r\n                            </div>\r\n                        </div>\r\n    \r\n                        <div class="row">\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Marca" class="family-500 size-14">Marca</label>\r\n                                <select id="Marca" \r\n                                        class="form-control"\r\n                                        formControlName="mark">\r\n\r\n                                        <option class="family-300">\r\n                                            Seleccionar\r\n                                        </option>\r\n                                        <option [value]="item.name" *ngFor="let item of marks">\r\n                                            {{item.name}}\r\n                                        </option>\r\n\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Fabricante" class="family-500 size-14">Fabricante</label>\r\n                                <select id="Fabricante"\r\n                                        class="form-control"\r\n                                        formControlName="factory">\r\n                                        <option class="family-300">Seleccionar</option>\r\n                                        <option [value]="item.name" *ngFor="let item of factories">\r\n                                                {{item.name}}\r\n                                        </option>\r\n                                </select>\r\n                            </div>\r\n    \r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Categoria" class="family-500 size-14 display-flex align-items-center">\r\n                                    Categoria\r\n                                </label>\r\n                                <input  class="form-control"\r\n                                        [ngModel]="categoriaBanco"\r\n                                        formControlName="category">\r\n                            </div>\r\n    \r\n                            \r\n    \r\n                        </div>\r\n    \r\n                        <div class="row">\r\n\r\n\r\n                            <div class="form-group col-md-4">\r\n                                <label for="Subcategoria" class="family-500 size-14 display-flex align-items-center">\r\n                                    Subcategoria\r\n                                </label>\r\n                                <input  class="form-control"\r\n                                        [ngModel]="subcategoria"\r\n                                        formControlName="subcategory_id">\r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label class="family-500 size-16">Precio</label>\r\n                                <input  class="form-control"\r\n                                        type="number"\r\n                                        placeholder="Precio"\r\n                                        formControlName="price"\r\n                                >\r\n\r\n                                <mat-error  *ngIf="forma.get(\'price\').errors?.required"  \r\n                                            class="invalid-feedback">\r\n                                            Debe indicar precio del producto.\r\n                                </mat-error>\r\n\r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label class="family-500 size-16">Cantidad</label>\r\n                                <input  class="form-control"\r\n                                        formControlName="stock"\r\n                                        type="number"\r\n                                        placeholder="Cantidad"\r\n                                        [ngClass]="{\'is-invalid\':  (!forma.controls[\'stock\'].valid || forma.controls[\'stock\'].errors?.minlength)&& forma.controls[\'stock\'].touched, \'is-valid\': forma.controls[\'stock\'].valid }" \r\n                                >\r\n                                <mat-error    *ngIf="forma.get(\'stock\').errors?.required"  \r\n                                        class="invalid-feedback">\r\n                                        Debe indicar la cantidad del producto.\r\n                                </mat-error>\r\n\r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Receta" class="family-500 size-14">Recetas M\xe9dicas</label>\r\n                                <select id="Receta" \r\n                                        class="form-control" \r\n                                        formControlName="recipe">\r\n                                  <option selected class="family-300">Seleccionar</option>\r\n                                  <option *ngFor="let item of recipes">{{ item.name }}</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Delivery" class="family-500 size-14">Delivery</label>\r\n                                <select id="Delivery" \r\n                                        class="form-control"\r\n                                        formControlName="delivery"\r\n                                        >\r\n                                        <option selected class="family-300">Seleccionar</option>\r\n                                        <option [value]="true">Si</option>\r\n                                        <option [value]="false">No</option>\r\n                                </select>\r\n                            </div>\r\n    \r\n                            <div class="form-group col-md-4">\r\n                                <label for="Disponible" class="family-500 size-14">Disponible</label>\r\n                                <select id="Disponible" \r\n                                        class="form-control"\r\n                                        formControlName="aviable"\r\n                                        >\r\n                                  <option selected class="family-300">Seleccionar</option>\r\n                                  <option [value]="true">Si</option>\r\n                                  <option [value]="false">No</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button class="btn btn-primary button fredoka" \r\n                                type="submit"\r\n                                (click)="Send()"\r\n                                [disabled]="!forma.valid"\r\n                                >\r\n                                Sincronizar\r\n                        </button>\r\n\r\n                    </section>\r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</section>\r\n'},Pbwx:function(r,e,o){"use strict";o.d(e,"a",(function(){return m}));var n=o("mrSG"),i=o("fXoL"),a=o("3Pt+"),s=o("rC9h"),t=o("tyNb"),l=o("GutY"),c=o("dNgK");class d{constructor(r,e,o,n,i,a,s,t,l,c){this.bank_id=r,this.store_id=e,this.price=o,this.stock=n,this.aviable=i,this.delivery=a,this.subcategory_id=s,this.mark=t,this.factory=l,this.recipe=c}}let m=class{constructor(r,e,o,n,i,s){this._productLoadingService=r,this._cd=e,this.router=o,this.route=n,this.sincronizacion=i,this.snackBar=s,this.hover=!1,this.icon=!1,this.IMG=[],this.myFlag=!1,this.File=[{image:null,name:null,position:null},{image:null,name:null,position:null},{image:null,name:null,position:null},{image:null,name:null,position:null}],this.route.params.subscribe(r=>{console.log(r),this.sincronizacion.GetBankProductSpecific(r.id).subscribe(r=>{console.log("Banck Product",r),this.myFlag=!0,this.bankId=r.id,this.sync="sync",this.valorForm=r,this.subcategoria=r.subcategories[0].name,this.subcategoriaId=r.subcategories[0].id,this._productLoadingService.GetCategoriasBancoProduct(this.valorForm.subcategories[0].category_id).subscribe(r=>{console.log("categorias",r),this.categoriaBanco=r.name}),this.forma.controls.name.setValue(this.valorForm.name),this.forma.controls.description.setValue(this.valorForm.description),this.forma.controls.mark.setValue(this.valorForm.marks[0].name),this.forma.controls.factory.setValue(this.valorForm.factories[0].name),1===r.images.length&&this.IMG.push(r.images[0].src_size.l),r.images.length>1&&r.images.length<=2&&(this.IMG.push(r.images[0].src_size.l),this.IMG.push(r.images[1].src_size.l)),r.images.length>2&&r.images.length<=3&&(this.IMG.push(r.images[0].src_size.l),this.IMG.push(r.images[1].src_size.l),this.IMG.push(r.images[2].src_size.l)),r.images.length>3&&r.images.length<=4&&(this.IMG.push(r.images[0].src_size.l),this.IMG.push(r.images[1].src_size.l),this.IMG.push(r.images[2].src_size.l),this.IMG.push(r.images[3].src_size.l)),r.images.length>4&&r.images.length<=5&&(this.IMG.push(r.images[0].src_size.l),this.IMG.push(r.images[1].src_size.l),this.IMG.push(r.images[2].src_size.l),this.IMG.push(r.images[3].src_size.l),this.IMG.push(r.images[4].src_size.l)),console.log("IMGPUSH",this.IMG),this.forma.get("name").disable(),this.forma.get("description").disable(),this.forma.get("mark").disable(),this.forma.get("factory").disable(),this.forma.get("category").disable(),this.forma.get("subcategory_id").disable(),this.forma.get("stock").setValue("1")})}),this.forma=new a.e({name:new a.d("",[a.p.required,a.p.minLength(5)]),description:new a.d("",[a.p.required,a.p.minLength(5)]),price:new a.d("",[a.p.required]),mark:new a.d(""),factory:new a.d(""),category:new a.d(this.categoriaBanco),subcategory_id:new a.d(""),delivery:new a.d("Seleccionar"),aviable:new a.d("Seleccionar"),stock:new a.d("",[a.p.required,a.p.minLength(1)]),recipe:new a.d("",[a.p.required]),file:new a.d(""),input0:new a.d(""),input1:new a.d(""),input2:new a.d(""),input3:new a.d(""),input4:new a.d("")})}ngOnInit(){this._productLoadingService.GetCategorias().subscribe(r=>(console.log(r),this.category=r)),this._productLoadingService.GetMark(localStorage.getItem("id")).subscribe(r=>{this.marks=r,console.log(this.marks)}),this._productLoadingService.GetFactories(localStorage.getItem("id")).subscribe(r=>{console.log("factories",r),this.factories=r}),this._productLoadingService.GetRecetaMedica(localStorage.getItem("id")).subscribe(r=>{this.recipes=r})}addProducts(){}onFileChange(r,e){const o=new FileReader;if(console.log(r),r.target.files&&r.target.files.length){const[n]=r.target.files;o.readAsDataURL(n),o.onload=()=>{this.forma.patchValue({file:o.result}),console.log("imagen",this.forma.value.file),this._cd.markForCheck(),this.File.splice(e,1,{image:this.forma.value.file,name:r.target.files[0].name,position:e+1}),console.log(this.File)}}}Send(){const r=new d(this.bankId,localStorage.getItem("storeId"),JSON.stringify(this.forma.value.price),this.forma.value.stock,this.forma.value.aviable,this.forma.value.delivery,this.subcategoriaId,this.valorForm.marks[0].name,this.valorForm.factories[0].name,this.forma.value.recipe);this.sincronizacion.SincronizarDesdeBancoPrdoducto(localStorage.getItem("id"),localStorage.getItem("storeId"),r).subscribe(r=>{console.log("sincronizo",r),this.snackBar.open("\xa1Su producto ha sido sincronizado exitosamente!","cerrar",{duration:4e3}),this.router.navigate(["/my-store/product-catalogue"])})}};m.ctorParameters=()=>[{type:s.a},{type:i.k},{type:t.c},{type:t.a},{type:l.a},{type:c.a}],m=Object(n.b)([Object(i.n)({selector:"app-form-banck-product-sync",template:Object(n.c)(o("KZuV")).default,styles:[Object(n.c)(o("T/x0")).default]})],m)},"PjJ/":function(r,e,o){"use strict";o.d(e,"a",(function(){return m}));var n=o("mrSG"),i=o("fXoL"),a=o("tyNb"),s=o("3Pt+"),t=o("rC9h"),l=o("ooDN"),c=o("GutY"),d=o("JqCM");let m=class{constructor(r,e,o,n,i,a,t){this._cd=r,this.storeService=e,this.route=o,this.router=n,this._productLoadingService=i,this.sincronizacion=a,this.spinnerService=t,this.myFlag=!1,this.IMG=[],this.delivery_estado=[{delivery_nombre:"Si",delivery:"true"},{delivery_nombre:"No",delivery:"false"}],this.disponibilidad_estado=[{disponibilidad_nombre:"Si",disponibilidad:"true"},{disponibilidad_nombre:"No",disponibilidad:"false"}],this.subcategory_estado=[{subcategoria_nombre:null,subcategoria:null}],this.route.params.subscribe(r=>{this.idProduct=r.id,console.log(r),this.storeService.getSpecificProduct(localStorage.getItem("id"),localStorage.getItem("storeId"),this.idProduct).subscribe(r=>{console.log("Datas",r),this.delivery=r.delivery,this.myFlag=!0,this.sync="sync",this.IdSync=r.sync_bank[0].id,this.valorForm=r,this.subCategoriaBanco=r.subcategories[0].name,console.log("SUBCATEGORIA DEFAULT",this.subCategoriaBanco),this.spinnerService.hide(),this._productLoadingService.GetCategoriasBancoProduct(this.valorForm.subcategories[0].category_id).subscribe(r=>{console.log("categorias",r),this.categoriaBanco=r.name,this._productLoadingService.GetSubcategorias(r.id).subscribe(r=>{console.log("sub",r),this.subcategory_estado.splice(0,1,{subcategoria_nombre:r[0].name,subcategoria:r[0].id}),console.log(this.subcategory_estado)})}),this.forma.controls.name.setValue(this.valorForm.name),this.forma.controls.description.setValue(this.valorForm.description),this.forma.controls.mark.setValue(this.valorForm.marks[0].name),this.forma.controls.factory.setValue(this.valorForm.factories[0].name),this.forma.controls.price.setValue(this.valorForm.price),this.forma.controls.stock.setValue(this.valorForm.stock),this.forma.controls.recipe.setValue(this.valorForm.recipes[0].name),this.forma.controls.subcategory_id.setValue(this.subcategory_estado[0].subcategoria),"true"===this.valorForm.delivery.delivery?(this.forma.controls.delivery.setValue(this.delivery_estado[0].delivery),console.log("Delivery",this.valorForm.delivery.delivery)):this.forma.controls.delivery.setValue(this.delivery_estado[1].delivery),"true"===this.valorForm.aviable?(this.forma.controls.aviable.setValue(this.disponibilidad_estado[0].disponibilidad),console.log("Disponibilidad",this.valorForm.aviable)):this.forma.controls.aviable.setValue(this.disponibilidad_estado[1].disponibilidad),1===r.sync_bank[0].images.length&&this.IMG.push(r.sync_bank[0].images[0].src_size.l),r.sync_bank[0].images.length>1&&r.sync_bank[0].images.length<=2&&(this.IMG.push(r.sync_bank[0].images[0].src_size.l),this.IMG.push(r.sync_bank[0].images[1].src_size.l)),r.sync_bank[0].images.length>2&&r.sync_bank[0].images.length<=3&&(this.IMG.push(r.sync_bank[0].images[0].src_size.l),this.IMG.push(r.sync_bank[0].images[1].src_size.l),this.IMG.push(r.sync_bank[0].images[2].src_size.l)),r.sync_bank[0].images.length>3&&r.sync_bank[0].images.length<=4&&(this.IMG.push(r.sync_bank[0].images[0].src_size.l),this.IMG.push(r.sync_bank[0].images[1].src_size.l),this.IMG.push(r.sync_bank[0].images[2].src_size.l),this.IMG.push(r.sync_bank[0].images[3].src_size.l)),r.sync_bank[0].images.length>4&&r.sync_bank[0].images.length<=5&&(this.IMG.push(r.sync_bank[0].images[0].src_size.l),this.IMG.push(r.sync_bank[0].images[1].src_size.l),this.IMG.push(r.sync_bank[0].images[2].src_size.l),this.IMG.push(r.sync_bank[0].images[3].src_size.l),this.IMG.push(r.sync_bank[0].images[4].src_size.l)),console.log("IMGPUSH",this.IMG),this.forma.get("name").disable(),this.forma.get("description").disable(),this.forma.get("mark").disable(),this.forma.get("factory").disable(),this.forma.get("category").disable(),this.forma.get("subcategory_id").disable(),this.forma.get("price").disable(),this.forma.get("delivery").disable(),this.forma.get("aviable").disable(),this.forma.get("stock").disable(),this.forma.get("recipe").disable()})}),this.forma=new s.e({name:new s.d("",[s.p.required,s.p.minLength(5)]),description:new s.d("",[s.p.required,s.p.minLength(5)]),price:new s.d("",[s.p.required,s.p.minLength(1)]),mark:new s.d(""),factory:new s.d("Seleccionar"),category:new s.d("",[s.p.required]),subcategory_id:new s.d("",[s.p.required]),delivery:new s.d(""),aviable:new s.d(""),stock:new s.d("",[s.p.required,s.p.minLength(1)]),recipe:new s.d("Seleccionar",[s.p.required]),file:new s.d(""),input0:new s.d(""),input1:new s.d(""),input2:new s.d(""),input3:new s.d(""),input4:new s.d("")})}ngOnInit(){this._productLoadingService.GetCategorias().subscribe(r=>(console.log(r),this.category=r)),this._productLoadingService.GetMark(localStorage.getItem("id")).subscribe(r=>{this.marks=r,console.log(this.marks)}),this._productLoadingService.GetFactories(localStorage.getItem("id")).subscribe(r=>{console.log("factories",r),this.factories=r}),this._productLoadingService.GetRecetaMedica(localStorage.getItem("id")).subscribe(r=>{this.recipes=r}),this.spinner()}spinner(){this.spinnerService.show()}addProducts(){}onChange(r){for(let e=0;e<this.category.length;e++)this.category[e].name===r&&this._productLoadingService.GetSubcategorias(this.category[e].id).subscribe(r=>(console.log("sub",r),this.subcategory=r))}Subcategory(r){console.log("Log",r);for(let e=0;e<this.subcategory.length;e++)this.subcategory[e].name===r&&console.log(this.subcategory[e].id)}Send(){this.sincronizacion.Desincronizar(localStorage.getItem("id"),localStorage.getItem("storeId"),this.idProduct,this.IdSync).subscribe(r=>{console.log(r)})}};m.ctorParameters=()=>[{type:i.k},{type:l.a},{type:a.a},{type:a.c},{type:t.a},{type:c.a},{type:d.b}],m=Object(n.b)([Object(i.n)({selector:"app-desincronizar",template:Object(n.c)(o("+xFH")).default,styles:[Object(n.c)(o("qcUj")).default]})],m)},"T/x0":function(r,e,o){"use strict";o.r(e),e.default="figure{position: relative;}\r\nhr{color: rgb(180, 179, 179)}\r\n.hiden{display: none;}\r\n.text-area{min-height: 124px;}\r\n.Display{display: block;}\r\n.height{min-height: 431.36px;}\r\n.figure__icon.material-icons{position: absolute;left: 60%;top: 8%;}\r\n.figure{position: absolute;left: 80%;top: 8%;}\r\n.figure__input{\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    display: flex;\r\n    height: 100%;\r\n    z-index: 3;\r\n    opacity: 0;\r\n}\r\n.card:hover{\r\n    opacity: .6;\r\n    background-color: #fff;\r\n    color: #333;\r\n    border-radius: 4px;\r\n    box-shadow: 0 1px 1px 0 rgba(0,0,0,.3), 0 -1px 8px 0 rgba(0,0,0,.3);\r\n    position: relative;\r\n}\r\n.icon-gris{color: #aeaeb8 !important;}\r\n@media (min-width:1201px){\r\n    .card-columns {\r\n        -moz-column-count: 4 !important;\r\n        column-count: 4;\r\n        -moz-column-gap: 1.25rem;\r\n        column-gap: 1.25rem;\r\n        orphans: 1;\r\n        widows: 1;\r\n    }\r\n}\r\n@media (min-width: 993px) and (max-width:1200px){\r\n    .card-columns {\r\n        -moz-column-count: 3 !important;\r\n        column-count: 3;\r\n        -moz-column-gap: 1.25rem;\r\n        column-gap: 1.25rem;\r\n        orphans: 1;\r\n        widows: 1;\r\n    }\r\n}\r\n@media (min-width:768px) and (max-width:992px){\r\n    .card-columns {\r\n        -moz-column-count: 2 !important;\r\n        column-count: 2;\r\n        -moz-column-gap: 1.25rem;\r\n        column-gap: 1.25rem;\r\n        orphans: 1;\r\n        widows: 1;\r\n    }\r\n}\r\n@media (min-width:100) and (max-width:767px){\r\n    .card-columns {\r\n        -moz-column-count: 2 !important;\r\n        column-count: 2;\r\n        -moz-column-gap: 1.25rem;\r\n        column-gap: 1.25rem;\r\n        orphans: 1;\r\n        widows: 1;\r\n    }\r\n}\r\n.plus{\r\n    color: #34ad16;\r\n}\r\n\r\n\r\n\r\n"},WRq6:function(r,e,o){"use strict";o.r(e),e.default=""},o5Hy:function(r,e,o){"use strict";o.d(e,"a",(function(){return p}));var n=o("mrSG"),i=o("fXoL"),a=o("tyNb"),s=o("3Pt+"),t=o("rC9h"),l=o("yx3P"),c=o("ooDN"),d=o("GutY"),m=o("JqCM"),g=o("dNgK");let p=class{constructor(r,e,o,n,i,a,t,l){this._cd=r,this.storeService=e,this.route=o,this.router=n,this._productLoadingService=i,this.sincronizacion=a,this.spinnerService=t,this._snackBar=l,this.myFlag=!1,this.IMG=[],this.delivery_estado=[{delivery_nombre:"Si",delivery:"true"},{delivery_nombre:"No",delivery:"false"}],this.disponibilidad_estado=[{disponibilidad_nombre:"Si",disponibilidad:"true"},{disponibilidad_nombre:"No",disponibilidad:"false"}],this.subcategory_estado=[{subcategoria_nombre:null,subcategoria:null}],this.route.params.subscribe(r=>{this.idProduct=r.id,console.log(r),this.storeService.getSpecificProduct(localStorage.getItem("id"),localStorage.getItem("storeId"),this.idProduct).subscribe(r=>{console.log("Datas",r),this.delivery=r.delivery,this.myFlag=!0,this.sync="sync",this.valorForm=r,this.spinnerService.hide(),this.subCategoriaBanco=r.subcategories[0].name,console.log("SUBCATEGORIA DEFAULT",this.subCategoriaBanco),this._productLoadingService.GetCategoriasBancoProduct(this.valorForm.subcategories[0].category_id).subscribe(r=>{console.log("categorias",r),this.categoriaBanco=r.name,this._productLoadingService.GetSubcategorias(r.id).subscribe(r=>{console.log("sub",r),this.subcategory_estado.splice(0,1,{subcategoria_nombre:r[0].name,subcategoria:r[0].id}),console.log(this.subcategory_estado)})}),this.forma.controls.name.setValue(this.valorForm.name),this.forma.controls.description.setValue(this.valorForm.description),this.forma.controls.mark.setValue(this.valorForm.marks[0].name),this.forma.controls.factory.setValue(this.valorForm.factories[0].name),this.forma.controls.price.setValue(this.valorForm.price),this.forma.controls.stock.setValue(this.valorForm.stock),this.valorForm.recipes.length>0&&this.forma.controls.recipe.setValue(this.valorForm.recipes[0].name),this.forma.controls.subcategory_id.setValue(this.subcategory_estado[0].subcategoria),"true"===this.valorForm.delivery?(this.forma.controls.delivery.setValue(this.delivery_estado[0].delivery),console.log("Delivery",this.valorForm.delivery)):this.forma.controls.delivery.setValue(this.delivery_estado[1].delivery),"true"===this.valorForm.aviable?(this.forma.controls.aviable.setValue(this.disponibilidad_estado[0].disponibilidad),console.log("Disponibilidad",this.valorForm.aviable)):this.forma.controls.aviable.setValue(this.disponibilidad_estado[1].disponibilidad),1===r.sync_bank[0].images.length&&this.IMG.push(r.sync_bank[0].images[0].src_size.l),r.sync_bank[0].images.length>1&&r.sync_bank[0].images.length<=2&&(this.IMG.push(r.sync_bank[0].images[0].src_size.l),this.IMG.push(r.sync_bank[0].images[1].src_size.l)),r.sync_bank[0].images.length>2&&r.sync_bank[0].images.length<=3&&(this.IMG.push(r.sync_bank[0].images[0].src_size.l),this.IMG.push(r.sync_bank[0].images[1].src_size.l),this.IMG.push(r.sync_bank[0].images[2].src_size.l)),r.sync_bank[0].images.length>3&&r.sync_bank[0].images.length<=4&&(this.IMG.push(r.sync_bank[0].images[0].src_size.l),this.IMG.push(r.sync_bank[0].images[1].src_size.l),this.IMG.push(r.sync_bank[0].images[2].src_size.l),this.IMG.push(r.sync_bank[0].images[3].src_size.l)),r.sync_bank[0].images.length>4&&r.sync_bank[0].images.length<=5&&(this.IMG.push(r.sync_bank[0].images[0].src_size.l),this.IMG.push(r.sync_bank[0].images[1].src_size.l),this.IMG.push(r.sync_bank[0].images[2].src_size.l),this.IMG.push(r.sync_bank[0].images[3].src_size.l),this.IMG.push(r.sync_bank[0].images[4].src_size.l)),console.log("IMGPUSH",this.IMG),this.forma.get("name").disable(),this.forma.get("description").disable(),this.forma.get("mark").disable(),this.forma.get("factory").disable(),this.forma.get("category").disable(),this.forma.get("subcategory_id").disable()})}),this.forma=new s.e({name:new s.d("",[s.p.required,s.p.minLength(5)]),description:new s.d("",[s.p.required,s.p.minLength(5)]),price:new s.d("",[s.p.required,s.p.minLength(1)]),mark:new s.d(""),factory:new s.d("Seleccionar"),category:new s.d("",[s.p.required]),subcategory_id:new s.d("",[s.p.required]),delivery:new s.d(""),aviable:new s.d(""),stock:new s.d("",[s.p.required,s.p.minLength(1)]),recipe:new s.d("Seleccionar",[s.p.required]),file:new s.d(""),input0:new s.d(""),input1:new s.d(""),input2:new s.d(""),input3:new s.d(""),input4:new s.d("")})}ngOnInit(){this.spinner(),this._productLoadingService.GetCategorias().subscribe(r=>(console.log(r),this.category=r)),this._productLoadingService.GetMark(localStorage.getItem("id")).subscribe(r=>{this.marks=r,console.log(this.marks)}),this._productLoadingService.GetFactories(localStorage.getItem("id")).subscribe(r=>{console.log("factories",r),this.factories=r}),this._productLoadingService.GetRecetaMedica(localStorage.getItem("id")).subscribe(r=>{this.recipes=r})}spinner(){this.spinnerService.show()}onChange(r){for(let e=0;e<this.category.length;e++)this.category[e].name===r&&this._productLoadingService.GetSubcategorias(this.category[e].id).subscribe(r=>(console.log("sub",r),this.subcategory=r))}Subcategory(r){console.log("Log",r);for(let e=0;e<this.subcategory.length;e++)this.subcategory[e].name===r&&console.log(this.subcategory[e].id)}addProducts(){}openDialog(){}Send(){const r=new l.b(this.forma.value.name,this.forma.value.description,this.forma.value.price,this.forma.value.mark,this.forma.value.factory,this.forma.value.category,this.forma.value.subcategory_id,this.forma.value.delivery,this.forma.value.aviable,this.forma.value.stock,this.forma.value.recipe);this._productLoadingService.EditProduct(localStorage.getItem("id"),localStorage.getItem("storeId"),this.idProduct,r).subscribe(r=>{this._snackBar.open("Se ha editado el producto","Cerrar",{duration:2e3}),this.router.navigate(["/my-store/product-catalogue"]),console.log(r)})}};p.ctorParameters=()=>[{type:i.k},{type:c.a},{type:a.a},{type:a.c},{type:t.a},{type:d.a},{type:m.b},{type:g.a}],p=Object(n.b)([Object(i.n)({selector:"app-edit-sincronizacion",template:Object(n.c)(o("8vPT")).default,styles:[Object(n.c)(o("WRq6")).default]})],p)},qcUj:function(r,e,o){"use strict";o.r(e),e.default=""},qwrm:function(r,e,o){"use strict";o.r(e),o.d(e,"ChildRoutesModule",(function(){return h}));var n=o("mrSG"),i=o("fXoL"),a=o("tyNb"),s=o("OC9g"),t=o("lU8z"),l=o("4WaO"),c=o("Pbwx"),d=o("X3Gz"),m=o("o5Hy"),g=o("1TV5"),p=o("PjJ/");const u=[{path:"contact",component:s.a},{path:"product-catalogue",component:l.a,data:{title:"Founduss | Cat\xe1logo de Productos"}},{path:"load-product",component:t.a},{path:"sync-this-product/:id",component:c.a},{path:"edit-product-sync/:id",component:m.a},{path:"desincronizar/:id",component:p.a},{path:"edit/:id",component:d.a},{path:"edit-product/:id",component:g.a},{path:"sincronizacion",loadChildren:()=>o.e(6).then(o.bind(null,"2GZl")).then(r=>r.SincronizacionModule)},{path:"**",pathMatch:"full",redirectTo:"contact"}];let h=class{};h=Object(n.b)([Object(i.M)({imports:[a.d.forChild(u)],exports:[a.d]})],h)}}]);