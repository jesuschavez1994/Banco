{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Login/Logins/login-usuario.component.ts","webpack:///src/app/Login/Logins/login-usuario.component.html","webpack:///src/app/Login/auth/auth.actions.ts","webpack:///src/app/Login/auth/auth.reducer.ts","webpack:///src/app/Login/login.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.reducer.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/components/banner-tienda/banner-tienda.component.ts","webpack:///src/app/components/banner-tienda/banner-tienda.component.html","webpack:///src/app/components/buttom-google-sesion/buttom-google-sesion.component.ts","webpack:///src/app/components/buttom-google-sesion/buttom-google-sesion.component.html","webpack:///src/app/components/card-shimmer-detalle-producto/card-shimmer-detalle-producto.component.ts","webpack:///src/app/components/card-shimmer-detalle-producto/card-shimmer-detalle-producto.component.html","webpack:///src/app/components/card-shimmer/card-shimmer.component.ts","webpack:///src/app/components/card-shimmer/card-shimmer.component.html","webpack:///src/app/components/components.module.ts","webpack:///src/app/components/detalle-producto/detalle-producto.component.ts","webpack:///src/app/components/detalle-producto/detalle-producto.component.html","webpack:///src/app/components/loading/loading.component.ts","webpack:///src/app/components/loading/loading.component.html","webpack:///src/app/components/terminos-condiciones/terminos-condiciones.component.ts","webpack:///src/app/components/terminos-condiciones/terminos-condiciones.component.html","webpack:///src/app/config/config.ts","webpack:///src/app/form-register/buttom-google-register/buttom-google-register.component.ts","webpack:///src/app/form-register/buttom-google-register/buttom-google-register.component.html","webpack:///src/app/form-register/form-data-negocio/form-data-negocio.component.ts","webpack:///src/app/form-register/form-data-negocio/form-data-negocio.component.html","webpack:///src/app/form-register/form-data-usuario/form-data-usuario.component.ts","webpack:///src/app/form-register/form-data-usuario/form-data-usuario.component.html","webpack:///src/app/form-register/formulario-register.module.ts","webpack:///src/app/form-register/rut-store/rut-store.component.ts","webpack:///src/app/form-register/rut-store/rut-store.component.html","webpack:///src/app/models/avatar.model.ts","webpack:///src/app/models/dataStore.model.ts","webpack:///src/app/models/models-@ngrx/userStore.models.ts","webpack:///src/app/models/rut.model.ts","webpack:///src/app/models/usuario.model.ts","webpack:///src/app/pages/components/public-views/public-views.component.ts","webpack:///src/app/pages/components/public-views/public-views.component.html","webpack:///src/app/pages/pages.module.ts","webpack:///src/app/pipes/imagen.pipe.ts","webpack:///src/app/pipes/pipes.module.ts","webpack:///src/app/pipes/producto.pipe.ts","webpack:///src/app/services/Interceotores/interceptor.service.ts","webpack:///src/app/services/guards/login-guard.guard.ts","webpack:///src/app/services/service.module.ts","webpack:///src/app/services/servicio.service.ts","webpack:///src/app/services/store/store.service.ts","webpack:///src/app/services/user-store/user-store.service.ts","webpack:///src/app/services/usuario/usuario.service.ts","webpack:///src/app/shared/categorias/categorias.component.ts","webpack:///src/app/shared/categorias/categorias.component.html","webpack:///src/app/shared/header/navbarstore.component.ts","webpack:///src/app/shared/header/navbarstore.component.html","webpack:///src/app/shared/navbar-to-home/navbar-to-home.component.ts","webpack:///src/app/shared/navbar-to-home/navbar-to-home.component.html","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/sidebar/sidebar.component.ts","webpack:///src/app/shared/sidebar/sidebar.component.html","webpack:///src/app/shared/ui.accions.ts","webpack:///src/app/shared/ui.reducer.ts","webpack:///src/app/views/terminos-ycondiciones/terminos-ycondiciones.component.ts","webpack:///src/app/views/terminos-ycondiciones/terminos-ycondiciones.component.html","webpack:///src/app/vistas-privadas/account/account.component.ts","webpack:///src/app/vistas-privadas/account/account.component.html","webpack:///src/app/vistas-privadas/classes/marcador.class.ts","webpack:///src/app/vistas-privadas/components/contact-description-edit/contact-description-edit.component.html","webpack:///src/app/vistas-privadas/components/contact-description-edit/contact-description-edit.component.ts","webpack:///src/app/vistas-privadas/components/contact-description/contact-description.component.html","webpack:///src/app/vistas-privadas/components/contact-description/contact-description.component.ts","webpack:///src/app/vistas-privadas/components/contact-information-edit/contact-information-edit.component.html","webpack:///src/app/vistas-privadas/components/contact-information-edit/contact-information-edit.component.ts","webpack:///src/app/vistas-privadas/components/contact-information/contact-information.component.html","webpack:///src/app/vistas-privadas/components/contact-information/contact-information.component.ts","webpack:///src/app/vistas-privadas/components/map-editar/map-editar.component.ts","webpack:///src/app/vistas-privadas/components/map-editar/map-editar.component.html","webpack:///src/app/vistas-privadas/components/mapa/mapa.component.ts","webpack:///src/app/vistas-privadas/components/mapa/mapa.component.html","webpack:///src/app/vistas-privadas/components/photo-user-edit/photo-user-edit.component.ts","webpack:///src/app/vistas-privadas/components/photo-user-edit/photo-user-edit.component.html","webpack:///src/app/vistas-privadas/components/photo-user/photo-user.component.ts","webpack:///src/app/vistas-privadas/contact/contact.component.html","webpack:///src/app/vistas-privadas/contact/contact.component.ts","webpack:///src/app/vistas-privadas/dashboard/dashboard.component.ts","webpack:///src/app/vistas-privadas/form-account/form-account.component.ts","webpack:///src/app/vistas-privadas/form-account/form-account.component.html","webpack:///src/app/vistas-privadas/privateview.module.ts","webpack:///src/app/vistas-privadas/shared/aside/aside.component.ts","webpack:///src/app/vistas-privadas/shared/aside/aside.component.html","webpack:///src/app/vistas-privadas/view.routes.ts","webpack:///src/app/vistas-publicas/Registers/Usuario/register.component.ts","webpack:///src/app/vistas-publicas/Registers/Usuario/register.component.html","webpack:///src/app/vistas-publicas/home/home.component.ts","webpack:///src/app/vistas-publicas/home/home.component.html","webpack:///src/app/vistas-publicas/vistas-publicas.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","LoginUsuarioComponent","usuarioServices","router","store","isChecked","forma","email","required","pattern","password","minLength","recuerdame","subscription","select","subscribe","ui","cargando","isLoading","localStorage","getItem","length","unsubscribe","dispatch","console","log","value","usuario","username","name","login","resp","guardarStorage","remember_token","user","navigate","token","setItem","loginRegister","Ingresar","selector","templateUrl","styleUrls","SET_USER","SetUserAction","type","estadoInicial","authReducer","state","action","LoginModule","declarations","imports","routes","AppRoutingModule","forRoot","AppComponent","title","AppModule","instrument","maxAge","logOnly","production","apiKey","providers","bootstrap","appReducers","auth","APP_ROUTES","path","component","canActivate","children","pathMatch","redirectTo","APP_ROUTING","useHash","BannerTiendaComponent","ButtomGoogleSesionComponent","googleInit","JSON","stringify","gapi","load","auth2","init","clienye_id","cookiepolicy","scope","attachSignin","document","getElementById","element","attachClickHandler","googleUser","profile","getBasicProfile","getAuthResponse","id_token","loginGoogle","getName","getEmail","getId","getImageUrl","google","CardShimmerDetalleProductoComponent","CardShimmerComponent","ComponentsModule","DetalleProductoComponent","activatedRoute","publicViews","services","producto","loadcard","params","getproducto","setTimeout","LoadingComponent","TerminosCondicionesComponent","URL_SERVICIOS","ButtomGoogleRegisterComponent","role","RegisterGoogle","FormDataNegocioComponent","storeServices","password1","password2","terminos","controls","setValidators","noIgual","bind","control","noiguales","crearStore","registrarNegocio","registrar","FormDataUsuarioComponent","loadding","nombre","correo","promesa","reject","existe","crearUsuario","res","registrarUsuario","FormularioRegisterModule","RutStoreComponent","storageService","rut","maxLength","RazonSocialYRut","registroRut","registrarRut","Avatar","avatar","DataStore","social_reason","description","email_1","email_2","phone_1","phone_2","webside","direction","facebook","instagram","twitter","address_latitude","address_longitude","UserStore","obj","RegistroEmpresa","user_id","Usuario","phone","adress_latitude","adress_longitude","PublicViewsComponent","themovie","activatedRouted","PeliculasRecientes","oculto","overflow","loading","getFeatures","data","results","termino","buscarProducto","valor","event","target","buscar","PagesModule","URL","ImagenPipe","img","size","imgUrl","PipesModule","ProductoPipe","InterceptorService","next","headers","Authorization","Accept","reqClone","clone","handle","providedIn","LoginGuardGuard","storeService","estaLogueado","ServiceModule","provide","useClass","multi","url","ServicioService","http","query","get","ejecutarQuery","texto","StoreService","cargarStorage","post","parse","postQuery","userStore","respServidor","storeconnect","err","error","errors","register","nameStore","window","location","href","execQuery","removeItem","httpOptions","UserStoreService","put","putQuery","userId","map","Options","UsuarioService","guardarStorageGoogle","recordar","archivo","subirArchivo","CategoriasComponent","NavbarstoreComponent","usuarioService","userStoreServices","datosUsuario","getStore","push","datosUserImages","Response","IMG_USER","src","NavbarToHomeComponent","NavbarComponent","SharedModule","SidebarComponent","ACTIVAR_LOADING","DESACTIVAR_LOADING","ActivarLoadingAction","DesactivarLoadingAction","initState","uiReducer","TerminosYCondicionesComponent","AccountComponent","items","Userstore","ActualizarUsuarioNegocio","usuarioActualizado","usuarioDB","reset","Marcador","lat","lng","titulo","desc","ContactDescriptionEditComponent","User","toObject","dataStore","dataStoreEdit","getStoreAccountEdit","traerdata","getDataStore","ContactDescriptionComponent","dialog","ContactInformationEditComponent","formBuilder","redesSociales","contact","social","ContactInformationComponent","MapEditarComponent","fb","dialogRef","close","formEditMapa","guardarCambios","onNoClick","MapaComponent","snackBar","marcadores","latitud","longitud","adrees_latitude","coords","nuevoMarcador","emit","open","duration","i","splice","marcador","width","afterClosed","result","agregarMarcadores","PhotoUserEditComponent","imageChangedEvent","croppedImage","textFooterImages","mostrarAvatar","spinner","mostarComponent","cropper","GetAvatar","base64","setValue","cambiarImagen","CropperImg","fileChangeEvent","PhotoUserComponent","ContactComponent","editar","editarDescripcion","traerIdStore","ActualizarDataStore","adress_lat","adress_lng","actualizarDatosStore","Actualizar","DashboardComponent","getUserConnet","FormAccountComponent","PrivateviewModule","entryComponents","AsideComponent","VIEW_ROUTES","VIEW_ROUTING","RegisterComponent","HomeComponent","VistasPublicasModule","environment","imgPath","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { Usuario } from '../../models/usuario.model';\r\nimport { UsuarioService } from '../../services/usuario/usuario.service';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../app.reducer';\r\nimport { ActivarLoadingAction, DesactivarLoadingAction } from '../../shared/ui.accions';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-usuario',\r\n  templateUrl: './login-usuario.component.html',\r\n  styleUrls: ['./login-usuario.component.css']\r\n})\r\nexport class LoginUsuarioComponent implements OnInit, OnDestroy {\r\n\r\n  email: string;\r\n  forma: FormGroup;\r\n  isChecked: boolean = false;\r\n  cargando: boolean;\r\n  subscription: Subscription;\r\n\r\n  usuario: Usuario;\r\n  token: string;\r\n\r\n  constructor( public usuarioServices: UsuarioService,\r\n               public router: Router,\r\n               private store: Store<AppState>\r\n              )\r\n  {\r\n\r\n    this.forma = new FormGroup({\r\n      email: new FormControl('' , [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n      recuerdame: new FormControl(''),\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.subscription = this.store.select('ui').subscribe( ui => {\r\n      this.cargando =  ui.isLoading;\r\n     });\r\n\r\n    this.email = localStorage.getItem('email') || '';\r\n    if ( this.email.length > 1 ) {\r\n      this.isChecked = true;\r\n    }\r\n\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  loginRegister(){\r\n\r\n  }\r\n\r\n  Ingresar() {\r\n\r\n    this.store.dispatch( new ActivarLoadingAction() );\r\n\r\n    console.log(this.forma.value);\r\n    // tslint:disable-next-line: prefer-const\r\n    let usuario = new Usuario(\r\n      this.forma.value.username = null,\r\n      this.forma.value.name = null,\r\n      this.forma.value.email,\r\n      this.forma.value.password\r\n    );\r\n\r\n    this.usuarioServices.login(usuario, this.forma.value.recuerdame).subscribe( (resp: any) => {\r\n      console.log(this.forma.value.recuerdame);\r\n      this.guardarStorage(resp.remember_token, resp.user.id);\r\n      console.log(resp);\r\n      this.router.navigate(['/account']);\r\n      this.store.dispatch( new DesactivarLoadingAction() );\r\n    });\r\n\r\n  }\r\n\r\n  guardarStorage(token: string, id: string){\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('id', id);\r\n    this.token = token;\r\n  }\r\n\r\n}\r\n","<!-- Menú redirect to home -->\r\n<app-navbar-to-home></app-navbar-to-home>\r\n<!-- End menú redirect to home -->\r\n\r\n<div class=\"container animated fadeIn\">\r\n    <div class=\"row display-flex align-items-center justify-content-center height-100vh\">\r\n\r\n        \r\n        <div class=\"col-10 col-sm-9 col-md-7 col-lg-5 col-xl-4 box height sobreEncima\">\r\n\r\n            <div class=\"display-flex justify-content-center img-login\">\r\n                <img class=\"user-naranja\" src=\"../../../assets/img/LoginIconos/user naranja.svg\">\r\n            </div>\r\n            \r\n            <form [formGroup]=\"forma\"  (ngSubmit)=\"loginRegister()\" novalidate=\"novalidate\" class=\"formGroup\">\r\n\r\n                <div class=\"form-group row mb-4 mt-5\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"fredoka\">Inicio de sesión</h5>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--Iniciar sesión por Google-->\r\n                <app-buttom-google-sesion [text]=\"['Inisiar sesión con google']\"></app-buttom-google-sesion>\r\n                <!--End Iniciar sesión por Google-->\r\n                \r\n                <div class=\"form-group row\">\r\n                    <div class=\"input-group col-md-12 justify-content-space-between\">\r\n                        <p class=\"line-low mt-3\"></p>\r\n                        <p class=\"line-low mt-3\"></p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row mb-4\">\r\n                    <div class=\"col-12\">\r\n                        <input  class=\"form-control correo-icon\"\r\n                                type=\"email\"\r\n                                placeholder=\"Ingrese el correo\"\r\n                                formControlName=\"email\"\r\n                                [ngModel]=\"email\"  \r\n                                [ngClass]=\"{'is-invalid':  (!forma.controls['email'].valid || forma.controls['email'].errors?.minlength)&& forma.controls['email'].touched, 'is-valid': forma.controls['email'].valid }\"\r\n                        >\r\n              \r\n                        <div    *ngIf=\"forma.get('email').errors?.required\"  \r\n                                class=\"invalid-feedback\">\r\n                                Este campo es requerido\r\n                        </div>\r\n                        <div    *ngIf=\"forma.get('email').errors?.pattern\"  \r\n                                class=\"invalid-feedback\">\r\n                                No posee la forma de un correo: example@gmail.com\r\n                        </div> \r\n            \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row mb-4\">\r\n                    <div class=\"col-12\">\r\n                        <input  class=\"form-control password-icon\"\r\n                                type=\"password\"\r\n                                placeholder=\"contraseña\"\r\n                                formControlName=\"password\"\r\n                                [ngClass]=\"{'is-invalid':  (!forma.get('password').valid || forma.get('password').errors?.minlength)&& forma.get('password').touched, 'is-valid': forma.get('password').valid }\"\r\n                        >\r\n\r\n                        <div    *ngIf=\"forma.get('password').errors?.required\"  \r\n                                class=\"invalid-feedback\">\r\n                                Este campo es requerido\r\n                        </div>\r\n                        <div    *ngIf=\"forma.get('password').errors?.minlength\"  \r\n                                class=\"invalid-feedback\">\r\n                                La contraseña debe tener al menos 8 caracteres\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-md-12 links-recordar-olvidar\">\r\n                        <div class=\"checkbox checkbox-primary pull-left p-t-0\">\r\n                            <input  name=\"recuerdame\" \r\n                                    id=\"checkbox-signup\" \r\n                                    type=\"checkbox\" \r\n                                    class=\"filled-in chk-col-light-blue\"\r\n                                    formControlName=\"recuerdame\"\r\n                                    [(ngModel)]=\"isChecked\"\r\n\r\n                            >\r\n                            <label for=\"checkbox-signup\" class=\"ml-2 family-500 recorder\"> Recordarme </label>\r\n                        </div>\r\n\r\n                        <a  id=\"to-recover\" class=\"pull-right family-500 recorder\"> \r\n                            Olvidé mi contraseña\r\n                        </a> \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                    <div class=\"input-group col-md-12\">\r\n                        <button [disabled]=\"!forma.valid\" \r\n                                type=\"submit\" \r\n                                id=\"RegisterForm\"\r\n                                class=\"btn btn-block fredoka orange\"\r\n                                (click)=\"Ingresar()\">\r\n                                Entrar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group mb-5 mt-5\">\r\n                    <div class=\"col-sm-12 text-center\">\r\n\r\n                        <span class=\"family-500 recorder\">\r\n                            ¿Aún no tienes cuenta?\r\n                        </span> \r\n                        <a routerLink=\"/register\" class=\"family-700 black ml-2 fredoka\">\r\n                            <small class=\"size-13\">\r\n                                REGÍSTRATE AQUÍ\r\n                            </small>\r\n                        </a>\r\n\r\n                    </div>\r\n                </div>\r\n                <!--                                 \r\n                {{forma.valid}}\r\n                <br>\r\n                <pre>\r\n                    {{forma.value | json}}\r\n                </pre>  -->\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Action } from '@ngrx/store';\r\nimport { UserStore } from '../../models/models-@ngrx/userStore.models';\r\nexport const SET_USER = '[Auth] Set user';\r\n\r\nexport class SetUserAction implements Action {\r\n    readonly type = SET_USER;\r\n\r\n    constructor(public user: UserStore){}\r\n}\r\n\r\nexport type actions = SetUserAction;\r\n","import * as fromAuth from './auth.actions';\r\nimport { UserStore } from '../../models/models-@ngrx/userStore.models';\r\n\r\nexport interface AuthState {\r\n    user: UserStore;\r\n}\r\n\r\nconst estadoInicial: AuthState = {\r\n    user: null\r\n};\r\n\r\nexport function authReducer( state = estadoInicial, action: fromAuth.actions): AuthState{\r\n\r\n    switch ( action.type){\r\n\r\n        case fromAuth.SET_USER:\r\n            return {\r\n                user: { ...action.user }\r\n            };\r\n\r\n        default:\r\n        return state;\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginUsuarioComponent } from './Logins/login-usuario.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { APP_ROUTING } from '../app.routes';\r\nimport { ComponentsModule } from '../components/components.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [LoginUsuarioComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    APP_ROUTING,\r\n    ComponentsModule,\r\n    SharedModule\r\n  ],\r\n  exports: [LoginUsuarioComponent]\r\n})\r\nexport class LoginModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'BancoDeProductos';\r\n}\r\n","<router-outlet></router-outlet> \r\n\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n// Servicios //\r\nimport { HttpClientModule  } from '@angular/common/http';\r\n// Rutas //\r\nimport { APP_ROUTING } from './app.routes';\r\n\r\n// Modulos Personalizados//\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { PipesModule } from './pipes/pipes.module';\r\n\r\nimport { ServiceModule } from './services/service.module';\r\nimport { FormularioRegisterModule } from './form-register/formulario-register.module';\r\nimport { VistasPublicasModule } from './vistas-publicas/vistas-publicas.module';\r\nimport { LoginModule } from './Login/login.module';\r\n\r\n// ngrx => PATRÓN REDUX//\r\nimport { StoreModule } from '@ngrx/store';\r\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\r\nimport { environment } from 'src/environments/environment';\r\nimport { appReducers } from './app.reducer';\r\nimport { AccountComponent } from './vistas-privadas/account/account.component';\r\nimport { VIEW_ROUTING } from './vistas-privadas/view.routes';\r\nimport { InterceptorService } from './services/Interceotores/interceptor.service';\r\nimport { PrivateviewModule } from './vistas-privadas/privateview.module';\r\n\r\n// Angular material //\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AccountComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ImageCropperModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    PipesModule,\r\n    APP_ROUTING,\r\n    VIEW_ROUTING,\r\n    PagesModule,\r\n    SharedModule,\r\n    ServiceModule,\r\n    FormularioRegisterModule,\r\n    VistasPublicasModule,\r\n    PrivateviewModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    LoginModule,\r\n    StoreModule.forRoot(appReducers),\r\n    StoreDevtoolsModule.instrument({\r\n      maxAge: 25,\r\n      logOnly: environment.production,\r\n    }),\r\n    AgmCoreModule.forRoot({\r\n      apiKey: 'AIzaSyDNOu2JQ001PxZY-GVwFvVou0_6h_Sj-14'\r\n    })\r\n  ],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import * as fromUI from './shared/ui.reducer';\r\nimport { ActionReducerMap } from '@ngrx/store';\r\nimport * as fromAuth from './Login/auth/auth.reducer';\r\n\r\nexport interface AppState {\r\n    ui: fromUI.State;\r\n    auth: fromAuth.AuthState;\r\n}\r\n\r\nexport const appReducers: ActionReducerMap<AppState> = {\r\n    ui: fromUI.uiReducer,\r\n    auth: fromAuth.authReducer\r\n};\r\n\r\n\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { PublicViewsComponent } from './pages/components/public-views/public-views.component';\r\nimport { TerminosYCondicionesComponent } from './views/terminos-ycondiciones/terminos-ycondiciones.component';\r\nimport { DetalleProductoComponent } from './components/detalle-producto/detalle-producto.component';\r\nimport { LoginUsuarioComponent } from './Login/Logins/login-usuario.component';\r\n// import { RegisterComponent } from './vistas-publicas/Registers/Usuario/register-usuario/register/register.component';\r\nimport { FormDataNegocioComponent } from './form-register/form-data-negocio/form-data-negocio.component';\r\nimport { DashboardComponent } from './vistas-privadas/dashboard/dashboard.component';\r\nimport { HomeComponent } from './vistas-publicas/home/home.component';\r\nimport { RegisterComponent } from './vistas-publicas/Registers/Usuario/register.component';\r\nimport { RutStoreComponent } from './form-register/rut-store/rut-store.component';\r\nimport { AccountComponent } from './vistas-privadas/account/account.component';\r\nimport { LoginGuardGuard } from './services/guards/login-guard.guard';\r\nimport { ContactComponent } from './vistas-privadas/contact/contact.component';\r\nimport { ContactInformationEditComponent } from './vistas-privadas/components/contact-information-edit/contact-information-edit.component';\r\n\r\n\r\nconst APP_ROUTES: Routes = [\r\n\r\n    {path: 'home', component: HomeComponent},\r\n    {path: 'register', component: RegisterComponent},\r\n\r\n    {   path: 'register-negocio',\r\n        component: FormDataNegocioComponent,\r\n    },\r\n\r\n    {   path: 'rut-store',\r\n        component: RutStoreComponent,\r\n    },\r\n\r\n    {   path: 'account',\r\n        component: AccountComponent,\r\n        canActivate: [ LoginGuardGuard ],\r\n    },\r\n\r\n    {   path: 'contact',\r\n        component: ContactComponent,\r\n        canActivate: [ LoginGuardGuard ],\r\n        children: [\r\n            { path: 'contact-information-edit', component: ContactInformationEditComponent},\r\n        ]\r\n    },\r\n\r\n    {path: 'login-usuario', component: LoginUsuarioComponent},\r\n    {path: 'dashboard', component: DashboardComponent},\r\n    {path: 'terminos-ycondiciones', component: TerminosYCondicionesComponent},\r\n    {\r\n        path: 'public-views',\r\n        component: PublicViewsComponent,\r\n        children: [\r\n            { path: 'detalle-producto/:id', component: DetalleProductoComponent},\r\n        ]\r\n    },\r\n    // { path: 'detalle-producto/:id', component: ViewProductoComponent},\r\n\r\n    { path: '**', pathMatch: 'full', redirectTo: 'home' }\r\n];\r\n\r\nexport const APP_ROUTING = RouterModule.forRoot(APP_ROUTES, {useHash: true});\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-banner-tienda',\r\n  templateUrl: './banner-tienda.component.html',\r\n  styleUrls: ['./banner-tienda.component.css']\r\n})\r\nexport class BannerTiendaComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container animated fadeIn fast\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <img src=\"assets/img/Banner/bannercomponents.jpeg\" width=\"100%\">\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { UsuarioService } from '../../services/usuario/usuario.service';\r\nimport { Usuario } from '../../models/usuario.model';\r\n\r\ndeclare const gapi: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-buttom-google-sesion',\r\n  templateUrl: './buttom-google-sesion.component.html',\r\n  styleUrls: ['./buttom-google-sesion.component.css']\r\n})\r\nexport class ButtomGoogleSesionComponent implements OnInit {\r\n\r\n  usuario: Usuario;\r\n  token: string;\r\n  google: any;\r\n\r\n  auth2: any;\r\n  @Input() text: string;\r\n\r\n  constructor(public usuarioServices: UsuarioService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.googleInit();\r\n\r\n  }\r\n\r\n  guardarStorage(usuario: string, email: string){\r\n    // localStorage.setItem('token', token);\r\n    localStorage.setItem('usuario', JSON.stringify(usuario));\r\n    localStorage.setItem('email', email);\r\n\r\n    //  this.usuario = usuario;\r\n    // this.token = token;\r\n  }\r\n\r\n  googleInit(){\r\n    gapi.load('auth2', () => {\r\n      this.auth2 = gapi.auth2.init({\r\n        clienye_id: '536569115758-6ncc5uh0o0hr6s6vmd06gn47bjiorre6.apps.googleusercontent.com',\r\n        cookiepolicy: 'single_host_origin',\r\n        scope: 'profile email'\r\n      });\r\n      this.attachSignin( document.getElementById('btnGoogle') );\r\n    });\r\n  }\r\n\r\n  attachSignin( element ) {\r\n    this.auth2.attachClickHandler( element, {}, (googleUser) => {\r\n      const profile = googleUser.getBasicProfile();\r\n      const token = googleUser.getAuthResponse().id_token;\r\n      console.log(token);\r\n      this.usuarioServices.loginGoogle(profile.getName(),\r\n        profile.getEmail(),\r\n        profile.getId(),\r\n        profile.getImageUrl()\r\n      ).subscribe( resp => {\r\n        this.google = resp;\r\n        console.log('Respuesta desde Google', this.google);\r\n        this.guardarStorage(this.google, this.google.email);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-group row\">\r\n    <div class=\"input-group col-md-12\">\r\n        <button type=\"button\" \r\n                id=\"btnGoogle\" \r\n                class=\"btn btn-googleplus btn-block family-400 form-control\" \r\n                data-toggle=\"tooltip\" \r\n                title=\"Iniciar sesión con Google\"\r\n                > \r\n                <i aria-hidden=\"true\" class=\"fa fa-google pr-2\"></i> \r\n                {{text}}\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card-shimmer-detalle-producto',\r\n  templateUrl: './card-shimmer-detalle-producto.component.html',\r\n  styleUrls: ['./card-shimmer-detalle-producto.component.scss']\r\n})\r\nexport class CardShimmerDetalleProductoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\" style=\"margin-top: 30px;\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"grid\">   \r\n        <div class='article-card-shimmer'>\r\n          <div class=\"shimmer shine article-card-shimmer__img\"></div>\r\n          <div class='article-card-shimmer__text'>\r\n            <div class=\"shimmer shine article-card-shimmer__category\"></div>\r\n            <div class=\"shimmer shine article-card-shimmer__title\"></div>\r\n            <div class=\"shimmer shine article-card-shimmer__title\"></div>\r\n            <div class=\"shimmer shine article-card-shimmer__title\"></div>\r\n          </div>\r\n        </div> \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-card-shimmer',\r\n  templateUrl: './card-shimmer.component.html',\r\n  styleUrls: ['./card-shimmer.component.scss']\r\n})\r\nexport class CardShimmerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n       <div class=\"col-md-12\">\r\n        <div class=\"grid\">\r\n            <div *ngFor=\"let cardShimmer of [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\">\r\n                <div class='article-card-shimmer'>\r\n                    <div class=\"shimmer shine article-card-shimmer__img\"></div>\r\n                    <div class='article-card-shimmer__text'>\r\n                      <div class=\"shimmer shine article-card-shimmer__category\"></div>\r\n                      <div class=\"shimmer shine article-card-shimmer__title\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n       </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { APP_ROUTING } from '../app.routes';\r\n\r\nimport { BannerTiendaComponent } from './banner-tienda/banner-tienda.component';\r\nimport { LoadingComponent } from './loading/loading.component';\r\nimport { CardShimmerComponent } from './card-shimmer/card-shimmer.component';\r\nimport { CardShimmerDetalleProductoComponent } from './card-shimmer-detalle-producto/card-shimmer-detalle-producto.component';\r\nimport { TerminosCondicionesComponent } from './terminos-condiciones/terminos-condiciones.component';\r\nimport { DetalleProductoComponent } from './detalle-producto/detalle-producto.component';\r\nimport { ButtomGoogleSesionComponent } from './buttom-google-sesion/buttom-google-sesion.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BannerTiendaComponent,\r\n    LoadingComponent,\r\n    CardShimmerComponent,\r\n    CardShimmerDetalleProductoComponent,\r\n    TerminosCondicionesComponent,\r\n    DetalleProductoComponent,\r\n    ButtomGoogleSesionComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    APP_ROUTING,\r\n  ],\r\n  exports: [\r\n    BannerTiendaComponent,\r\n    LoadingComponent,\r\n    CardShimmerComponent,\r\n    CardShimmerDetalleProductoComponent,\r\n    TerminosCondicionesComponent,\r\n    DetalleProductoComponent,\r\n    ButtomGoogleSesionComponent\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PublicViewsComponent } from '../../pages/components/public-views/public-views.component';\r\nimport { ServicioService } from '../../services/servicio.service';\r\n\r\n@Component({\r\n  selector: 'app-detalle-producto',\r\n  templateUrl: './detalle-producto.component.html',\r\n  styleUrls: ['./detalle-producto.component.css']\r\n})\r\nexport class DetalleProductoComponent implements OnInit {\r\n\r\n  producto: any = {};\r\n  loadcard: boolean;\r\n\r\n\r\n  constructor(  private activatedRoute: ActivatedRoute,\r\n                private publicViews: PublicViewsComponent,\r\n                private services: ServicioService\r\n              ) {\r\n\r\n    this.loadcard = true;\r\n    this.activatedRoute.params.subscribe( params => {\r\n      // tslint:disable-next-line: no-string-literal\r\n      this.services.getproducto(params['id']).subscribe( producto => {\r\n        setTimeout(() => {\r\n          this.producto = producto;\r\n          this.loadcard = false;\r\n        }, 2000);\r\n      });\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-card-shimmer-detalle-producto *ngIf=\"loadcard\"></app-card-shimmer-detalle-producto>\r\n<div class=\"container animated fadeIn mt-3\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card mb-5\" style=\"border: none;\">\r\n        <div class=\"row no-gutters\">\r\n          <div class=\"col-md-4\" style=\"height: 85%;\" >\r\n            <!-- \r\n              <img [src]=\"producto.poster_path | imagen\" class=\"card-img boxp\" height=\"85%\" alt=\"...\">\r\n             -->\r\n             <img [src]=\"producto.poster_path\" class=\"card-img boxp\" height=\"85%\" alt=\"...\">\r\n          </div>\r\n          <div class=\"col-md-8\">\r\n            <div class=\"card-body\" style=\"height: 100%;\">\r\n              <h5 class=\"card-title family-700\">{{producto.title}}</h5>\r\n              <p class=\"card-text family-400\">{{producto.overview}}</p>\r\n              <p class=\"family-500 size-18\">{{producto.vote_average | currency: 'USD':true}}</p> \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n    \r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.css']\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"row text-center animated fadeIn\">\r\n    <div class=\"col mb-5\">\r\n         <!-- <i class=\"fa fa-circle-notch fa-2x fa-spin\" style=\"color: rgb(140, 141, 141)\"></i> -->\r\n         <img src=\"../../../assets/img/gif/25.gif\">\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-terminos-condiciones',\r\n  templateUrl: './terminos-condiciones.component.html',\r\n  styleUrls: ['./terminos-condiciones.component.css']\r\n})\r\nexport class TerminosCondicionesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container animated fadeIn fast\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 col-12\">\r\n        <h1 class=\"family-600\">FOUNDUSS</h1>\r\n        <br>\r\n        <p>\r\n          “Términos, Condiciones Generales, políticas de privacidad para el uso del Portal Web”.\r\n        </p>\r\n        <br>\r\n        <h2>ACEPTACIÓN DE LOS TÉRMINOS, CONDICIONES GENERALES Y POLÍTICAS DE PRIVACIDAD</h2>\r\n        <br>\r\n        <p>\r\n          Lea con detenimiento los términos y condiciones de este acuerdo antes de descargar, instalar o usar cualquier producto o características proporcionadas por FOUNDUSS, C.A. Al elegir el botón \"Acepto\", usted reconoce que ha leído, entendido y admite estar plenamente en conocimiento de todos los términos y condiciones, junto con la política de privacidad y ayuda, por lo cual acepta los mismos.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          Este documento en el Portal Web FOUNDUSS, regulan los términos y condiciones de acceso y uso, políticas de privacidad y ayuda en el Portal Web con el enlace www.founduss.com, propiedad de FOUNDUSS, C.A. con domicilio en Cabudare estado Lara en la República Bolivariana de Venezuela, inscrita en el Registro de Identificación Fiscal con el número J-41096291-7. El solo acceso y/o utilización del portal, de todos o parte de sus contenidos y/o servicios significa la plena aceptación de los presentes términos y condiciones generales de uso, políticas de privacidad y ayuda expresadas en este documento. \r\n        </p>\r\n        <br>\r\n        <p>\r\n          El presente Portal Web está dirigido exclusivamente a personas residentes o domiciliadas en la República Bolivariana de Venezuela. Los usuarios residentes o domiciliados en otro país que deseen acceder y utilizar el Portal Web, lo harán bajo su propio riesgo y responsabilidad, por lo que deberán asegurarse de que dichos accesos y/o usos cumplen con la legislación aplicable en su país, sin embargo FOUNDUSS, C.A. no es responsable de la decisión que tome el usuario residente o domiciliado en otro país.\r\n        </p>\r\n        <br>\r\n        <h2>REQUISITOS RELATIVOS AL USUARIO EN EL USO DEL PORTAL WEB FOUNDUSS</h2>\r\n        <br>\r\n        <p>\r\n          El Portal Web y los servicios relacionados con el mismo, se ofrecen a las personas naturales o jurídicas que tengan capacidad legal para contratar según la legislación aplicable en la República Bolivariana de Venezuela. No podrán utilizar los servicios del Portal Web, las personas que no tengan la capacidad para contratar, los menores de edad y aquellos usuarios de FOUNDUSS que hayan sido suspendidos por un período determinado o inhabilitados definitivamente por incumplimiento de los términos y condiciones, así como lo relacionado a las políticas de privacidad. Si usted es menor de edad, por favor, no acceda, ni manipule los servicios relacionados con este Portal Web, no es nuestra responsabilidad su uso, ya que no están autorizados como usuarios del Portal Web. Para efectos de la inscripción del usuario en el Portal Web, debe tener capacidad para contratar a nombre de la entidad comercial y de obligar a la misma en cada uno de los aspectos descritos en este documento.\r\n        </p>\r\n        <br>\r\n        <h2>REQUERIMIENTOS RELACIONADOS CON LA INSCRIPCIÓN DE LOS USUARIOS</h2>\r\n        <br>\r\n        <p>\r\n          Para efectos de la inscripción, es obligatorio completar el formato de inscripción en cada uno de los espacios asignados para ello, completando con datos válidos para poder hacer uso de los servicios e información que presta o forma parte del contenido del Portal Web FOUNDUSS. En la suscripción del usuario al Portal Web, debe completarse el formato de inscripción con datos e información personal y/o de negocio de manera exacta, precisa y verdadera, asumiendo la responsabilidad de actualizar de manera permanente los datos e información en un todo de acuerdo a las necesidades o requerimientos del Portal Web. \r\n        </p>\r\n        <br>\r\n        <p>\r\n          El Portal Web FOUNDUSS identificará a sus usuarios valiéndose de cualquier medio, no obstante, el Portal Web no se responsabiliza por la veracidad de los datos e información suministrada por sus usuarios. Los usuarios avalan y responden, en todos los casos por la veracidad, exactitud, vigencia y autenticidad de los datos e información suministrada a través del Portal Web.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          El Portal Web FOUNDUSS se reserva el derecho de solicitar algún comprobante, documentos, información y/o datos adicionales a efectos de la comprobación de la veracidad de lo manifestado por el usuario en el Portal Web, así como podrá suspender por un período de tiempo determinado o inhabilitar definitivamente a aquellos usuarios cuyos datos no hayan podido ser confirmados, verificados o por falta de actualización de los datos e información sobre los bienes, artículos, productos o servicios que se oferten a través del Portal WEB. \r\n        </p>\r\n        <br>\r\n        <p>\r\n          En estos casos de inhabilitación, se suspenderán todos los bienes, artículos, productos o servicios incluidos en el Portal Web, así como cualquier otro contenido o información relacionada a estos que haya sido incorporada en el Portal Web, sin que ello genere algún derecho a resarcimiento por parte de FOUNDUSS, C.A. u obligación de permanencia de estos datos o contenidos incorporados por el usuario en el Portal Web.\r\n        </p>\r\n        <p>\r\n          Para el acceso, uso o disfrute de las aplicaciones, beneficios y servicios del Portal Web FOUNDUS, el usuario deberá completar el formulario con los datos e información solicitada en el Portal Web hasta completar su inscripción, para ello deberá crear primeramente una Cuenta, la cual dispondrá de un Usuario y una Clave de Seguridad, la cual usará cuantas veces sea necesaria para acceder nuevamente al Portal Web. El Usuario se compromete a mantener la confidencialidad de su Clave de Seguridad, es de su plena responsabilidad el mantenimiento y uso confidencial de esta Clave. La Cuenta creada es personal, única e intransferible, y está terminantemente prohibido que un usuario inscriba o posea más de una Cuenta. En el caso que FOUNDUSS, C.A. evidencie Cuentas distintas con datos e información concurrentes, procederá a cancelar, suspender o inhabilitarlas, en su conjunto, sin que ello genere resarcimiento alguno por parte de FOUNDUSS, C.A.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          El usuario es el responsable plenamente de la actividad, interacción, cambio o movilidad de su Cuenta, ya que es quien posee y conoce de manera exclusiva la Clave de Seguridad que permite el ingreso a dicha cuenta, la confidencialidad de la Clave es su total responsabilidad, así como el uso de la misma. El usuario asume el compromiso de realizar por los medios válidos la notificación inmediata al Portal Web  FOUNDUSS, de cualquier uso no autorizado de su Cuenta, así como el ingreso por terceros no autorizados a la misma. No se autoriza al usuario la venta, cesión o transferencia de la Cuenta, está prohibido, incluyendo la reputación y posicionamiento, o cualquier otra cualidad en el uso de la Cuenta que sea otorgada al usuario por el Portal Web FOUNDUSS.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          El Portal Web FOUNDUSS, es quien tendrá y tiene la potestad intransferible y exclusiva para aprobar o aceptar, así como de rechazar, anular, cancelar o eliminar cualquier solicitud de inscripción, que realice el usuario, sin que ello genere algún derecho a terceros por causas de indemnización o resarcimiento por parte del Portal Web FOUNDUSS.\r\n        </p>\r\n        <br>\r\n        <h2>ACTUALIZACIONES Y MODIFICACIONES EN LOS TÉRMINOS Y CONDICIONES  GENERALES  DE  USO</h2>\r\n        <br>\r\n        <p>\r\n          El Portal Web FOUNDUSS es quien tiene el dominio absoluto de los términos y condiciones generales de uso, así como de las políticas de privacidad, por ello es quien se reserva la facultad para modificarlas en cualquier momento en el Portal Web. En todo caso, se recomienda y se le advierte al usuario que debe consultar periódicamente estos aspectos en el Portal Web, ya que pueden ser modificados por las necesidades cambiantes operativas y de funcionabilidad del Portal Web y las actualizaciones y modificaciones estarán vigentes una vez publicada en el Portal Web, es decir la aplicación de las modificaciones es de manera inmediata.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          En el caso de la inconformidad con la actualización o modificación por parte del usuario, este puede solicitar la baja y suspender de esta manera el uso de los servicios de manera permanente, si así lo considerará, es plena su responsabilidad y su decisión el uso del Portal Web una vez realizada la actualización o modificación por parte del Portal Web FOUNDUSS.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          Si el usuario hiciere uso a cualquiera de las aplicaciones del Portal Web FOUNDUSS, posterior a alguna modificación u actualización de los términos, condiciones de uso o políticas de privacidad se considerará esto como la aceptación total de las mismas.\r\n        </p>\r\n        <br>\r\n        <h2>RESPONSABILIDADES, COMPROMISOS Y OBLIGACIONES DE LOS USUARIOS </h2>\r\n        <br>\r\n        <p>\r\n          El usuario deberá respetar en todo momento los términos y condiciones establecidos en las presentes condiciones generales, políticas de privacidad y términos de uso del Portal Web. De forma expresa, el usuario manifiesta que utilizará el Portal Web de manera diligente y asumiendo cualquier responsabilidad que pudiera derivarse del incumplimiento de las normas.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          Así mismo, el usuario no podrá utilizar el Portal Web para transmitir, almacenar, divulgar, promover o distribuir datos o contenidos que sean portadores de virus o cualquier otro código informático, archivos o programas diseñados para interrumpir, destruir o perjudicar el funcionamiento de cualquier programa o equipo informático o de telecomunicaciones, si así lo hiciere es su responsabilidad y deberá asumir sus consecuencias, sin que por ello recaiga responsabilidad ni corresponsabilidad para FOUNDUSS, C.A.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n          RESPONSABILIDADES COMPROMISOS Y OBLIGACIONES DE LOS USUARIOS EN CALIDAD DE OFERENTE DE LOS PRODUCTOS, BIENES Y SERVICIOS  EN EL PORTAL WEB\r\n        </h2>\r\n        <br>\r\n        <p>\r\n          Es requisito indispensable para realizar las operaciones de ventas que el usuario en calidad de oferente tenga la capacidad legal para vender un producto, bien o servicio, el cual es su objeto de oferta por el Portal Web; en un todo de acuerdo a lo dispuesto en el ordenamiento jurídico que regula la materia en la República Bolivariana de Venezuela, la responsabilidad en el cumplimiento de este aspecto es solo e intransferible de quien se encuentra en calidad de oferente, FOUNDUSS, C.A. no es responsable del incumplimiento por parte del Usuario, quien realiza la oferta de un producto, bien o servicio sin tener la capacidad legal para ello.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          Los usuarios en calidad de oferente de los productos, bienes o servicios en el Portal Web, deben tener personalidad jurídica, capacidad para realizar actividades de comercio, su objeto de negociación debe ser de lícito comercio y estar dentro del marco legal que regula la actividad comercial y mercantil para la República Bolivariana de Venezuela. Las personas naturales no están autorizadas para realizar actividades en calidad de ofertante de productos, bienes o servicios en el Portal Web FOUNDUSS.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          El Portal Web FOUNDUSS, en el caso de detectar usuarios en calidad de ofertantes que sean personas naturales, procederá a la suspensión de la Cuenta de manera inmediata, sin embargo es responsabilidad de estos usuarios los daños que pudieran ocasionar a terceras personas o a FOUNDUSS, C.A. por la utilización del Portal Web, desconociendo esta indicación de obligatorio cumplimiento por parte de las personas naturales, la cuales solo pueden ser usuarios del Portal Web en calidad de buscador de productos, bienes o servicios.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n          USO DE LA INFORMACIÓN Y DATOS FACILITADOS POR LOS USUARIOS A TRAVÉS DEL PORTAL WEB\r\n        </h2>\r\n        <br>\r\n        <p>\r\n          La información que los usuarios registren en el Portal Web, tendrá solo el uso que permita cumplir con los objetivos organizacionales de FOUNDUSS, C.A. por lo que la información y datos suministrados no se venderá, alquilará ni negociará con otros negocios, salvo que así se exprese en los presentes términos y condiciones de uso del Portal web FOUNDUSS, sin embargo el Portal Web procurará entre sus esfuerzos garantizar la confidencialidad y seguridad de los datos e información proporcionada por los usuarios.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n          PRESENTACIÓN DE LAS IMÁGENES DE LOS PRODUCTOS, BIENES Y SERVICIOS  OFERTADOS  POR  LAS  ORGANIZACIONES\r\n        </h2>\r\n        <br>\r\n        <p>\r\n          En relación a la presentación de las imágenes por medio de la cual los ofertantes dan a conocer el listado de sus productos, bienes o servicios, éstas se podrán realizar por medio de gráficos, fotografías o cualquier forma digitalizada, donde pueden incluir textos alusivos a la imágenes con descripción de manera específica, manifestando sus condiciones, características y disponibilidad de manera inmediata.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          Para los efectos del precio de los productos, bienes y servicios se deben publicar con su precio de venta, el cual debe incluir el Impuesto Al Valor Agregado (I.V.A.), para aquellos casos que aplique dicho impuesto, la moneda será el Bolívar Soberano, es decir la moneda de curso legal para la República Bolivariana de Venezuela. FOUNDUSS se reserva el derecho para quitar del Portal Web cualquier imagen o publicación que no cumpla con lo dispuesto en materia de Precios Acordados y demás leyes que regulan la materia, es decir en cuanto al precio del producto, bien o servicio, así como también cualquiera que se preste a confusiones en relación al precio de venta final del mismo.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          En relación a números telefónicos, dirección de e-mail, dirección postal, direcciones de páginas de Internet, las mismas se deben incluir en los espacios que disponga el Portal Web para tales fines.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          Es responsabilidad del usuario en calidad de oferente de incluir imágenes y fotografías que permitan reconocer o identificar el producto, bien o servicio, para ello el usuario manifiesta su capacidad para realizar las actividades y tareas tendentes para así lograrlo, así mismo sobre éste usuario es sobre quien recae la responsabilidad por afectación sobre derechos de terceros. FOUNDUSS, C.A. estará facultado para impedir, eliminar o suspender cualquier publicación que incumpla con los presentes términos y condiciones de uso del Portal Web.\r\n          A través de los presentes términos y condiciones de uso, se faculta a FOUNDUSS, C.A. para que pueda utilizar, publicar y/o adaptar las imágenes incluidas en sus publicaciones con fines de clasificación de productos, bienes o servicios; dicha autorización es gratuita y sin límite siempre y cuando esta se relacione con la certificación para el Nivel “2”.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n          RESTRICCIONES  PARA LOS  USUARIOS  DE  FOUNDUSS\r\n        </h2>\r\n        <br>\r\n        <p>\r\n          Está prohibida la compraventa de divisas, monedas, billetes vigentes en circulación o de curso legal o extranjeras a través del Porta, WebFOUNDUSS. \r\n          Cuando FOUNDUSS, C.A. infiera o determine que se ha cometido una acción ilícita en contra de la propiedad intelectual o industrial, se reservará el derecho para adoptar todas las medidas que entienda pertinentes.\r\n        </p>\r\n        <p>\r\n          Es responsabilidad de FOUNDUSS, C.A. aplicar una sanción cuando se amerite un impacto negativo en el perfil del usuario, así como suspensión temporal o inhabilitación permanente del mismo, cuando este incumpla un dispositivo jurídico del ordenamiento jurídico, así como los presentes términos y condiciones generales de uso, no cumpla con los requerimientos de mantener actualizado su listado de productos, bienes o servicios, cuando se determine por parte del Portal Web FOUNDUSS que el usuario incurra en conductas o actos dolosos o fraudulentos o error en los datos e información publicada en el Portal Web.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n          RESPONSABILIDAD DEL PORTAL WEB FOUNDUSS\r\n        </h2>\r\n        <br>\r\n        <p>\r\n          El usuario conoce y acepta que el Portal Web no otorga ninguna garantía de cualquier naturaleza, ya sea expresa o implícita, sobre los datos, contenidos, información y servicios que se incorporan y ofrecen desde el Portal.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          Exceptuando los casos que la Ley imponga expresamente lo contrario, y exclusivamente con la medida y extensión en que lo imponga, el Portal Web no garantiza ni asume responsabilidad alguna respecto a los posibles daños y perjuicios causados por el uso y utilización de la información, datos y servicios en el Portal Web.\r\n        </p>\r\n        <p>\r\n          En todo caso, el Portal Web excluye cualquier responsabilidad por los daños y perjuicios que puedan deberse a la información y/o servicios prestados o suministrados por terceros diferentes de FOUNDUSS, C.A. Toda responsabilidad será del tercero ya sea proveedor, colaborador o bajo cualquier categoría de Usuario del Portal Web.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n        ALCANCE DE LAS ACCIONES DE LOS USUARIOS DEL PORTAL WEB FOUNDUSS\r\n        </h2>\r\n        <br>\r\n        <p>\r\n          El Portal Web FOUNDUSS, permite la organización de las comunicaciones entre ofertantes y demandantes, siendo su orientación garantizar a los negocios su optimización de sus actividades de licito comercio mediante internet, por lo cual el listado de productos, bienes y servicios son propiedad de quienes lo ofertan, así que FOUNDUSS, C.A. no tiene posesión de ellos ni los ofrece en venta, no es responsable por el estado, integridad, legitimidad, calidad, cantidad o existencia de estos, son los usuarios quienes responden por todo ello.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          El Portal Web FOUNDUSS, es un espacio virtual que permite el encuentro entre ofertantes y demandantes, sin embargo son ellos los responsables de sus actividades, tareas y acciones en uso del Portal Web, así como de la capacidad para contratar de los usuarios o de la veracidad de los datos e información por ellos ingresados. El usuario conoce y acepta ser el exclusivo responsable por toda la información que publica en el Portal Web, así como los datos que allí refleja durante todo el proceso, desde la inscripción, alimentación e interacción en su espacio del Portal Web, así como las comunicaciones que se deriven propias del encuentro entre la organización en calidad de usuario, con el buscador en el perfil de comprador.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          No será responsabilidad de FONDUSS, C.A. por los daños y/o perjuicio que pueda sufrir el usuario, debido a las operaciones realizadas o dejadas de efectuar o ejecutar, así como por artículos, productos, bienes o servicios publicados a través del Portal Web por las organizaciones.\r\n        </p>\r\n        <p>\r\n          En caso de reclamos entre usuarios, FOUNDUSS, C.A. se excluye de cualquier querella, reclamo, o acciones, no solamente al Portal Web, también a todo personal que integra a FOUNDUSS, C.A.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n          RESPONSABILIDAD  DERIVADAS  DE  FALLAS  TECNOLÓGICAS\r\n        </h2>\r\n        <br>\r\n        <p>\r\n          En aquellos casos u ocasiones que no se pueda tener acceso al Portal Web, no será responsabilidad de FOUNDUSS, C.A. quien trabajará para que sea subsanada la condición de acceso nulo o limitado al Portal Web, además, FOUNDUSS, C.A. no será responsable por ningún error u omisión contenido en su Portal Web. Los Usuarios no podrán imputarle responsabilidad alguna ni exigir pago por lucro cesante, en virtud de perjuicios resultantes de dificultades técnicas o fallas en los sistemas o en Internet.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n          COSTO DE LOS SERVICIOS Y CERTIFICACIÓN OTORGADA  POR FOUNDUSS\r\n        </h2>\r\n        <br>\r\n        <p>\r\n          El Usuario del Portal Web FOUNDUSS en calidad de buscador o comprador no tendrá costo alguno para el disfrute o uso del Portal Web, es decir este servicio es gratuito. En el caso de las organizaciones en calidad de oferentes, el costo va a depender del Nivel de Certificación, en cuyo caso para el Nivel 1, no deberán realizar ningún pago para disfrutar o usar FOUNDUSS, en este nivel, el usuario ofertante podrá incorporar solo cinco (5) ítems en el inventario de sus productos, bienes o servicios, además esta organización no recibirá visita y demostración del Portal Web por los Ejecutivos de FOUNDUSS, C.A. \r\n        </p>\r\n        <p>\r\n          Para la Certificación en el Nivel 2, el ofertante podrá incorporar solo veinte (20) ítems en el inventario de sus productos, bienes y servicios ilimitados por un año, mayor prioridad, posicionamiento y búsqueda de negocios por encima del Nivel 1. El costo del servicio para acceder a esta certificación, será indicado por los ejecutivos de FOUNDUSS, C.A. Además se le otorgará por medio impreso al ofertante la Certificación obtenida.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          La Certificación en el Nivel 3 a los usuarios en calidad de ofertantes, les permite la Certificación por un (1) año, previamente debió haber obtenido la Certificación en el Nivel 2, tendrá mayor prioridad, posicionamiento y búsqueda de negocios por encima del Nivel 1 y Nivel 2. Son negocios con la categoría para ser visitados por personal de FOUNDUSS, C.A.\r\n        </p>\r\n        <p>\r\n          En esta categoría de Certificación, el usuario que la haya obtenido debe cumplir con los siguientes requisitos para su permanencia en este Nivel 3: \r\n        </p>\r\n        <br>\r\n        <p>\r\n          • Requisitos de permanencia en el Portal Web FOUNDUSS, para el usuario que oferte artículos o bienes:\r\n        </p>\r\n        <br>\r\n        <p>\r\n          1.  Debe mantener publicado más de cincuenta (50) artículos o bienes.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          • Requisitos de permanencia en el Portal Web FOUNDUSS, para el usuario que oferte que oferte servicios:\r\n        </p>\r\n        <br>\r\n        <p>\r\n          1.  Debe mantener publicado más de diez (10) servicios.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          • Requisitos de permanencia en el Portal Web FOUNDUSS, comunes para usuarios que oferten artículos, bienes y servicios:\r\n        </p>\r\n        <br>\r\n        <p>\r\n          1.  Visitas e interacción permanente en el Portal Web FOUNDUSS.\r\n        </p>\r\n        <p>\r\n          2.  Prolijidad en imágenes y descripción de sus productos, bienes y servicios.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          El costo del servicio para acceder a esta certificación, será indicado por los ejecutivos de FOUNDUSS, C.A. en visita al negocio, para su respectivo pago, además le otorgará por medio impreso al ofertante la Certificación obtenida.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n          PROPIEDAD  INTELECTUAL  E  INDUSTRIAL\r\n        </h2>\r\n        <br>\r\n        <p>\r\n          Todos los contenidos, marcas, logos, dibujos, documentación, programas informáticos o cualquier otro elemento susceptible de protección por la legislación de propiedad intelectual o industrial, que sean accesibles en el Portal Web, corresponden exclusivamente a la empresa FOUNDUSS, C.A. o a sus legítimos titulares y quedan expresamente reservados todos los derechos sobre los mismos. Queda expresamente prohibida la creación de enlaces de hipertexto (links) a cualquier elemento integrante del Portal Web sin la autorización de FOUNDUSS, C.A., siempre que no sean a una página Web del Portal que no requiera identificación o autenticación para su acceso, o el mismo esté restringido.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          En cualquier caso, el Portal se reserva todos los derechos sobre los contenidos, información, datos y servicios que ostente sobre los mismos. El Portal Web FOUNDUSS no concede ninguna licencia o autorización de uso al usuario sobre sus contenidos, datos o servicios, distinta de la que expresamente se detalle en las presentes condiciones generales de uso del Portal.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          Los contenidos reflejados en las pantallas relativas a los servicios prestados por FOUNDUSS, así como los programas, bases de datos, redes, archivos, todo software que forme parte del Portal Web, el cual permiten al usuario acceder y usar su Cuenta, son de propiedad exclusiva de y están protegidas por las leyes y los tratados nacionales e internacionales de derecho de autor, marcas, patentes, modelos y diseños industriales. El uso indebido y la reproducción total o parcial de dichos contenidos quedan prohibidos, salvo autorización expresa y por escrito de FOUNDUSS, C.A.\r\n        </p>\r\n        <br>\r\n        <p>\r\n          En el Portal pueden existir otros enlaces, siendo que no son responsabilidad de FOUNDUSS, ni tiene control por los daños que por el uso de estos enlaces sean ocasionados. FOUNDUSS, C.A. no tiene ninguna vinculación, sociedad o enlace con estos sitios y los contenidos que ellos muestran o representan.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n          INDEMNIZACIÓN\r\n        </h2>\r\n        <br>\r\n        <p> \r\n          El usuario se compromete a indemnizar, defender en pleito y exonerar de toda responsabilidad a FOUNDUSS, C.A. así como a los directivos, encargados, comerciales y empleados, frente a las reclamaciones de terceros,  en esta indemnización se incluye entre otros, los gastos de los abogados interviniente y los costos judiciales, interpuestas con base en, o derivadas de, el acceso por parte del usuario al Portal Web y el uso que éste haga del mismo, la Información facilitada por el usuario, o el incumplimiento por parte de éste de los términos y condiciones de este contrato.\r\n        </p>\r\n        <br>\r\n        <h2>\r\n          LEGISLACIÓN APLICABLE, JURISDICCIÓN COMPETENTE Y NOTIFICACIONES\r\n        </h2>\r\n        <br>\r\n        <p>\r\n          Las presentes condiciones se rigen y se interpretan de acuerdo con las Leyes de la República Bolivariana de Venezuela. Para cualquier reclamación serán competentes los juzgados y tribunales de la ciudad de Barquisimeto estado Lara. Todas las notificaciones, requerimientos, peticiones y otras comunicaciones que el usuario desee efectuar a FOUNDUSS, C.A. deberán realizarse por escrito y se entenderá que han sido correctamente realizadas cuando hayan sido recibidas en la siguiente dirección Atencionalcliente@founduss.com\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","\r\n// tslint:disable-next-line: eofline\r\nexport const URL_SERVICIOS = 'http://192.168.0.130/founduss/public';","import { Component, OnInit } from '@angular/core';\r\nimport { Usuario } from '../../models/usuario.model';\r\nimport { UsuarioService } from '../../services/usuario/usuario.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\ndeclare const gapi: any;\r\n// import swal from 'sweetalert';\r\n\r\n\r\n@Component({\r\n  selector: 'app-buttom-google-register',\r\n  templateUrl: './buttom-google-register.component.html',\r\n  styleUrls: ['./buttom-google-register.component.css']\r\n})\r\nexport class ButtomGoogleRegisterComponent implements OnInit {\r\n\r\n  usuario: Usuario;\r\n  token: string;\r\n\r\n  auth2: any;\r\n\r\n  constructor(\r\n    public usuarioServices: UsuarioService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.googleInit();\r\n  }\r\n\r\n  googleInit(){\r\n    gapi.load('auth2', () => {\r\n      this.auth2 = gapi.auth2.init({\r\n        clienye_id: '536569115758-6ncc5uh0o0hr6s6vmd06gn47bjiorre6.apps.googleusercontent.com',\r\n        cookiepolicy: 'single_host_origin',\r\n        scope: 'profile email'\r\n      });\r\n      this.attachSignin( document.getElementById('btnGoogle') );\r\n    });\r\n  }\r\n\r\n  attachSignin( element ) {\r\n\r\n    // tslint:disable-next-line: no-inferrable-types\r\n    const role:string = 'store';\r\n\r\n    this.auth2.attachClickHandler( element, {}, (googleUser) => {\r\n      const profile = googleUser.getBasicProfile();\r\n      console.log(profile);\r\n      const token = googleUser.getAuthResponse().id_token;\r\n      console.log(token);\r\n      this.usuarioServices.RegisterGoogle(\r\n        profile.getName(),\r\n        profile.getEmail(),\r\n        role\r\n      );\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"form-group row\">\r\n    <div class=\"input-group col-md-12\">\r\n        <button type=\"button\" \r\n                id=\"btnGoogle\" \r\n                class=\"btn btn-googleplus btn-block family-400 form-control\" \r\n                data-toggle=\"tooltip\" \r\n                title=\"Iniciar sesión con Google\"\r\n                > \r\n                <i aria-hidden=\"true\" class=\"fa fa-google pr-2\"></i> \r\n                Regístrar con google\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { StoreService } from '../../services/store/store.service';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-form-data-negocio',\r\n  templateUrl: './form-data-negocio.component.html',\r\n  styleUrls: ['../form-data-usuario/form-data-usuario.component.css']\r\n})\r\nexport class FormDataNegocioComponent implements OnInit {\r\n\r\n  forma: FormGroup;\r\n  respServidor: any ;\r\n  @Input() text: any;\r\n\r\n  constructor(\r\n    public storeServices: StoreService,\r\n  ) {\r\n\r\n    this.forma = new FormGroup({\r\n      username: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      name: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      email: new FormControl('' , [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]),\r\n      password1: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n      password2: new FormControl(),\r\n      terminos: new FormControl('', Validators.required),\r\n    });\r\n\r\n    // tslint:disable-next-line: align\r\n    this.forma.controls.password2.setValidators([\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n      this.noIgual.bind(this.forma)\r\n    ]);\r\n\r\n  }\r\n\r\n  // Validación personalizada\r\n  noIgual( control: FormControl): { [s: string]: boolean} {\r\n    const forma: any = this;\r\n    if ( control.value !== forma.controls.password1.value ) {\r\n       return{\r\n         noiguales: true\r\n       };\r\n     }\r\n    return null;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  registrarNegocio(){\r\n\r\n    const user = new Usuario(\r\n      this.forma.value.username,\r\n      this.forma.value.name,\r\n      this.forma.value.email,\r\n      this.forma.value.password1\r\n    );\r\n\r\n    this.storeServices.crearStore(user);\r\n\r\n\r\n    console.log(this.forma);\r\n  }\r\n\r\n  registrar(){}\r\n\r\n\r\n\r\n}\r\n","<!-- Menú redirect to home -->\r\n<app-navbar-to-home></app-navbar-to-home>\r\n<!-- End menú redirect to home -->\r\n\r\n<div class=\"container animated fadeIn\" id=\"storeRegister\">\r\n    <div class=\"row display-flex justify-content-center\">\r\n        <div class=\"col-10 col-sm-9 col-md-7 col-lg-5 col-xl-4 sobreEncima box\">\r\n\r\n          <div class=\"display-flex justify-content-center img-login\">\r\n            <img class=\"user-naranja\" src=\"../../../assets/img/LoginIconos/store.svg\">\r\n          </div>\r\n\r\n            <form [formGroup]=\"forma\" \r\n                  (ngSubmit)=\"registrarNegocio()\" \r\n                  novalidate=\"novalidate\"\r\n                  >\r\n\r\n              <div class=\"form-group row mt-5 tex-align-center\">\r\n                <div class=\"col-12\">\r\n                    <h5 class=\"fredoka\">Regístro de farmacia</h5>\r\n                </div>\r\n              </div>\r\n\r\n              <!---Registro servicio de Google-->\r\n              <app-buttom-google-register></app-buttom-google-register>\r\n              <!---end servicio de Google-->\r\n\r\n              <div class=\"form-group row\">\r\n                <div class=\"input-group col-md-12 justify-content-space-between\">\r\n                  <p class=\"line-low mt-3\"></p>\r\n                  <span>o</span>\r\n                  <p class=\"line-low mt-3\"></p>\r\n                </div>\r\n              </div>\r\n\r\n                <div class=\"form-group row\">\r\n                  <div class=\"col-12\">\r\n                    <input class=\"form-control user-name-icon\"\r\n                           type=\"text\"\r\n                           placeholder=\"Nombre de usuario\"\r\n                           formControlName=\"username\"\r\n                           [ngClass]=\"{'is-invalid':  (!forma.controls['username'].valid || forma.controls['username'].errors?.minlength)&& forma.controls['username'].touched, 'is-valid': forma.controls['username'].valid }\" \r\n                    >\r\n                    \r\n                    <div  *ngIf=\"forma.get('username').errors?.required\"  \r\n                          class=\"invalid-feedback\">\r\n                          Este campo es requerido\r\n                    </div>\r\n                    <div  *ngIf=\"forma.get('username').errors?.minlength\"  \r\n                          class=\"invalid-feedback\">\r\n                          Por lo menos 5 caracteres\r\n                    </div>\r\n            \r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                  <div class=\"col-12\">\r\n                    <input class=\"form-control user-name-icon\"\r\n                           type=\"text\"\r\n                           placeholder=\"Ingresa tu nombre y apellido\"\r\n                           formControlName=\"name\"\r\n                           [ngClass]=\"{'is-invalid':  (!forma.controls['name'].valid || forma.controls['name'].errors?.minlength)&& forma.controls['name'].touched, 'is-valid': forma.controls['name'].valid }\" \r\n                    >\r\n                    \r\n                    <div  *ngIf=\"forma.get('name').errors?.required\"  \r\n                          class=\"invalid-feedback\">\r\n                          Este campo es requerido\r\n                    </div>\r\n                    <div  *ngIf=\"forma.get('name').errors?.minlength\"  \r\n                          class=\"invalid-feedback\">\r\n                          Por lo menos 5 caracteres\r\n                    </div>\r\n            \r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-12\">\r\n                      <input  class=\"form-control correo-icon\"\r\n                              type=\"email\"\r\n                              placeholder=\"Correo electrónico\"\r\n                              formControlName=\"email\"\r\n                              [ngClass]=\"{'is-invalid':  (!forma.controls['email'].valid || forma.controls['email'].errors?.minlength)&& forma.controls['email'].touched, 'is-valid': forma.controls['email'].valid }\"\r\n                      >\r\n                \r\n                      <div  *ngIf=\"forma.get('email').errors?.required\"  \r\n                            class=\"invalid-feedback\">\r\n                            Este campo es requerido\r\n                      </div>\r\n                      <div  *ngIf=\"forma.get('email').errors?.pattern\"  \r\n                            class=\"invalid-feedback\">\r\n                            No posee la forma de un correo: example@gmail.com\r\n                      </div> \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-12\">\r\n                      <input  class=\"form-control password-icon\"\r\n                              type=\"password\"\r\n                              placeholder=\"Password\"\r\n                              formControlName=\"password1\"\r\n                              [ngClass]=\"{'is-invalid':  (!forma.get('password1').valid || forma.get('password1').errors?.minlength)&& forma.get('password1').touched, 'is-valid': forma.get('password1').valid }\"\r\n                      >\r\n                \r\n                      <div  *ngIf=\"forma.get('password1').errors?.required\"  \r\n                            class=\"invalid-feedback\">\r\n                            Este campo es requerido\r\n                      </div>\r\n                      <div  *ngIf=\"forma.get('password1').errors?.minlength\"  \r\n                            class=\"invalid-feedback\">\r\n                            La contraseña debe tener al menos 8 caracteres\r\n                      </div> \r\n                \r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group row\">\r\n          \r\n                    <div class=\"col-12\">\r\n                        <input  class=\"form-control password-icon\"\r\n                                type=\"password\"\r\n                                placeholder=\"Repetir Password\"\r\n                                formControlName=\"password2\"\r\n                                [ngClass]=\"{'is-invalid':  (!forma.get('password2').valid || forma.get('password2').errors?.minlength)&& forma.get('password2').touched, 'is-valid': forma.get('password2').valid }\"\r\n                        >\r\n                \r\n                      <div  *ngIf=\"forma.get('password2').errors?.required\"  \r\n                            class=\"invalid-feedback\">\r\n                            Este campo es requerido\r\n                      </div>\r\n                \r\n                      <div   *ngIf=\"forma.get('password2').errors?.minlength\"  \r\n                              class=\"invalid-feedback\">\r\n                              La contraseña debe tener al menos 8 caracteres\r\n                      </div> \r\n                \r\n                      <div   *ngIf=\"((forma.get('password2').value !== forma.get('password1').value) && forma.get('password2').errors?.noiguales)\"  \r\n                              class=\"invalid-feedback\">\r\n                              ¡Las contraseñas no son iguales!\r\n                      </div> \r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-12\">\r\n                      <div class=\"checkbox checkbox-primary  p-t-0\">\r\n                        <input type=\"checkbox\" formControlName=\"terminos\" id=\"checkAceptoTerminos\">\r\n                        <label  class=\"family-500 pl-3 size-13\" for=\"checkAceptoTerminos\">\r\n                          Acepto términos y condiciones\r\n                        </label>\r\n                      </div>\r\n                      <p class=\"family-400 size-12\">\r\n                        Haciendo click en Registrar Declarara ser una persona natural y debe ingresar \r\n                        y aceptar los <a  [routerLink]=\"['/terminos-ycondiciones']\" class=\"terminos-link family-700\">Términos y Condiciones</a> de nuestra plataforma, así como también recibir \r\n                        correos electrónicos relacionados con miembros y servicios desde Founduss.cl\r\n                      </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                  <div class=\"input-group col-md-12\">\r\n                    <button [disabled]=\"!forma.valid\" \r\n                            type=\"submit\" \r\n                            class=\"btn btn-outline-primary btn-block fredoka\"\r\n                            (click)=\"registrar()\"\r\n                           \r\n                            >\r\n                            Regístrarme\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                \r\n                  <!-- {{forma.valid}}\r\n                  <br>\r\n                  {{forma.status}}\r\n                  <br> -->\r\n                  <!-- <pre>\r\n                    {{forma.value | json}}\r\n                  </pre> -->\r\n                  <br>\r\n                  <br>\r\n\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormArray, AbstractControl, } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { UsuarioService } from '../../services/usuario/usuario.service';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\n\r\n\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/app.reducer';\r\nimport { ActivarLoadingAction, DesactivarLoadingAction } from '../../shared/ui.accions';\r\n\r\n@Component({\r\n  selector: 'app-form-data-usuario',\r\n  templateUrl: './form-data-usuario.component.html',\r\n  styleUrls: ['./form-data-usuario.component.css']\r\n})\r\nexport class FormDataUsuarioComponent implements OnInit, OnDestroy {\r\n\r\n  forma: FormGroup;\r\n  loadding = false;\r\n  cargando: boolean;\r\n  subscription: Subscription;\r\n\r\n  controls: any;\r\n\r\n constructor(\r\n   public usuarioServices: UsuarioService,\r\n   public router: Router,\r\n   public store: Store<AppState>\r\n )\r\n  {\r\n\r\n    this.forma = new FormGroup({\r\n      nombre: new FormControl('' , [Validators.required, Validators.minLength(5)]),\r\n      correo: new FormControl('' , [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]),\r\n      username: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      password1: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n      password2: new FormControl(),\r\n      terminos: new FormControl('', Validators.required),\r\n\r\n    });\r\n    this.forma.controls['password2'].setValidators([\r\n      Validators.required,\r\n      Validators.minLength(8),\r\n      this.noIgual.bind(this.forma)\r\n    ]);\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line: use-lifecycle-interface\r\n  ngOnInit() {\r\n    this.store.select('ui').subscribe( ui => {\r\n     this.cargando =  ui.isLoading;\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n\r\n  // Validación personalizada\r\n  noIgual( control: FormControl): { [s: string]: boolean} {\r\n    const forma: any = this;\r\n    if ( control.value !== forma.controls['password1'].value ) {\r\n      return{\r\n        noiguales: true\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  existeUsuario( control: FormControl): Promise<any>|Observable<any>{\r\n    const promesa = new Promise(\r\n      (resolve, reject) => {\r\n        setTimeout ( () => {\r\n          if ( control.value === 'jesus'){\r\n            resolve({ existe: true});\r\n            console.log('existe usuario');\r\n          }else{\r\n            resolve(null);\r\n          }\r\n        } , 3000);\r\n      }\r\n    );\r\n\r\n    return promesa;\r\n  }\r\n\r\n\r\n  registrarUsuario(){\r\n\r\n    this.store.dispatch( new ActivarLoadingAction() );\r\n\r\n    console.log(this.forma.value);\r\n    console.log(this.forma);\r\n\r\n    const usuario = new Usuario(\r\n      this.forma.value.nombre,\r\n      this.forma.value.correo,\r\n      this.forma.value.username,\r\n      this.forma.value.password1\r\n    );\r\n\r\n    this.usuarioServices.crearUsuario(usuario).subscribe( res => {\r\n      console.log('usuario', res);\r\n      this.router.navigate(['/login-usuario']);\r\n      this.store.dispatch( new DesactivarLoadingAction() );\r\n    });\r\n  }\r\n\r\n  usuarioCreado(){\r\n    this.loadding = true;\r\n    setTimeout(() => this.loadding = false, 3000);\r\n  }\r\n\r\n\r\n}\r\n","\r\n<nav class=\"navbar navbar-light bg-light\">\r\n  <a class=\"navbar-brand\"  [routerLink]=\"['/home']\">\r\n    <img src=\"../../../assets/img/Navbar/Logo Founduss.svg\" width=\"60%\">\r\n  </a>\r\n</nav>\r\n\r\n<div class=\"container animated fadeIn\">\r\n  <div class=\"row display-flex align-items-center justify-content-center height-100vh\">\r\n\r\n    <div class=\"col-10 col-sm-9 col-md-7 col-lg-5 col-xl-4 sobreEncima box\">\r\n\r\n      <div class=\"display-flex justify-content-center img-login\">\r\n        <img class=\"user-naranja\" src=\"../../../assets/img/LoginIconos/user naranja.svg\">\r\n      </div>\r\n\r\n      <form [formGroup]=\"forma\" (ngSubmit)=\"registrarUsuario()\" novalidate=\"novalidate\" class=\"height-100\">\r\n\r\n        <div class=\"form-group row mb-4 mt-5 tex-align-center\">\r\n          <div class=\"col-12\">\r\n              <h5 class=\"fredoka\">Regístro de usuario</h5>\r\n          </div>\r\n        </div>\r\n\r\n        <!---Registro servicio de Google-->\r\n        <app-buttom-google-sesion [text]=\"['Registrarse con google']\"></app-buttom-google-sesion>\r\n        <!---end servicio de Google-->\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"input-group col-md-12 justify-content-space-between\">\r\n            <p class=\"line-low mt-3\"></p>\r\n            <span>o</span>\r\n            <p class=\"line-low mt-3\"></p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-12\">\r\n            <input class=\"form-control user-name-icon\"\r\n                     type=\"text\"\r\n                     placeholder=\"Nombre de usuario\"\r\n                     formControlName=\"nombre\"\r\n                     [ngClass]=\"{'is-invalid':  (!forma.controls['nombre'].valid || forma.controls['nombre'].errors?.minlength)&& forma.controls['nombre'].touched, 'is-valid': forma.controls['nombre'].valid }\" \r\n            >\r\n              \r\n            <div  *ngIf=\"forma.get('nombre').errors?.required\"  \r\n                  class=\"invalid-feedback\">\r\n                  Este campo es requerido\r\n            </div>\r\n            <div  *ngIf=\"forma.get('nombre').errors?.minlength\"  \r\n                  class=\"invalid-feedback\">\r\n                  Por lo menos 5 caracteres\r\n            </div>\r\n      \r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-12\">\r\n            <input  class=\"form-control correo-icon\"\r\n                    type=\"email\"\r\n                    placeholder=\"Correo electrónico\"\r\n                    formControlName=\"correo\"\r\n                    [ngClass]=\"{'is-invalid':  (!forma.controls['correo'].valid || forma.controls['correo'].errors?.minlength)&& forma.controls['correo'].touched, 'is-valid': forma.controls['correo'].valid }\"\r\n            >\r\n      \r\n            <div  *ngIf=\"forma.get('correo').errors?.required\"  \r\n                  class=\"invalid-feedback\">\r\n                  Este campo es requerido\r\n            </div>\r\n            <div  *ngIf=\"forma.get('correo').errors?.pattern\"  \r\n                  class=\"invalid-feedback\">\r\n                  No posee la forma de un correo: example@gmail.com\r\n            </div> \r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-12\">\r\n            <input  class=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"User name\"\r\n                    formControlName=\"username\"\r\n                    [ngClass]=\"{'is-invalid':  (!forma.controls['username'].valid || forma.controls['username'].errors?.minlength)&& forma.controls['username'].touched, 'is-valid': forma.controls['username'].valid }\"\r\n            >\r\n            \r\n            <div  *ngIf=\"forma.get('username').errors?.required\"  \r\n                  class=\"invalid-feedback\">\r\n                  Este campo es requerido\r\n            </div>\r\n            <div  *ngIf=\"forma.get('username').errors?.pattern\"  \r\n                  class=\"invalid-feedback\">\r\n                  Por lo menos 5 caracteres\r\n            </div> \r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-12\">\r\n            <input  class=\"form-control password-icon\"\r\n                    type=\"password\"\r\n                    placeholder=\"contraseña\"\r\n                    formControlName=\"password1\"\r\n                    [ngClass]=\"{'is-invalid':  (!forma.get('password1').valid || forma.get('password1').errors?.minlength)&& forma.get('password1').touched, 'is-valid': forma.get('password1').valid }\"\r\n            >\r\n\r\n            <div  *ngIf=\"forma.get('password1').errors?.required\"  \r\n                  class=\"invalid-feedback\">\r\n                  Este campo es requerido\r\n            </div>\r\n            <div  *ngIf=\"forma.get('password1').errors?.minlength\"  \r\n                  class=\"invalid-feedback\">\r\n                  La contraseña debe tener al menos 8 caracteres\r\n            </div> \r\n      \r\n          </div>\r\n        </div>\r\n      \r\n        <div class=\"form-group row\">\r\n          \r\n          <div class=\"col-12\">\r\n            <input    class=\"form-control password-icon\"\r\n                      type=\"password\"\r\n                      placeholder=\"Repetir contraseña\"\r\n                      formControlName=\"password2\"\r\n                      [ngClass]=\"{'is-invalid':  (!forma.get('password2').valid || forma.get('password2').errors?.minlength)&& forma.get('password2').touched, 'is-valid': forma.get('password2').valid }\"\r\n            >\r\n      \r\n            <div  *ngIf=\"forma.get('password2').errors?.required\"  \r\n                  class=\"invalid-feedback\">\r\n                  Este campo es requerido\r\n            </div>\r\n      \r\n            <div   *ngIf=\"forma.get('password2').errors?.minlength\"  \r\n                    class=\"invalid-feedback\">\r\n                    La contraseña debe tener al menos 8 caracteres\r\n            </div> \r\n      \r\n            <div   *ngIf=\"((forma.get('password2').value !== forma.get('password1').value) && forma.get('password2').errors?.noiguales)\"  \r\n                    class=\"invalid-feedback\">\r\n                    ¡Las contraseñas no son iguales!\r\n            </div> \r\n              \r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-12\">\r\n            <div class=\"checkbox checkbox-primary  p-t-0\">\r\n              <input type=\"checkbox\" formControlName=\"terminos\" id=\"checkAceptoTerminos\">\r\n              <label  class=\"family-500 pl-3 size-13\" for=\"checkAceptoTerminos\">\r\n                Acepto términos y condiciones\r\n              </label>\r\n            </div>\r\n            <p class=\"family-500 size-12\">\r\n              Haciendo click en Registrar Declarara ser una persona natural y debe ingresar \r\n              y aceptar los <a  [routerLink]=\"['/terminos-ycondiciones']\" class=\"terminos-link family-700\">Términos y Condiciones</a> de nuestra plataforma, así como también recibir \r\n              correos electrónicos relacionados con miembros y servicios desde <span class=\"fredoka\">Founduss.cl</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      \r\n        <div class=\"form-group row\">\r\n          <div class=\"input-group col-md-12\">\r\n            <button *ngIf=\"!cargando\"\r\n                    [disabled]=\"!forma.valid\" \r\n                    type=\"submit\" \r\n                    class=\"btn btn-outline-primary btn-block fredoka\"\r\n                    (click)=\"usuarioCreado()\">\r\n              Registrarme\r\n            </button>\r\n\r\n            <button *ngIf=\"cargando\"\r\n                    [disabled]=\"true\" \r\n                    type=\"submit\" \r\n                    class=\"btn btn-outline-primary btn-block fredoka\"\r\n                    (click)=\"usuarioCreado()\">\r\n                    Creando Usuario ...\r\n            </button>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        \r\n        \r\n      </form>\r\n\r\n        \r\n\r\n    </div>\r\n  </div>\r\n  <!-- {{forma.valid}}\r\n        <br>\r\n        {{forma.status}}\r\n        <br> -->\r\n        <!-- <pre>\r\n          {{forma.value | json}}\r\n        </pre>  -->\r\n        <!-- <br>\r\n        <br> -->\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { APP_ROUTING } from '../app.routes';\r\n// Importamos los formularios de registros //\r\nimport { FormDataUsuarioComponent } from './form-data-usuario/form-data-usuario.component';\r\nimport { FormDataNegocioComponent } from './form-data-negocio/form-data-negocio.component';\r\nimport { ComponentsModule } from '../components/components.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { RutStoreComponent } from './rut-store/rut-store.component';\r\nimport { ButtomGoogleRegisterComponent } from './buttom-google-register/buttom-google-register.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  // tslint:disable-next-line: max-line-length\r\n  declarations: [FormDataUsuarioComponent,\r\n    FormDataNegocioComponent,\r\n    RutStoreComponent,\r\n    ButtomGoogleRegisterComponent,],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    APP_ROUTING,\r\n    ComponentsModule,\r\n    SharedModule\r\n  ],\r\n  exports: [FormDataUsuarioComponent, FormDataNegocioComponent, RutStoreComponent]\r\n})\r\nexport class FormularioRegisterModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { RegistroEmpresa } from '../../models/rut.model';\r\nimport { StoreService } from '../../services/store/store.service';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/app.reducer';\r\nimport { Negocio } from '../../models/negocio.model';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-rut-store',\r\n  templateUrl: './rut-store.component.html',\r\n  styleUrls: ['../form-data-usuario/form-data-usuario.component.css']\r\n})\r\nexport class RutStoreComponent implements OnInit {\r\n\r\n  forma: FormGroup;\r\n  Params: any;\r\n  user: Negocio;\r\n  token: string;\r\n\r\n  constructor(\r\n\r\n    public router: Router,\r\n    public storageService: StoreService,\r\n    private store: Store<AppState>\r\n\r\n    ) {\r\n\r\n    this.forma = new FormGroup({\r\n      name: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      rut: new FormControl('', [Validators.required, Validators.maxLength(9)]),\r\n    });\r\n\r\n  }\r\n\r\n  registrarRut(){\r\n\r\n    const RazonSocialYRut  = new RegistroEmpresa(\r\n      this.forma.value.name,\r\n      this.forma.value.rut,\r\n      localStorage.getItem('id')\r\n    );\r\n\r\n    this.storageService.registroRut(RazonSocialYRut);\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Menú redirect to home -->\r\n<app-navbar-to-home></app-navbar-to-home>\r\n<!-- End menú redirect to home -->\r\n\r\n<div class=\"container animated fadeIn\" id=\"storeRegister\">\r\n    <div class=\"row display-flex justify-content-center\">\r\n        <div class=\"col-10 col-sm-9 col-md-7 col-lg-5 col-xl-4 sobreEncima box\">\r\n\r\n            <div class=\"display-flex justify-content-center img-login-rut\">\r\n                <img class=\"user-naranja\" src=\"../../../assets/img/LoginIconos/store.svg\">\r\n              </div>\r\n\r\n            <form   [formGroup]=\"forma\" \r\n                    novalidate=\"novalidate\"\r\n                    (ngSubmit)=\"registrarRut()\" \r\n                    class=\"width-100\"\r\n                    >\r\n\r\n                <div class=\"form-group row mb-4 mt-5 tex-align-center\">\r\n                    <div class=\"col-12\">\r\n                        <h5 class=\"fredoka\">Complete los datos</h5>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-12\">\r\n                        <input class=\"form-control\"\r\n                             type=\"text\"\r\n                             placeholder=\"Razón social\"\r\n                             formControlName=\"name\"\r\n                             [ngClass]=\"{'is-invalid':  (!forma.controls['name'].valid || forma.controls['name'].errors?.minlength)&& forma.controls['name'].touched, 'is-valid': forma.controls['name'].valid }\" \r\n                        >\r\n                      \r\n                      <div  *ngIf=\"forma.get('name').errors?.required\"  \r\n                            class=\"invalid-feedback\">\r\n                            Este campo es requerido\r\n                      </div>\r\n                      <div  *ngIf=\"forma.get('name').errors?.minlength\"  \r\n                            class=\"invalid-feedback\">\r\n                            Por lo menos 5 caracteres\r\n                      </div>\r\n              \r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-12\">\r\n                        <input class=\"form-control\"\r\n                             type=\"text\"\r\n                             placeholder=\"Ingrese Rut\"\r\n                             formControlName=\"rut\"\r\n                             [ngClass]=\"{'is-invalid':  (!forma.controls['rut'].valid || forma.controls['rut'].errors?.minlength)&& forma.controls['rut'].touched, 'is-valid': forma.controls['rut'].valid }\" \r\n                        >\r\n                      \r\n                      <div  *ngIf=\"forma.get('rut').errors?.required\"  \r\n                            class=\"invalid-feedback\">\r\n                            Este campo es requerido\r\n                      </div>\r\n                      <div  *ngIf=\"forma.get('rut').errors?.minlength\"  \r\n                            class=\"invalid-feedback\">\r\n                            Por lo menos 5 caracteres\r\n                      </div>\r\n              \r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <div class=\"form-group row\">\r\n                    <div class=\"input-group col-md-12\">\r\n                        <button [disabled]=\"!forma.valid\" \r\n                              type=\"submit\" \r\n                              class=\"btn btn-outline-primary btn-block fredoka\"\r\n                              >\r\n                              Regístrarme\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","export class Avatar {\r\n\r\n    constructor(\r\n        // tslint:disable-next-line: variable-name\r\n        public avatar: any,\r\n\r\n    ) { }\r\n\r\n}\r\n","export class DataStore {\r\n\r\n    constructor(\r\n        // tslint:disable-next-line: variable-name\r\n        public social_reason?: string,\r\n        public rut?: string,\r\n        public name?: string,\r\n        public description?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public email_1?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public email_2?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public phone_1?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public phone_2?: string,\r\n        public webside?: string,\r\n        public direction?: string,\r\n        public facebook?: string,\r\n        public instagram?: string,\r\n        public twitter?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public address_latitude?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public address_longitude?: string,\r\n\r\n    ) { }\r\n\r\n}\r\n","export class UserStore {\r\n\r\n    public name: string;\r\n    public id: string;\r\n    public email: string;\r\n\r\n    constructor(obj: Database ){\r\n        this.name = obj && obj.name || null;\r\n        this.id = obj && obj.id || null;\r\n        this.email = obj && obj.email || null;\r\n    }\r\n}\r\n\r\ninterface Database {\r\n    name: string;\r\n    id: string;\r\n    email: string;\r\n\r\n}\r\n","export class RegistroEmpresa {\r\n\r\n    constructor(\r\n        public name: string,\r\n        public rut: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public user_id: string\r\n    ) { }\r\n\r\n}\r\n","export class Usuario {\r\n\r\n    constructor(\r\n        public username: string,\r\n        public name: string,\r\n        public email: string,\r\n        public password?: string,\r\n        public phone?: string,\r\n        public google?: boolean,\r\n        public id?: string,\r\n        public role: string = 'store',\r\n        // tslint:disable-next-line: variable-name\r\n        public email_1?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public email_2?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public phone_1?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public phone_2?: string,\r\n        public webside?: string,\r\n        public direction?: string,\r\n        public facebook?: string,\r\n        public instagram?: string,\r\n        public twitter?: string,\r\n        public rut?: string,\r\n        public description?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public social_reason?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public adress_latitude?: string,\r\n        // tslint:disable-next-line: variable-name\r\n        public adress_longitude?: string,\r\n\r\n    ) { }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ServicioService } from '../../../services/servicio.service';\r\nimport { Pelicula, RespuestaMDB} from '../../../interfaces/interfaces';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-public-views',\r\n  templateUrl: './public-views.component.html',\r\n  styleUrls: ['./public-views.component.css']\r\n})\r\nexport class PublicViewsComponent implements OnInit {\r\n\r\n  PeliculasRecientes: Pelicula[] = [];\r\n  producto: Pelicula [] = [];\r\n  loading: boolean;\r\n  oculto = 100;\r\n  overflow = 30;\r\n\r\n\r\n  constructor(  private themovie: ServicioService,\r\n                private router: Router,\r\n                private activatedRouted: ActivatedRoute) {\r\n\r\n    this.loading = true;\r\n    // tslint:disable-next-line: align\r\n    this.themovie.getFeatures().subscribe( ( data: RespuestaMDB )  => {\r\n\r\n      setTimeout(() => {\r\n      this.PeliculasRecientes = data.results;\r\n      console.log('Resp', this.PeliculasRecientes);\r\n      this.loading = false;\r\n    }, 1000);\r\n    });\r\n  }\r\n\r\n  buscar(termino: string){\r\n\r\n    this.loading = true;\r\n\r\n\r\n    if (termino.length === 0){\r\n      setTimeout(() => {\r\n      this.producto = [];\r\n      this.loading = false;\r\n      return;\r\n    }, 2000);\r\n    }\r\n\r\n    console.log(termino);\r\n\r\n    this.themovie.buscarProducto(termino).subscribe( valor => {\r\n      setTimeout(() => {\r\n        this.producto = valor['results'];\r\n        console.log('producto', this.producto);\r\n        this.loading = false;\r\n      }, 2000);\r\n    });\r\n\r\n  }\r\n\r\n  MostrarInfo(event: any){\r\n    console.log(event.target);\r\n    this.oculto = 250;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n\r\n<section class=\"display-flex\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-2\">\r\n                <app-sidebar></app-sidebar>\r\n            </div>\r\n            <div class=\"col-sm-8 col-md-8 col-lg-8 col-xl-10\">\r\n                <app-banner-tienda></app-banner-tienda>\r\n                <router-outlet></router-outlet>\r\n\r\n                <div class=\"animated fadeIn\">\r\n                    <div class=\"row\">\r\n                        <div class=\"ref col-lg-12 mb-5 mt-2 display-flex justify-content-center\">\r\n                            <input #termino type=\"search\" class=\"form-control width-60 edit-input\" placeholder=\"Busca un producto en esta tienda...\" (keyup)=\"buscar(termino.value)\" (search)=\"buscar(termino.value)\">\r\n                            <button type=\"button\" class=\"btn btn-outline-dark button-filtro button-hover family-500\">FILTRAR POR<i class=\"fa fa-angle-down pl-2\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        \r\n        \r\n        \r\n                <div>\r\n                    <div class=\"row justify-content-center\">\r\n                        \r\n                        <div class=\"col-sm-10 col-md-12 col-lg-12 col-xl-10\">\r\n        \r\n                            <!-- <app-loading *ngIf=\"loading\"></app-loading> -->\r\n                            <app-card-shimmer *ngIf=\"loading\"></app-card-shimmer>\r\n        \r\n                            <div class=\"card-columns\" *ngIf=\"producto.length === 0\">\r\n                                <div    class=\"card no-border animated fadeIn puntero\" \r\n                                        *ngFor=\"let item of PeliculasRecientes\"\r\n                                        [routerLink]=\"['detalle-producto', item.id]\">\r\n        \r\n                                    <img [src]=\"item.backdrop_path | imagen\" width=\"100%\">\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title family-500 size-14 black\">{{item.original_title}}</h5>\r\n                                        <p class=\"card-text family-400 size-12 black\"> \r\n                                            {{item.overview | slice: 0:oculto }} ... \r\n                                        </p>\r\n                                        <span class=\"badge badge-primary puntero\" (click)=\" MostrarInfo( $event ) \" *ngIf=\"oculto !==250\" >Leer más</span>\r\n                                        <p class=\"mb-0\">\r\n                                            <i class=\"fa fa-star dorado\" aria-hidden=\"true\"></i>\r\n                                            <i class=\"fa fa-star dorado\" aria-hidden=\"true\"></i>\r\n                                            <i class=\"fa fa-star dorado\" aria-hidden=\"true\"></i>\r\n                                            <i class=\"fa fa-star dorado\" aria-hidden=\"true\"></i>\r\n                                            <i class=\"blue-light ml-2\">{{item.vote_average}} </i>\r\n                                        </p>\r\n        \r\n                                        <i class=\"ml-2 family-400 size-12\">{{item.vote_average | currency: 'USD':true}} </i>\r\n                                        <p class=\"card-text\"><small class=\"text-muted\">Fecha : <span>{{item.release_date}}</span></small></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n        \r\n                            <div class=\"card-columns\">\r\n                                <div    class=\"card no-border animated fadeIn puntero\" \r\n                                        *ngFor=\"let productos of producto\"\r\n                                        [routerLink]=\"['detalle-producto', productos.id]\">\r\n        \r\n                                    <img [src]=\"productos.backdrop_path | imagen\" width=\"100%\">\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">{{productos.original_title}}</h5>\r\n                                        <p class=\"card-text family-400 size-12 black\"> \r\n                                            {{productos.overview | slice: 0:oculto }} ... \r\n                                        </p>\r\n\r\n                                        <span   class=\"badge badge-primary\" \r\n                                                (click)=\"MostrarInfo( $event )\" \r\n                                                *ngIf=\"oculto !==250\" \r\n                                                >Leer más\r\n                                        </span>\r\n                                \r\n                                        <p class=\"mb-0\">\r\n                                            <i class=\"fa fa-star dorado\" aria-hidden=\"true\"></i>\r\n                                            <i class=\"fa fa-star dorado\" aria-hidden=\"true\"></i>\r\n                                            <i class=\"fa fa-star dorado\" aria-hidden=\"true\"></i>\r\n                                            <i class=\"fa fa-star dorado\" aria-hidden=\"true\"></i>\r\n                                            <i class=\"blue-light ml-2\">{{productos.vote_average}} </i>\r\n                                        </p>\r\n        \r\n                                        <i class=\"ml-2 family-400 size-12\">{{productos.vote_average | currency: 'USD':true}} </i>\r\n        \r\n                                        <p class=\"card-text\"><small class=\"text-muted\">Fecha : <span>{{productos.release_date}}</span></small></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div> \r\n        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n    </div>\r\n\r\n</section>\r\n","import { NgModule } from '@angular/core';\r\n\r\n\r\nimport { TerminosYCondicionesComponent } from '../views/terminos-ycondiciones/terminos-ycondiciones.component';\r\nimport { APP_ROUTING } from '../app.routes';\r\nimport { PipesModule } from '../pipes/pipes.module';\r\nimport { PublicViewsComponent } from './components/public-views/public-views.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ComponentsModule } from '../components/components.module';\r\nimport { FormularioRegisterModule } from '../form-register/formulario-register.module';\r\nimport { LoginModule } from '../Login/login.module';\r\nimport { VistasPublicasModule } from '../vistas-publicas/vistas-publicas.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TerminosYCondicionesComponent,\r\n        PublicViewsComponent,\r\n    ],\r\n    exports: [],\r\n    imports : [\r\n        BrowserModule,\r\n        APP_ROUTING,\r\n        PipesModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        SharedModule,\r\n        ComponentsModule,\r\n        FormularioRegisterModule,\r\n        LoginModule,\r\n        VistasPublicasModule\r\n    ]\r\n})\r\n\r\nexport class PagesModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst URL = 'https://image.tmdb.org/t/p';\r\n@Pipe({\r\n  name: 'imagen'\r\n})\r\nexport class ImagenPipe implements PipeTransform {\r\n\r\n  // https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.j\r\n\r\n  transform(img: string, size: string =\"w500\"): string {\r\n    // if (!img){\r\n    //   return '../../assets/img/no-image-banner.jpg';\r\n    // }\r\n    const imgUrl = `${URL}/${size}/${img}`;\r\n    return imgUrl;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ImagenPipe } from './imagen.pipe';\r\nimport { ProductoPipe } from './producto.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ImagenPipe,\r\n    ProductoPipe\r\n  ],\r\n  exports: [\r\n    ImagenPipe,\r\n    ProductoPipe\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class PipesModule { }\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst URL = 'https://image.tmdb.org/t/p';\r\n@Pipe({\r\n  name: 'producto'\r\n})\r\nexport class ProductoPipe implements PipeTransform {\r\n\r\n  // https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.j\r\n\r\n  transform(img: string, size: string =\"w500\"): string {\r\n\r\n    const imgUrl = `${URL}/${size}/${img}`;\r\n    return imgUrl;\r\n  }\r\n}\r\n","import { Injectable, } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterceptorService implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n      Accept: 'application/json'\r\n    });\r\n\r\n    console.log('Paso el interceptor');\r\n\r\n    const reqClone = req.clone({\r\n      headers\r\n    });\r\n    return next.handle(reqClone);\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { StoreService } from '../store/store.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginGuardGuard implements CanActivate {\r\n\r\n  constructor(private storeService: StoreService) {}\r\n\r\n  canActivate() {\r\n\r\n    if ( this.storeService.estaLogueado() ){\r\n      console.log('Paso por el login Guard');\r\n      return true;\r\n    }else{\r\n      console.log('Bloqueado por el  Guard');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UsuarioService } from './usuario/usuario.service';\r\nimport { ServicioService } from './servicio.service';\r\nimport { LoginGuardGuard } from './guards/login-guard.guard';\r\nimport { StoreService } from './store/store.service';\r\nimport { UserStoreService } from './user-store/user-store.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { InterceptorService } from './Interceotores/interceptor.service';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  providers: [\r\n    UsuarioService,\r\n    StoreService,\r\n    ServicioService,\r\n    LoginGuardGuard,\r\n    UserStoreService,\r\n    InterceptorService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: InterceptorService,\r\n      multi: true\r\n    },\r\n  ],\r\n  imports: [CommonModule],\r\n  exports: [],\r\n\r\n})\r\n\r\nexport class ServiceModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RespuestaMDB } from '../interfaces/interfaces';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\nconst URL = environment.url;\r\nconst apiKey = environment.apiKey;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServicioService {\r\n\r\n  private ejecutarQuery<T>(query: string){\r\n    query = URL + query;\r\n    query += `&api_key=${apiKey}&language=es&include_image_language=es`;\r\n    return this.http.get( query );\r\n  }\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getFeatures(){\r\n    return this.ejecutarQuery('/discover/movie?primary_release_date.gte=2019-01-01&primary_release_date.lte=2020-07-30');\r\n  }\r\n\r\n  getproducto(id: string){\r\n    // tslint:disable-next-line: max-line-length\r\n    return this.http.get(`https://api.themoviedb.org/3/movie/${id}?api_key=aac1706fe8a46b5700714aead65c5e39`);\r\n  }\r\n\r\n  buscarProducto(texto: string){\r\n    return this.ejecutarQuery(`/search/movie?query=${ texto }`);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { URL_SERVICIOS } from 'src/app/config/config';\r\nimport { RegistroEmpresa } from '../../models/rut.model';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n// import swal from 'sweetalert';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n\r\n// IMPORTACIONES PARA USAR EL PATRÓN REDUX //\r\nimport { UserStore } from '../../models/models-@ngrx/userStore.models';\r\nimport { ActivarLoadingAction } from '../../shared/ui.accions';\r\nimport { DesactivarLoadingAction } from '../../shared/ui.accions';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/app.reducer';\r\nimport { SetUserAction } from '../../Login/auth/auth.actions';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StoreService {\r\n\r\n\r\n  respServidor: any ;\r\n  usuario: Usuario;\r\n  token: string;\r\n  headers: any;\r\n\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n    private store: Store<AppState>,\r\n    private router: Router,\r\n    // tslint:disable-next-line: no-shadowed-variable\r\n\r\n  ) {\r\n    this.cargarStorage();\r\n  }\r\n\r\n  private postQuery<T>(query: string, data: any){\r\n    query = URL_SERVICIOS + query;\r\n    return this.http.post<T>( query, data );\r\n  }\r\n\r\n  private execQuery<T>( query: string ) {\r\n    query = URL_SERVICIOS + query;\r\n    return this.http.get<T>( query );\r\n  }\r\n\r\n  cargarStorage() {\r\n\r\n    if ( localStorage.getItem('token')) {\r\n      this.token = localStorage.getItem('token');\r\n      this.usuario = JSON.parse( localStorage.getItem('usuario') );\r\n\r\n    } else {\r\n      this.token = '';\r\n      this.usuario = null;\r\n    }\r\n\r\n  }\r\n\r\n  guardarStorage(id: string, token: string, user: Usuario){\r\n    localStorage.setItem('id', id);\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('usuario', JSON.stringify(user));\r\n\r\n    this.usuario = user;\r\n    this.token = token;\r\n  }\r\n\r\n  async crearStore(user: Usuario){\r\n\r\n    const url = '/api/signup';\r\n\r\n    await this.postQuery(url, user).subscribe( userStore => {\r\n\r\n      // Redux//\r\n      this.respServidor = userStore;\r\n      const storeconnect = new UserStore(this.respServidor.user);\r\n      this.store.dispatch(new SetUserAction(storeconnect));\r\n      this.store.dispatch( new ActivarLoadingAction() );\r\n      // End Redux//\r\n\r\n      this.guardarStorage(this.respServidor.user.id, this.respServidor.remember_token, this.respServidor);\r\n      this.router.navigate(['/rut-store']);\r\n\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      if (err.error.errors.email) {\r\n        // swal({\r\n        //   text: 'El correo ya ha sido registrado',\r\n        //   icon: 'warning',\r\n        //   dangerMode: true,\r\n        // });\r\n      }\r\n\r\n      if (err.error.errors.register) {\r\n        // swal({\r\n        //   text: 'El nombre de usuario ya existe',\r\n        //   icon: 'warning',\r\n        //   dangerMode: true,\r\n        // });\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  registroRut(nameStore: RegistroEmpresa){\r\n\r\n    const url = '/api/signup/store';\r\n\r\n    this.postQuery(url, nameStore).subscribe( resp => {\r\n      window.location.href = '#/account';\r\n      // this.router.navigate(['/account']);\r\n      this.store.dispatch(new DesactivarLoadingAction() );\r\n    }, err => {\r\n      console.log(err);\r\n      // swal({\r\n      //     text: err.error.message,\r\n      //     icon: 'warning',\r\n      //     dangerMode: true,\r\n      //   });\r\n    });\r\n\r\n  }\r\n\r\n  estaLogueado(){\r\n    return (this.token.length > 6 ) ? true : false;\r\n  }\r\n\r\n  logout() {\r\n    const url = '/api/logout';\r\n    return this.execQuery(url).subscribe( data => {\r\n      this.usuario = null;\r\n      this.token = '';\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('id');\r\n      localStorage.removeItem('usuario');\r\n      this.router.navigate(['/home']);\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { URL_SERVICIOS } from 'src/app/config/config';\r\nimport { Negocio } from '../../models/negocio.model';\r\nimport { RegistroEmpresa } from '../../models/rut.model';\r\nimport { Router } from '@angular/router';\r\nimport { UserStore } from 'src/app/models/user-store.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { DataStore } from '../../models/dataStore.model';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n  'Content-Type': 'application/json',\r\n  Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n  Accept: 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserStoreService {\r\n\r\n  user: Usuario;\r\n  token: string;\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n  ) {\r\n    this.cargarStorage();\r\n   }\r\n\r\n  private execQuery<T>( query: string ) {\r\n    query = URL_SERVICIOS + query;\r\n    return this.http.get<T>( query );\r\n  }\r\n\r\n  private putQuery<T>(query: string, data: any){\r\n    query = URL_SERVICIOS + query;\r\n    return this.http.put<T>( query, data );\r\n  }\r\n\r\n  cargarStorage() {\r\n\r\n    if ( localStorage.getItem('token')) {\r\n      this.token = localStorage.getItem('token');\r\n      this.user = JSON.parse( localStorage.getItem('usuario') );\r\n\r\n    } else {\r\n      this.token = '';\r\n      this.user = null;\r\n\r\n    }\r\n\r\n  }\r\n\r\n  ActualizarUsuarioNegocio(id: string, user: Usuario){\r\n    const url = `/api/users/${id}`;\r\n    return this.putQuery(url, user);\r\n  }\r\n\r\n  ActualizarDataStore(userId: string, id: string, data: DataStore){\r\n    const url = `/api/users/${userId}/stores/${id}`;\r\n    return this.putQuery(url, data).subscribe();\r\n  }\r\n\r\n  getDataStore(userId: string, id: string){\r\n    const url = `/api/users/${userId}/stores/${id}`;\r\n    return this.execQuery(url);\r\n  }\r\n\r\n  getStore(){\r\n    const url = '/api/users';\r\n    return this.execQuery(url);\r\n  }\r\n\r\n  getStoreAccountEdit(id: string): Observable<any>{\r\n    const url = `/api/users/${id}/stores`;\r\n    return this.execQuery(url).map( (resp: any) => {\r\n      return resp;\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { URL_SERVICIOS } from 'src/app/config/config';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport { tokenName } from '@angular/compiler';\r\n// import swal from 'sweetalert';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n  'Content-Type': 'application/json',\r\n  Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n  Accept: 'application/json'\r\n  })\r\n};\r\n\r\nconst Options = {\r\n  headers: new HttpHeaders({\r\n  'Content-Type': 'application/json',\r\n  Authorization: 'Bearer ' + localStorage.getItem('token'),\r\n  Accept: 'application/json'\r\n  })\r\n};\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuarioService {\r\n\r\n  usuario: Usuario;\r\n  token: string;\r\n  google: any;\r\n\r\n  private postQuery<T>(query: string, data: any){\r\n    query = URL_SERVICIOS + query;\r\n    return this.http.post<T>( query, data, httpOptions );\r\n  }\r\n\r\n  private execQuery<T>( query: string ) {\r\n    query = URL_SERVICIOS + query;\r\n    return this.http.get<T>( query );\r\n  }\r\n\r\n  constructor(\r\n    public http: HttpClient\r\n  ) {\r\n  }\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  loginGoogle( nombre: string, email: string, user_id: string, img: string ){\r\n    const url = '/api/login/google/callback';\r\n    return this.postQuery(url, { nombre, email, user_id, img} );\r\n  }\r\n\r\n  RegisterGoogle( name: string, email: string, role: string ){\r\n    const url = '/api/signup/google';\r\n    return this.postQuery(url, { name, email, role} ).subscribe( resp => {\r\n      this.google = resp;\r\n      console.log('Respuesta desde Google', this.google);\r\n      console.log(this.google);\r\n      this.guardarStorageGoogle(this.google, this.google.user.email, this.google.user.id, this.google.remember_token);\r\n      window.location.href = '#/rut-store';\r\n    }, err => {\r\n      // swal({\r\n      //   text: err.error.message,\r\n      //   icon: 'warning',\r\n      //   dangerMode: true,\r\n      // });\r\n    }\r\n    );\r\n  }\r\n\r\n  // items: any =  localStorage.getItem('usuario');\r\n  // toObject = JSON.parse(this.items);\r\n\r\n  guardarStorageGoogle(usuario: Usuario, email: string, id: string, token: string){\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('usuario', JSON.stringify(usuario));\r\n    localStorage.setItem('id', id);\r\n    localStorage.setItem('email', email);\r\n\r\n    this.usuario = usuario;\r\n    // this.token = token;\r\n  }\r\n\r\n\r\n  guardarStorage(id: string, token: string, usuario: Usuario){\r\n    localStorage.setItem('id', id);\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('usuario', JSON.stringify(usuario));\r\n\r\n    this.usuario = usuario;\r\n    this.token = token;\r\n  }\r\n\r\n  login(usuario: Usuario, recordar: boolean = false){\r\n\r\n    const url = '/api/login';\r\n\r\n    if ( recordar ) {\r\n      localStorage.setItem('email', usuario.email );\r\n    }else {\r\n      localStorage.removeItem('email');\r\n    }\r\n\r\n    return this.postQuery(url, usuario);\r\n  }\r\n\r\n  crearUsuario( usuario: Usuario ) {\r\n    const url = URL_SERVICIOS + '/usuario';\r\n    return this.http.post( url, usuario )\r\n    ;\r\n  }\r\n\r\n  subirArchivo( archivo: any, userId: string, ){\r\n    const url = `/api/users/${userId}/images`;\r\n    return this.postQuery( url, archivo);\r\n  }\r\n\r\n  cambiarImagen( archivo: any, userId: string ) {\r\n   return this.subirArchivo(archivo, userId);\r\n  }\r\n\r\n  datosUserImages(userId: string){\r\n    const query = `/api/users/${userId}/images`;\r\n    return this.execQuery(query);\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-categorias',\r\n  templateUrl: './categorias.component.html',\r\n  styleUrls: ['./categorias.component.css']\r\n})\r\nexport class CategoriasComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>categorias works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserStoreService } from '../../services/user-store/user-store.service';\r\nimport { StoreService } from '../../services/store/store.service';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { UsuarioService } from '../../services/usuario/usuario.service';\r\nimport { URL_SERVICIOS } from 'src/app/config/config';\r\n\r\n@Component({\r\n  selector: 'app-navbarstore',\r\n  templateUrl: './navbarstore.component.html',\r\n  styleUrls: ['./navbarstore.component.css']\r\n})\r\nexport class NavbarstoreComponent implements OnInit {\r\n\r\n  usuario: Usuario;\r\n  datosUsuario: any[] = [];\r\n  IMG_USER: string;\r\n\r\n  constructor(\r\n    public usuarioService: UsuarioService,\r\n    public userStoreServices: UserStoreService,\r\n    public storeService: StoreService,\r\n\r\n  ) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.userStoreServices.getStore().subscribe(resp => {\r\n      this.datosUsuario.push(resp);\r\n    });\r\n\r\n    this.usuarioService.datosUserImages(localStorage.getItem('id')).subscribe( (Response: any) => {\r\n      this.IMG_USER = URL_SERVICIOS + '/' + Response[0].src;\r\n    });\r\n\r\n  }\r\n\r\n\r\nbuscar( ){}\r\n\r\n}\r\n","<header class=\"topbar\">\r\n    <nav class=\"navbar top-navbar navbar-expand-md navbar-light\">\r\n        <!-- ============================================================== -->\r\n        <!-- Logo -->\r\n        <!-- ============================================================== -->\r\n        <div class=\"navbar-header width-15 pl-4\">\r\n            <a class=\"navbar-brand\" [routerLink]=\"['home']\">   \r\n                <!--Logo icon -->\r\n                <span>\r\n                    <!-- dark Logo text -->\r\n                    <img src=\"../../../assets/img/Navbar/Logo Founduss.svg\" width=\"10%\" alt=\"homepage\" class=\"dark-logo\" />\r\n                    <!-- Light Logo text -->    \r\n                    <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\" />\r\n                </span>                 \r\n            </a>\r\n        </div>\r\n        <!-- ============================================================== -->\r\n        <!-- End Logo -->\r\n        <!-- ============================================================== -->\r\n        <div class=\"navbar-collapse justify-content-space-between\">\r\n            <!-- ============================================================== -->\r\n            <!-- Search -->\r\n            <!-- ============================================================== -->\r\n            <ul class=\"navbar-nav width-70\">\r\n                <form class=\"form-inline my-2 my-lg-0 width-100\">\r\n                    <input  class=\"form-control width-100 icon-magnifying-glass\" \r\n                            type=\"search\" \r\n                            placeholder=\"Buscar producto...\" \r\n                            aria-label=\"Search\"\r\n                    >\r\n                </form>\r\n            </ul>\r\n            <!-- ============================================================== -->\r\n            <!-- Profile -->\r\n            <!-- ============================================================== -->\r\n            <ul class=\"navbar-nav my-lg-0 width-20 display-flex justify-content-center align-items-center width-25\">\r\n\r\n                <li class=\"nav-item dropdown mega-dropdown mr-2\">\r\n\r\n                    <a  class=\"Gear nav-link width-100 height-50 display-flex align-items-center justify-content-center\"\r\n                        [routerLink]=\"['/account']\">\r\n\r\n                        <img     \r\n                                src=\"../../../assets/img/iconos/icons-main/icons/gear.svg\" \r\n                                alt=\"\" \r\n                                width=\"25\" \r\n                                height=\"25\" \r\n                                title=\"Configuración de tu cuenta\"\r\n                        >\r\n\r\n                    </a>\r\n\r\n                </li>\r\n\r\n                <li class=\"nav-item dropdown mega-dropdown mr-2\">\r\n\r\n                    <button class=\"btn btn-primary button fredoka width-100\" \r\n                            aria-haspopup=\"true\" \r\n                            aria-expanded=\"false\"\r\n                            routerLink=\"/contact\">\r\n\r\n                            Mi Tienda\r\n\r\n                    </button> \r\n\r\n                </li>\r\n\r\n\r\n                <li class=\"nav-item dropdown\">\r\n\r\n                    <a class=\"nav-link dropdown-toggle waves-effect waves-dark\" href=\"\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <img [src]=\"IMG_USER\" alt=\"user\" class=\"profile-pic\" />\r\n                    </a>\r\n                 \r\n                    <div  class=\"dropdown-menu dropdown-menu-right mt-2 animated flipInY\">\r\n                        <ul class=\"dropdown-user\">\r\n                            <li>\r\n                                <div class=\"dw-user-box display-flex align-items-center\" align=\"center\">\r\n                                    <div class=\"u-img\"><img [src]=\"IMG_USER\" alt=\"user\"></div> \r\n                                    <div class=\"u-text\">\r\n                                        <h4 class=\"name-user OpenSans-700 text-left\">\r\n                                            <!-- {{ usuario.name }}  -->\r\n                                        </h4> \r\n                                        <p class=\"text-muted\">\r\n                                            <!-- {{ usuario.email }}  -->\r\n                                        </p> \r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                            <li role=\"separator\" class=\"divider\"></li>\r\n                            <li class=\"nav-item\">\r\n                                <a class=\"a-menu-user nav-link OpenSans-400\"  routerLink=\"/perfil\">\r\n\r\n                                    <img    class=\"mr-2\" \r\n                                            src=\"../../../assets/img/iconos/icons-main/icons/person.svg\" \r\n                                            alt=\"\" width=\"18\" \r\n                                            height=\"18\" \r\n                                            title=\"Person\"\r\n                                    >\r\n                                        Perfil\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item\" routerLinkActive=\"active\">\r\n                                <a  class=\"a-menu-user nav-link OpenSans-400\" [routerLink]=\"['/account']\">\r\n\r\n                                    <img    class=\"mr-2\" \r\n                                            src=\"../../../assets/img/iconos/icons-main/icons/gear.svg\" \r\n                                            alt=\"\" \r\n                                            width=\"18\" \r\n                                            height=\"18\" \r\n                                            title=\"Configuración\"\r\n                                    >\r\n\r\n                                    Configuración de tu cuenta\r\n\r\n                                </a>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n\r\n                                <a  class=\"a-menu-user nav-link OpenSans-400\" \r\n                                    (click)=\"storeService.logout()\">\r\n\r\n                                    <img    class=\"mr-2\" \r\n                                            src=\"../../../assets/img/iconos/icons-main/icons/power.svg\" \r\n                                            alt=\"\" \r\n                                            width=\"18\" \r\n                                            height=\"18\" \r\n                                            title=\"Logout\"\r\n                                    >\r\n\r\n                                    Salir\r\n\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n            <!-- ============================================================== -->\r\n            <!-- END Profile -->\r\n            <!-- ============================================================== -->\r\n        </div>\r\n    </nav>\r\n</header>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar-to-home',\r\n  templateUrl: './navbar-to-home.component.html',\r\n  styleUrls: ['./navbar-to-home.component.css']\r\n})\r\nexport class NavbarToHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-light bg-light\">\r\n    <a class=\"navbar-brand\"  [routerLink]=\"['/home']\">\r\n      <img src=\"../../../assets/img/Navbar/Logo Founduss.svg\" width=\"60%\">\r\n    </a>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <img src=\"assets/img/Navbar/Logo Founduss.svg\" [routerLink]=\"['home']\" class=\"founduss-logo puntero\">\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse justify-content-flex-end\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item mr-3 ml-3\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link family-500 size-15\" [routerLink]=\"['/public-views']\">Productos</a>\r\n      </li>\r\n      <li class=\"nav-item mr-3 ml-3\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link family-500 size-15\">Quienes Somos</a>\r\n      </li>\r\n      <li class=\"nav-item mr-3 ml-3\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link family-500 size-15\">Farmacias aliadas</a>\r\n      </li>\r\n      <li class=\"nav-item mr-3 ml-3\" routerLinkActive=\"active\">\r\n        <a class=\"nav-link family-500 size-15\">Contactanos</a>\r\n      </li>\r\n      \r\n    </ul>\r\n    <!-- <form class=\"form-inline my-2 my-lg-0 width-80\">\r\n      <input class=\"form-control mr-sm-2 width-95\" type=\"search\" placeholder=\"Buscar producto...\" aria-label=\"Search\">\r\n    </form> -->\r\n    <ul class=\"mb-0 pl-3 width-30 display-flex justify-content-around\">\r\n      <li class=\"nav-item menu\" routerLinkActive=\"active\">\r\n        <a class=\"family-500 cursor-poniter size-16 black fredoka\" id=\"registrarme\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\" >Regístrarme</a>\r\n      </li>\r\n      <li class=\"nav-item menu\" routerLinkActive=\"active\">\r\n        <a class=\"family-500 ml-2 cursor-poniter size-16 black fredoka\" id=\"inisiar-sesion\" [routerLink]=\"['/login-usuario']\">Iniciar sesión</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"exampleModalCenter\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLongTitle\">Modal title</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" [routerLink]=\"['/register']\">Persona</button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" [routerLink]=\"['/register-negocio']\">Farmacia</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { APP_ROUTING } from '../app.routes';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { NavbarToHomeComponent } from './navbar-to-home/navbar-to-home.component';\r\nimport { CategoriasComponent } from './categorias/categorias.component';\r\nimport { NavbarstoreComponent } from './header/navbarstore.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        NavbarComponent,\r\n        SidebarComponent,\r\n        NavbarToHomeComponent,\r\n        CategoriasComponent,\r\n        NavbarstoreComponent\r\n    ],\r\n    imports: [ APP_ROUTING, ],\r\n    exports: [ NavbarComponent,  SidebarComponent, NavbarToHomeComponent, CategoriasComponent, NavbarstoreComponent]\r\n})\r\n\r\nexport class SharedModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<aside>\r\n    <nav>\r\n        <ul>\r\n            <li class=\"family-400 pb-3\">\r\n                <a>Productos</a>\r\n            </li>\r\n            <li class=\"family-400\">\r\n                <i class=\" fa fa-envelope\"></i>\r\n                <a>Contacto</a>\r\n            </li>\r\n        </ul>\r\n\r\n        <ul class=\"pt-5\">\r\n\r\n            <h5 class=\"family-500 size-16\">\r\n                Categorías\r\n            </h5>\r\n            <li class=\"family-500 size-12 pb-2 pt-2 puntero\">\r\n                <a>Medicamentos</a>\r\n            </li>\r\n            <li class=\"family-500 size-12 pb-2 puntero\">\r\n                <a>Belleza & Higiene</a>\r\n            </li>\r\n            <li class=\"family-500 size-12 pb-2 puntero\">\r\n                <a>Dieta & Fitness</a>\r\n            </li>\r\n            <li class=\"family-500 size-12 pb-2 puntero\">\r\n                <a>Salud y vitaminas</a>\r\n            </li>\r\n            <li class=\"family-500 size-12 pb-2 puntero\">\r\n                <a>Vida sexual</a>\r\n            </li>\r\n            <li class=\"family-500 size-12 pb-2 puntero\">\r\n                <a>Ortopedia</a>\r\n            </li>\r\n            <li class=\"family-500 size-12 pb-2 puntero\">\r\n                <a>Homeopatia & natural</a>\r\n            </li>\r\n            <li class=\"family-500 size-12 pb-2 puntero\">\r\n                <a>Mascotas & veterinaria</a>\r\n            </li>\r\n\r\n        </ul>\r\n\r\n        <ul>\r\n            <h5 class=\"family-500 size-16\">\r\n                Subcategorías\r\n            </h5>\r\n            \r\n            <li class=\"pt-2\">\r\n                <input type=\"checkbox\" id=\"dolor\" name=\"dolor\"> \r\n                <label class=\"puntero pl-2 size-12 family-500\" for=\"dolor\">\r\n                    <a>Dolor & inflamación</a>\r\n                </label>\r\n            </li>\r\n\r\n            <li>\r\n                <input type=\"checkbox\" id=\"huesos\" name=\"huesos\"> \r\n                <label class=\"puntero pl-2 size-12 family-500\" for=\"huesos\">\r\n                    <a>Huesos & articulaciones</a>\r\n                </label>\r\n            </li>\r\n\r\n            <li>\r\n                <input type=\"checkbox\" id=\"corazon\" name=\"corazon\">\r\n                <label class=\"puntero pl-2 size-12 family-500\" for=\"corazon\">\r\n                    <a>Corazón</a>\r\n                </label> \r\n            </li>\r\n\r\n            <li>\r\n                <input type=\"checkbox\" id=\"defensas\" name=\"defensas\">\r\n                <label class=\"puntero pl-2 size-12 family-500\" for=\"defensas\">\r\n                    <a>Defensas</a>\r\n                </label> \r\n            </li>\r\n\r\n            <li>\r\n                <input type=\"checkbox\" id=\"vegano\" name=\"vegano\">\r\n                <label class=\"puntero pl-2 size-12 family-500\" for=\"vegano\">\r\n                    <a>Vegano</a>\r\n                </label> \r\n            </li>\r\n\r\n        </ul>\r\n\r\n        <ul>\r\n            <h5 class=\"family-500 size-16\">\r\n                Precios\r\n            </h5>\r\n            \r\n            <li class=\"pt-2\">\r\n                <input type=\"checkbox\" id=\"dolor\" name=\"dolor\"> \r\n                <label class=\"puntero pl-2 size-12 family-500\" for=\"dolor\">\r\n                    <a>$0 - $10.000</a>\r\n                </label>\r\n            </li>\r\n\r\n            <li>\r\n                <input type=\"checkbox\" id=\"huesos\" name=\"huesos\"> \r\n                <label class=\"puntero pl-2 size-12 family-500\" for=\"huesos\">\r\n                    <a>$10.000 - $20.000</a>\r\n                </label>\r\n            </li>\r\n\r\n            <li>\r\n                <input type=\"checkbox\" id=\"corazon\" name=\"corazon\">\r\n                <label class=\"puntero pl-2 size-12 family-500\" for=\"corazon\">\r\n                    <a>$20.000 - $30.000</a>\r\n                </label> \r\n            </li>\r\n\r\n            <li>\r\n                <input type=\"checkbox\" id=\"defensas\" name=\"defensas\">\r\n                <label class=\"puntero pl-2 size-12 family-500\" for=\"defensas\">\r\n                    <a>$30.000 - $40.000</a>\r\n                </label> \r\n            </li>\r\n\r\n            <li>\r\n                <input type=\"checkbox\" id=\"vegano\" name=\"vegano\">\r\n                <label class=\"puntero pl-2 size-12 family-500\" for=\"vegano\">\r\n                    <a>$50.000 - $60.000</a>\r\n                </label> \r\n            </li>\r\n\r\n        </ul>\r\n\r\n    </nav>\r\n</aside>\r\n","\r\nimport {Action} from '@ngrx/store';\r\n\r\nexport const ACTIVAR_LOADING = '[UI Loading] Cargando...';\r\nexport const DESACTIVAR_LOADING = '[UI Loading] FIn de carga...';\r\n\r\nexport class ActivarLoadingAction implements Action {\r\n    readonly type = ACTIVAR_LOADING;\r\n}\r\n\r\nexport class DesactivarLoadingAction implements Action {\r\n    readonly type = DESACTIVAR_LOADING;\r\n}\r\n\r\nexport type actions = ActivarLoadingAction  | DesactivarLoadingAction;\r\n","import {Action} from '@ngrx/store';\r\nimport { ACTIVAR_LOADING, DESACTIVAR_LOADING, actions } from './ui.accions';\r\n\r\nexport interface State {\r\n    isLoading: boolean;\r\n}\r\n\r\nconst initState: State = {\r\n    isLoading: false\r\n};\r\n\r\nexport function uiReducer(state = initState, action: actions): State {\r\n\r\n    switch (action.type){\r\n\r\n        case ACTIVAR_LOADING:\r\n        return{\r\n            isLoading: true\r\n        };\r\n\r\n        case   DESACTIVAR_LOADING:\r\n        return{\r\n            isLoading: false\r\n        };\r\n\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-terminos-ycondiciones',\r\n  templateUrl: './terminos-ycondiciones.component.html',\r\n  styleUrls: ['./terminos-ycondiciones.component.css']\r\n})\r\nexport class TerminosYCondicionesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-terminos-condiciones></app-terminos-condiciones>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, FormArray, AbstractControl, } from '@angular/forms';\r\nimport { UserStoreService } from '../../services/user-store/user-store.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { StoreService } from '../../services/store/store.service';\r\nimport { Negocio } from '../../models/negocio.model';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\n\r\nimport { UsuarioService } from '../../services/usuario/usuario.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-account',\r\n  templateUrl: './account.component.html',\r\n  styleUrls: ['./account.component.css']\r\n})\r\n\r\nexport class AccountComponent implements OnInit {\r\n\r\n  forma: FormGroup;\r\n  items: any = {};\r\n  userStore: Negocio;\r\n  usuario: Usuario;\r\n  token: string;\r\n  datosUsuario: any[] = [];\r\n  // tslint:disable-next-line: member-ordering\r\n\r\n  constructor(\r\n    public userStoreServices: UserStoreService,\r\n    public storeService: StoreService,\r\n    public usuarioService: UsuarioService\r\n  ) {\r\n\r\n    // this.usuario = this.toObject.user;\r\n    console.log(this.usuario);\r\n\r\n    this.forma = new FormGroup({\r\n      username: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      name: new FormControl('', [Validators.required, Validators.minLength(5)]),\r\n      email: new FormControl('' , [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]),\r\n      phone: new FormControl('', [Validators.required, Validators.minLength(10)]),\r\n      password1: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n      password2: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userStoreServices.getStore().subscribe(resp => {\r\n      this.datosUsuario.push(resp);\r\n    });\r\n  }\r\n\r\n\r\n  ActualizarDatosUser(user: Usuario){\r\n\r\n    const Userstore = new Usuario(\r\n      this.forma.value.username,\r\n      this.forma.value.name,\r\n      this.forma.value.email,\r\n      this.forma.value.password,\r\n      this.forma.value.phone,\r\n    );\r\n\r\n    this.userStoreServices.ActualizarUsuarioNegocio(localStorage.getItem('id'), Userstore).subscribe( usuarioActualizado => {\r\n      console.log('Data', usuarioActualizado);\r\n      const usuarioDB: any = usuarioActualizado;\r\n      this.guardarStorage(usuarioDB.id, localStorage.getItem('token'));\r\n      // this.guardarStorage(data.id, )\r\n    });\r\n\r\n  }\r\n\r\n  guardarStorage(id: string, token: string){\r\n    localStorage.setItem('id', id);\r\n    localStorage.setItem('token', token);\r\n    this.token = token;\r\n  }\r\n\r\n  Reset(){\r\n    this.forma.reset(this.usuario);\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n","\r\n\r\n<div id=\"main-wrapper\">\r\n    <app-navbarstore id=\"header\"></app-navbarstore>\r\n\r\n    \r\n    <!-- <aside class=\"left-sidebar\"> -->\r\n        <!-- Sidebar scroll-->\r\n            <!-- <nav class=\"sidebar-nav\">\r\n                <ul id=\"sidebarnav\" class=\"in pl-3 pr-3\">\r\n                    <li class=\"family-300 nav-item\" routerLinkActive=\"active\">\r\n                        <a class=\"nav-link size-16\" [routerLink]=\"['/account']\">\r\n                            Mi cuenta\r\n                        </a>\r\n                    </li>\r\n                    <li class=\"family-400 nav-item\">\r\n                        <a class=\"nav-link size-16\">\r\n                            Planes\r\n                        </a>\r\n                    </li>\r\n                    <li class=\"family-400 nav-item\">\r\n                        <a class=\"nav-link size-16\">\r\n                            Franquicia\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </nav> -->\r\n        <!-- End Sidebar scroll-->\r\n    <!-- </aside> -->\r\n    <!-- ============================================================== -->\r\n    <!-- Page wrapper  -->\r\n    <!-- ============================================================== -->\r\n    <div class=\"page-wrapper animated fadeIn\">\r\n        <!-- ============================================================== -->\r\n        <!-- Container fluid  -->\r\n        <!-- ============================================================== -->\r\n        <div class=\"container-fluid\">\r\n            <div class=\"container pt-4\">\r\n                <div class=\"row\">\r\n                   \r\n                        <!-- <h2 class=\"OpenSans-700 pl-3 pb-3 h2-title\">Configuración de tu cuenta</h2> -->\r\n                        <!-- ============================================================== -->\r\n                        <!-- Formulario de Configuración  -->\r\n                        <!-- ============================================================== -->\r\n                        <form   [formGroup]=\"forma\"\r\n                                (ngSubmit)=\"ActualizarDatosUser(forma.value)\" \r\n                                novalidate=\"novalidate\"\r\n                                *ngFor=\"let data of datosUsuario\"\r\n                                class=\"col-md-6\"\r\n                                >\r\n\r\n                            <div class=\"row\">\r\n\r\n                                <h2 class=\"OpenSans-700 pl-3 pb-3 h2-title\">Configuración de tu cuenta</h2>\r\n\r\n                                <div class=\"col-md-12\">\r\n\r\n                                    <div class=\"form-group row mb-0 mt-4\">\r\n                                        <div class=\"col-12\">\r\n                                            <h5 class=\"family-500 orange\">Información de contacto</h5>\r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-8\">\r\n                                            <label class=\"OpenSans-600 size-12\">Nombre de usuario</label>\r\n                                            <input  class=\"form-control\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Ingresa tú nombre de usuario\"\r\n                                                    formControlName=\"username\"\r\n                                                    [ngModel]=\"data.username\"\r\n                                                    [ngClass]=\"{'is-invalid':  (!forma.controls['username'].valid || forma.controls['username'].errors?.minlength)&& forma.controls['username'].touched, 'is-valid': forma.controls['username'].valid }\"     \r\n                                            >\r\n                                            <div    *ngIf=\"forma.get('username').errors?.required\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    Ingresa un nombre de usuario para mostrar que sea valido\r\n                                            </div>\r\n                                            <div    *ngIf=\"forma.get('username').errors?.minlength\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    Por lo menos 5 caracteres\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-8\">\r\n                                            <label class=\"OpenSans-600 size-12\">Nombre y Apellido</label>\r\n                                            <input  class=\"form-control\"\r\n                                                    type=\"text\"                                  \r\n                                                    formControlName=\"name\"\r\n                                                    [ngModel]=\"data.name\"\r\n                                                    [ngClass]=\"{'is-invalid':  (!forma.controls['name'].valid || forma.controls['name'].errors?.minlength)&& forma.controls['name'].touched, 'is-valid': forma.controls['name'].valid }\" \r\n                                                    \r\n                                            >\r\n\r\n                                            <div    *ngIf=\"forma.get('name').errors?.required\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    Ingresa un nombre para mostrar que sea valido.\r\n                                            </div>\r\n                                            <div    *ngIf=\"forma.get('name').errors?.minlength\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    Por lo menos 5 caracteres.\r\n                                            </div>\r\n                                    \r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-8\">\r\n                                            <label class=\"OpenSans-600 size-12\">Correo</label>\r\n                                            <input  class=\"form-control email-icon\"\r\n                                                    type=\"email\"\r\n                                                    value = {{items.email}}\r\n                                                    placeholder=\"Correo electrónico\"\r\n                                                    formControlName=\"email\"\r\n                                                    disabled=\"true\"\r\n                                                    [ngModel]=\"data.email\"\r\n                                                    [ngClass]=\"{'is-invalid':  (!forma.controls['email'].valid || forma.controls['email'].errors?.minlength)&& forma.controls['email'].touched, 'is-valid': forma.controls['email'].valid }\" \r\n                                            >\r\n\r\n                                            <div    *ngIf=\"forma.get('email').errors?.required\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    Agrega una dirección de correo electrónico para poder iniciar\r\n                                                    sesión con tu dirección de correo electrónico.\r\n                                            </div>\r\n                                            <div    *ngIf=\"forma.get('email').errors?.minlength\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    Por lo menos 5 caracteres.\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-8\">\r\n                                            <label class=\"OpenSans-600 size-12\">Telefono</label>\r\n                                            <input  class=\"form-control icon-phone input\"\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Ingrese telefono\"\r\n                                                    formControlName=\"phone\"\r\n                                                    [ngModel]=\"data.phone\"   \r\n                                                    [ngClass]=\"{'is-invalid':  (!forma.controls['phone'].valid || forma.controls['phone'].errors?.minlength)&& forma.controls['phone'].touched, 'is-valid': forma.controls['phone'].valid }\" \r\n                                            >\r\n\r\n                                            <div    *ngIf=\"forma.get('phone').errors?.required\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    Ingresa tu número teléfonico.\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h5 class=\"family-500 orange\">Contraseña</h5>\r\n                                        </div>\r\n                                    </div>\r\n                \r\n                \r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-8\">\r\n                                            <label class=\"OpenSans-600 size-12\">Nueva contraseña</label>\r\n                                            <input  class=\"form-control\"\r\n                                                    type=\"password\"\r\n                                                    placeholder=\"Contraseña\"\r\n                                                    formControlName=\"password1\"\r\n                                                    [ngClass]=\"{'is-invalid':  (!forma.get('password1').valid || forma.get('password1').errors?.minlength)&& forma.get('password1').touched, 'is-valid': forma.get('password1').valid }\"\r\n                                            >\r\n\r\n                                            <div    *ngIf=\"forma.get('password1').errors?.required\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    Este campo es requerido\r\n                                            </div>\r\n                                            <div    *ngIf=\"forma.get('password1').errors?.minlength\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    La contraseña debe tener al menos 8 caracteres\r\n                                            </div> \r\n                                \r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-8\">\r\n                                            <label class=\"OpenSans-600 size-12\">Repita contraseña</label>\r\n                                            <input  class=\"form-control\"\r\n                                                    type=\"password\"\r\n                                                    placeholder=\"Confirma contraseña\"\r\n                                                    formControlName=\"password2\"\r\n                                                    [ngClass]=\"{'is-invalid':  (!forma.get('password2').valid || forma.get('password2').errors?.minlength)&& forma.get('password2').touched, 'is-valid': forma.get('password2').valid }\"\r\n                                            >\r\n\r\n                                            <div    *ngIf=\"forma.get('password2').errors?.required\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    Este campo es requerido\r\n                                            </div>\r\n                                            <div    *ngIf=\"forma.get('password2').errors?.minlength\"  \r\n                                                    class=\"invalid-feedback\">\r\n                                                    La contraseña debe tener al menos 8 caracteres\r\n                                            </div> \r\n                                \r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h5 class=\"family-500 orange\">Cuentas conectadas</h5>\r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                    <div class=\"form-group row\">\r\n                                        <div class=\"col-12\">\r\n                                            <p>Servicios que usas para iniciar sesión en founduss</p>\r\n                \r\n                                            <div class=\"display-flex align-items-center\">\r\n                                                <i class=\"fas fa-trash-alt mr-4\"></i>\r\n                                                <img src=\"../../../assets/img//LoginIconos/Google.svg\" width=\"7%\">\r\n                                                <span class=\"pl-1\">Google</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                \r\n                                    <div class=\"form-group row mb-0 mt-4\">\r\n                                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-8\">\r\n                                            <h5 class=\"family-500 orange\">\r\n                                                Desactivar mi cuenta\r\n                                            </h5>\r\n\r\n                                            <p class=\"size-14\">\r\n                                                Si desactivas tu cuenta ya no podrás acceder\r\n                                                a tu tienda, ni iniciar sesión en founduss. \r\n                                                Si quieres desactivar es´ta cuenta, está no se eliminaráapp-categorias,\r\n                                                <span class=\"family-500 orange\">\r\n                                                    para eliminar tu cuenta ponte en contacto con nuestro equipo de ayuda\r\n                                                </span>\r\n                                            </p>\r\n\r\n                                        </div>\r\n                                            <button type=\"submit\" \r\n                                                    class=\"btn btn-outline-primary btn-block fredoka mt-4 col-6 button\"\r\n                                                    >\r\n                                            Desactivar cuenta\r\n                                            </button>  \r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <footer class=\"pt-4 pb-4 pl-0 col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\">\r\n                                <button class=\"btn btn-outline-secondary width-30 mr-3 fredoka\" \r\n                                        type=\"submit\"\r\n                                        (click)=\"Reset()\"\r\n                                        [disabled]=\"forma.pristine\"       \r\n                                        >\r\n                                    Cancelar\r\n                                </button>\r\n                                <button class=\"btn btn-outline-primary button width-30 fredoka\" \r\n                                        type=\"submit\"\r\n                                        [disabled]=\"forma.pristine\"\r\n                                        >\r\n                                    Guardar cambios\r\n                                </button>\r\n                            </footer>\r\n                        </form>\r\n\r\n                       <!-- ============================================================== -->\r\n                        <!-- SUVIDA DEL AVATAR DEL USUARIO  -->\r\n                        <!-- ============================================================== --> \r\n                        <section class=\"col-md-4\">\r\n                            <app-photo-user-edit></app-photo-user-edit>\r\n                            <app-photo-user></app-photo-user>\r\n                        </section>\r\n                        <!-- ============================================================== -->\r\n                        <!-- End SUVIDA DEL AVATAR DEL USUARIO -->\r\n                        <!-- ============================================================== -->\r\n                        \r\n                        \r\n                        <!-- ============================================================== -->\r\n                        <!-- End Formulario de Configuración  -->\r\n                        <!-- ============================================================== -->\r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- ============================================================== -->\r\n        <!-- End Container fluid  -->\r\n        <!-- ============================================================== -->  \r\n    </div>\r\n    <!-- ============================================================== -->\r\n    <!-- End Page wrapper  -->\r\n    <!-- ============================================================== -->\r\n</div>\r\n\r\n\r\n","export class Marcador {\r\n\r\n    public lat: number;\r\n    public lng: number;\r\n\r\n    public titulo = 'Sin Título';\r\n    public desc = 'Sin Dirección';\r\n\r\n\r\n    constructor( lat: number,  lng: number ) {\r\n        this.lat = lat;\r\n        this.lng = lng;\r\n    }\r\n\r\n}\r\n\r\n\r\n","<form   [formGroup]=\"forma\" \n        (ngSubmit)=\"editDescriptions()\" \n        novalidate=\"novalidate\"\n        class=\"pt-3\"\n        *ngFor=\"let data of dataStore\">\n    \n      <div class=\"form-group row\">\n            <div class=\"col-12\">\n                  <input     class=\"form-control\"\n                              type=\"text\"\n                              [(ngModel)]=\"data.social_reason\"\n                              placeholder=\"Nombre comercial\"\n                              formControlName=\"social_reason\"\n                              [ngClass]=\"{'is-invalid':  (!forma.controls['social_reason'].valid || forma.controls['social_reason'].errors?.minlength)&& forma.controls['social_reason'].touched, 'is-valid': forma.controls['social_reason'].valid }\" \n                  >\n                  \n                  <div  *ngIf=\"forma.get('social_reason').errors?.required\"  \n                        class=\"invalid-feedback\">\n                        Este campo es requerido\n                  </div>\n                  <div  *ngIf=\"forma.get('social_reason').errors?.minlength\"  \n                        class=\"invalid-feedback\">\n                        Por lo menos 5 caracteres\n                  </div>\n            \n            </div>\n      </div>\n\n      <div class=\"form-group row\">\n            <div class=\"col-12\">\n                  <input     class=\"form-control\"\n                              type=\"text\"\n                              placeholder=\"Rut\"\n                              [(ngModel)]=\"data.rut\"\n                              formControlName=\"rut\"\n                              [ngClass]=\"{'is-invalid':  (!forma.controls['rut'].valid || forma.controls['rut'].errors?.minlength)&& forma.controls['rut'].touched, 'is-valid': forma.controls['rut'].valid }\" \n                  >\n                  \n                  <div *ngIf=\"forma.get('rut').errors?.required\"  \n                        class=\"invalid-feedback\">\n                        Este campo es requerido\n                  </div>\n\n                  <div *ngIf=\"forma.get('rut').errors?.minlength\"  \n                        class=\"invalid-feedback\">\n                        Por lo menos 5 caracteres\n                  </div>\n      \n            </div>\n      </div>\n\n      <div class=\"form-group row\">\n            <div class=\"col-12\">\n                  <input class=\"form-control\"\n                        type=\"text\"\n                        [(ngModel)]=\"data.name\"\n                        placeholder=\"Razón social\"\n                        formControlName=\"name\"\n                        [ngClass]=\"{'is-invalid':  (!forma.controls['name'].valid || forma.controls['name'].errors?.minlength)&& forma.controls['name'].touched, 'is-valid': forma.controls['name'].valid }\" \n                  >\n              \n                  <div  *ngIf=\"forma.get('name').errors?.required\"  \n                        class=\"invalid-feedback\">\n                        Este campo es requerido\n                  </div>\n                  <div  *ngIf=\"forma.get('name').errors?.minlength\"  \n                        class=\"invalid-feedback\">\n                        Por lo menos 5 caracteres\n                  </div>\n      \n            </div>\n      </div>\n\n      <div class=\"form-group row\">\n            <div class=\"col-12\">\n\n                  <textarea   class=\"form-control\"\n                              type=\"text\"\n                              [(ngModel)]=\"data.description\"\n                              placeholder=\"Indique la descripción\"\n                              formControlName=\"description\"></textarea>\n                  \n\n            </div>\n      </div>\n\n       \n</form>\n\n\n","import { Component, OnInit, Inject, Input  } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { Usuario } from 'src/app/models/usuario.model';\nimport { UserStoreService } from '../../../services/user-store/user-store.service';\n\n@Component({\n  selector: 'app-contact-description-edit',\n  templateUrl: './contact-description-edit.component.html',\n  styleUrls: ['../contact-information-edit/contact-information-edit.component.css']\n})\nexport class ContactDescriptionEditComponent implements OnInit {\n\n  @Input() forma: FormGroup;\n  User: any =  localStorage.getItem('usuario');\n  toObject = JSON.parse(this.User);\n  usuario: Usuario;\n  dataStore: any[] = [];\n  dataStoreEdit = {};\n\n  constructor(public userStoreServices: UserStoreService) { this.usuario = this.toObject; }\n\n\n  ngOnInit() {\n    this.userStoreServices.getStoreAccountEdit(localStorage.getItem('id')).subscribe( data => {\n      this.dataStore = data;\n      this.traerdata();\n    });\n  }\n\n  editDescriptions(){}\n\n  guardarCambios(){\n\n  }\n\n  onNoClick(): void {\n  }\n\n  async traerdata(){\n    await this.userStoreServices\n    .getDataStore(localStorage.getItem('id'), this.dataStore[0].id)\n    .subscribe( ( resp: any ) => {\n      // tslint:disable-next-line: no-string-literal\n      this.dataStoreEdit = resp;\n      console.log('Descripcion Edit', this.dataStoreEdit);\n      // this.guardarStorage( this.dataStoreEdit );\n\n    });\n  }\n\n}\n","\n\n    <div class=\"form-group row\">\n        <div class=\"col-12\" *ngFor=\"let item of dataStoreEdit\">\n            <textarea   disabled=\"true\" \n                        class=\"width-100 family-400 pt-3 size-16\" \n                        style=\"min-height: 250px; border:none;\">{{item.description}}</textarea>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { Description } from '../../classes/descriptionStore.class';\nimport { UserStoreService } from '../../../services/user-store/user-store.service';\n\n@Component({\n  selector: 'app-contact-description',\n  templateUrl: './contact-description.component.html',\n  styleUrls: ['../../contact/contact.component.css']\n})\nexport class ContactDescriptionComponent implements OnInit {\n\n  dataStore: any[] = [];\n  dataStoreEdit: any[] = [];\n\n  description: Description[] = [];\n\n  constructor(public dialog: MatDialog, public userStoreServices: UserStoreService) { }\n\n  ngOnInit() {\n\n    this.userStoreServices.getStoreAccountEdit(localStorage.getItem('id')).subscribe( data => {\n      this.dataStore = data;\n      this.traerdata();\n    });\n\n  }\n\n  editarDescription(){}\n\n  async traerdata(){\n    await this.userStoreServices\n    .getDataStore(localStorage.getItem('id'), this.dataStore[0].id)\n    .subscribe( ( resp: any ) => {\n      // tslint:disable-next-line: no-string-literal\n      this.dataStoreEdit.push(resp);\n      console.log('información de contacto', this.dataStoreEdit);\n      // this.guardarStorage( this.dataStoreEdit );\n\n    });\n  }\n\n}\n","\n<form   [formGroup]=\"forma\" \n        (ngSubmit)=\"editInformationContact()\" \n        novalidate=\"novalidate\"\n        class=\"pt-3\"\n        *ngFor=\"let data of dataStoreEdit\">\n\n        <div  class=\"form-group row\">\n                <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-10\">\n                        <input  class=\"form-control email-icon\"\n                                type=\"email\"\n                                [ngModel]=\"data.email_1\"\n                                placeholder=\"Correo electrónico\"\n                                formControlName=\"email_1\"\n                                [ngClass]=\"{'is-invalid':  (!forma.controls['email_1'].valid || forma.controls['email_1'].errors?.minlength)&& forma.controls['email_1'].touched, 'is-valid': forma.controls['email_1'].valid }\"\n                        \n                        >\n                        <div    *ngIf=\"forma.get('email_1').errors?.required\"  \n                                class=\"invalid-feedback\">\n                                Este campo es requeridoemail\n                        </div>\n                        <div   *ngIf=\"forma.get('email_1').errors?.pattern\"  \n                                class=\"invalid-feedback\">\n                                No posee la forma de un correo: example@gmail.com\n                        </div>\n                </div>\n        </div>\n\n        <div class=\"form-group row\">\n                <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-10\">\n                        <input  class=\"form-control email-icon\"\n                                type=\"email\"\n                                [ngModel]=\"data.email_2\"\n                                placeholder=\"Correo electrónico\"\n                                formControlName=\"email_2\"\n                                [ngClass]=\"{'is-invalid':  (!forma.controls['email_2'].valid || forma.controls['email_2'].errors?.minlength)&& forma.controls['email_2'].touched, 'is-valid': forma.controls['email_2'].valid }\"\n                        \n                        >\n                        <div    *ngIf=\"forma.get('email_2').errors?.required\"  \n                                class=\"invalid-feedback\">\n                                Este campo es requeridoemail\n                        </div>\n                        <div   *ngIf=\"forma.get('email_2').errors?.pattern\"  \n                                class=\"invalid-feedback\">\n                                No posee la forma de un correo: example@gmail.com\n                        </div>\n                </div>\n        </div>\n\n\n        <div class=\"form-group row\">\n                <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-10\">\n            \n                        <input  class=\"form-control\"\n                                type=\"phone\"\n                                placeholder=\"Ingrese teléfono\"\n                                [ngModel]=\"data.phone_1\"\n                                formControlName=\"phone_1\"\n                                [ngClass]=\"{'is-invalid':  (!forma.controls['phone_1'].valid || forma.controls['phone_1'].errors?.minlength)&& forma.controls['phone_1'].touched, 'is-valid': forma.controls['phone_1'].valid }\"\n                        \n                        >\n\n                        <div    *ngIf=\"forma.get('phone_1').errors?.required\"  \n                                class=\"invalid-feedback\">\n                                Este campo es requerido\n                        </div>\n                        <div   *ngIf=\"forma.get('phone_1').errors?.pattern\"  \n                                class=\"invalid-feedback\">\n                                No posee la forma de un correo: example@gmail.com\n                        </div>\n\n                </div>\n\n        </div>\n\n        <div class=\"form-group row\">\n                <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-10\">\n            \n                        <input  class=\"form-control\"\n                                type=\"phone\"\n                                placeholder=\"Ingrese teléfono\"\n                                [ngModel]=\"data.phone_2\"\n                                formControlName=\"phone_2\"\n                                [ngClass]=\"{'is-invalid':  (!forma.controls['phone_2'].valid || forma.controls['phone_2'].errors?.minlength)&& forma.controls['phone_2'].touched, 'is-valid': forma.controls['phone_2'].valid }\"\n                       \n                        >\n\n                        <div    *ngIf=\"forma.get('phone_2').errors?.required\"  \n                                class=\"invalid-feedback\">\n                                Este campo es requerido\n                        </div>\n                        <div   *ngIf=\"forma.get('phone_2').errors?.pattern\"  \n                                class=\"invalid-feedback\">\n                                No posee la forma de un correo: example@gmail.com\n                        </div>\n\n                </div>\n\n        </div>\n\n        <div class=\"form-group row\">\n                <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-10\">\n    \n                        <input  class=\"form-control\"\n                                type=\"phone\"\n                                placeholder=\"Página web\"\n                                [ngModel]=\"data.webside\"\n                                formControlName=\"webside\"\n                                [ngClass]=\"{'is-invalid':  (!forma.controls['webside'].valid || forma.controls['webside'].errors?.minlength)&& forma.controls['webside'].touched, 'is-valid': forma.controls['webside'].valid }\"\n                        \n                        >\n\n                        <div    *ngIf=\"forma.get('webside').errors?.required\"  \n                                class=\"invalid-feedback\">\n                                Este campo es requerido\n                        </div>\n\n                </div>\n\n        </div>\n\n        <div class=\"form-group row\">\n                <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-10\">\n    \n                        <input  class=\"form-control\"\n                                type=\"phone\"\n                                placeholder=\"Dirección\"\n                                [ngModel]=\"data.direction\"\n                                formControlName=\"direction\"\n                                [ngClass]=\"{'is-invalid':  (!forma.controls['direction'].valid || forma.controls['direction'].errors?.minlength)&& forma.controls['direction'].touched, 'is-valid': forma.controls['direction'].valid }\"\n                                \n                        >\n\n                        <div    *ngIf=\"forma.get('direction').errors?.required\"  \n                                class=\"invalid-feedback\">\n                                Este campo es requerido\n                        </div>\n\n                </div>\n\n        </div>\n        <!--===========REDES SOCIALES============-->\n        <!--=====================================-->\n        <section *ngFor=\"let redes of redesSociales\">\n\n                <div class=\"form-group row\">\n                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-10\">\n                        <span class=\"orange family-500\">Redes sociales</span>\n                        </div>\n                </div>\n        \n                <div class=\"form-group row\">\n                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-10\">\n                \n                                <input  class=\"form-control facebook-icon\"\n                                        type=\"phone\"\n                                        placeholder=\"Link de Facebook\"\n                                        [ngModel]=\"redes.facebook\"\n                                        formControlName=\"facebook\"\n                                        [ngClass]=\"{'is-invalid':  (!forma.controls['facebook'].valid || forma.controls['facebook'].errors?.minlength)&& forma.controls['facebook'].touched, 'is-valid': forma.controls['facebook'].valid }\"\n                                        \n                                >\n        \n                                <div    *ngIf=\"forma.get('facebook').errors?.required\"  \n                                        class=\"invalid-feedback\">\n                                        Este campo es requerido\n                                </div>\n        \n                        </div>\n        \n                </div>\n        \n                <div class=\"form-group row\">\n                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-10\">\n                \n                                <input  class=\"form-control instagram-icon\"\n                                        type=\"phone\"\n                                        placeholder=\"Link de Instagram\"\n                                        [ngModel]=\"redes.instagram\"\n                                        formControlName=\"instagram\"\n                                        [ngClass]=\"{'is-invalid':  (!forma.controls['instagram'].valid || forma.controls['instagram'].errors?.minlength)&& forma.controls['instagram'].touched, 'is-valid': forma.controls['instagram'].valid }\"\n                                        \n                                >\n        \n                                <div    *ngIf=\"forma.get('instagram').errors?.required\"  \n                                        class=\"invalid-feedback\">\n                                        Este campo es requerido\n                                </div>\n        \n                        </div>\n        \n                </div>\n          \n                <div class=\"form-group row\">\n                        <div class=\"col-11 col-sm-10 col-md-12 col-lg-10 col-xl-10\">\n                                <input  class=\"form-control twitter-icon\"\n                                        type=\"phone\"\n                                        placeholder=\"Link de Twitter\"\n                                        [ngModel]=\"redes.twitter\"\n                                        formControlName=\"twitter\"\n                                        [ngClass]=\"{'is-invalid':  (!forma.controls['twitter'].valid || forma.controls['twitter'].errors?.minlength)&& forma.controls['twitter'].touched, 'is-valid': forma.controls['twitter'].valid }\"\n                                \n                                >\n        \n                                <div    *ngIf=\"forma.get('twitter').errors?.required\"  \n                                        class=\"invalid-feedback\">\n                                        Este campo es requerido\n                                </div>\n                        </div>\n                </div>\n        </section>\n        <!--=========END REDES SOCIALES==========-->\n        <!--=====================================-->\n        \n\n</form>\n    ","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\nimport { UserStoreService } from '../../../services/user-store/user-store.service';\nimport { InformationEditStore } from '../../../models/InformationEditStore.mode';\nimport { Usuario } from 'src/app/models/usuario.model';\n\n@Component({\n  selector: 'app-contact-information-edit',\n  templateUrl: './contact-information-edit.component.html',\n  styleUrls: ['./contact-information-edit.component.css']\n})\nexport class ContactInformationEditComponent implements OnInit {\n\n  @Input() forma: FormGroup;\n  // tslint:disable-next-line: ban-types\n  dataStore: any[] = [];\n  dataStoreEdit: any[] = [];\n  redesSociales: any[] = [];\n  title = false;\n  informationEdit: InformationEditStore;\n\n  social: Usuario;\n\n  usuario: Usuario;\n\n  constructor(public userStoreServices: UserStoreService,  private formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n\n    this.userStoreServices.getStoreAccountEdit(localStorage.getItem('id')).subscribe( data => {\n      this.dataStore = data;\n      this.title = true;\n      this.traerdata();\n    });\n\n  }\n\n  editInformationContact(){}\n\n  async traerdata(){\n    await this.userStoreServices\n    .getDataStore(localStorage.getItem('id'), this.dataStore[0].id)\n    .subscribe( ( resp: any ) => {\n      // tslint:disable-next-line: no-string-literal\n      this.dataStoreEdit.push(resp.contact);\n      this.redesSociales.push(resp.social);\n      this.title = true;\n      console.log('información de contacto', this.dataStoreEdit);\n      // this.guardarStorage( this.dataStoreEdit );\n\n    });\n  }\n\n\n\n}\n","<div class=\"table-responsive\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <table class=\"table\" *ngFor=\"let item of dataStoreEdit\">\n                <tbody>\n                    <tr>\n                        <th scope=\"row\" class=\"family-700 size-16\">Correo</th>\n                        <td>{{item.email_1}}</td>\n                        <td>{{item.email_2}}</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\" class=\"family-700 size-16\">Teléfonos</th>\n                        <td>{{item.phone_1}}</td>\n                        <td>{{item.phone_2}}</td>\n                    </tr>\n                    <tr *ngFor=\"let redes of redesSociales\">\n                        <th scope=\"row\" class=\"family-700 size-16\">Redes sociales</th>\n                        <td>{{redes.facebook}}</td>\n                        <td>{{redes.instagram}}</td>\n                        <td>{{redes.twitter}}</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\" class=\"family-700 size-16\">Página Web</th>\n                        <td>{{item.webside}}</td>\n                    </tr>\n                    <tr>\n                        <th scope=\"row\" class=\"family-700 size-16\">Dirección</th>\n                        <td>{{item.direction}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div> \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserStoreService } from '../../../services/user-store/user-store.service';\n\n@Component({\n  selector: 'app-contact-information',\n  templateUrl: './contact-information.component.html',\n  styleUrls: ['./contact-information.component.css']\n})\nexport class ContactInformationComponent implements OnInit {\n\n  dataStore: any[] = [];\n  dataStoreEdit: any[] = [];\n  redesSociales: any[] = [];\n\n  constructor(public userStoreServices: UserStoreService) { }\n\n  ngOnInit() {\n    this.userStoreServices.getStoreAccountEdit(localStorage.getItem('id')).subscribe( data => {\n      this.dataStore = data;\n      this.traerdata();\n    });\n  }\n\n  async traerdata(){\n    await this.userStoreServices\n    .getDataStore(localStorage.getItem('id'), this.dataStore[0].id)\n    .subscribe( ( resp: any ) => {\n      // tslint:disable-next-line: no-string-literal\n      this.dataStoreEdit.push(resp.contact);\n      console.log('contacto', this.dataStoreEdit);\n      this.redesSociales.push(resp.social);\n      // this.guardarStorage( this.dataStoreEdit );\n\n    });\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-map-editar',\n  templateUrl: './map-editar.component.html',\n  styleUrls: ['./map-editar.component.css']\n})\nexport class MapEditarComponent implements OnInit {\n\n  forma: FormGroup;\n\n  constructor(\n    public fb: FormBuilder,\n    public dialogRef: MatDialogRef<MapEditarComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n      console.log(data);\n\n      this.forma = new FormGroup({\n        titulo: new FormControl(data.titulo),\n        desc: new FormControl(data.desc),\n      });\n    }\n\n  ngOnInit(): void {\n  }\n\n  guardarCambios(){\n    console.log(this.forma.value);\n    this.dialogRef.close(this.forma.value);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  formEditMapa(){\n\n  }\n\n}\n","\n<form   [formGroup]=\"forma\" \n        (ngSubmit)=\"formEditMapa()\" \n        novalidate=\"novalidate\">\n\n    <mat-form-field class=\"example-form-field\">\n        <input  matInput \n                type=\"text\" \n                placeholder=\"Titulo\" \n                formControlName=\"titulo\"\n        >\n    </mat-form-field>\n\n    <mat-form-field class=\"example-form-field\">\n        <textarea   rows=\"3\" \n                    matInput \n                    placeholder=\"Dirección\" \n                    formControlName=\"desc\"></textarea>\n    </mat-form-field>\n\n    <button (click)=\"guardarCambios()\" \n            mat-raised-button \n            color=\"primary\" \n            class=\"mr-3\">\n            Editar\n    </button>\n\n    <button (click)=\"onNoClick()\" \n            type=\"button\" \n            mat-raised-button \n            color=\"warn\">\n            Cancelar\n    </button>\n\n</form>\n\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Marcador } from '../../classes/marcador.class';\nimport { GoogleMapsAPIWrapper } from '@agm/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport { MapEditarComponent } from '../map-editar/map-editar.component';\nimport { FormGroup, FormControl, Validators, FormArray, FormBuilder } from '@angular/forms';\n@Component({\n  selector: 'app-mapa',\n  templateUrl: './mapa.component.html',\n  styleUrls: ['./mapa.component.css']\n})\nexport class MapaComponent implements OnInit {\n\n  marcadores: Marcador[] = [] ;\n  // tslint:disable-next-line: variable-name\n  @Output() adrees_latitude: EventEmitter<any>;\n  // tslint:disable-next-line: variable-name\n  @Output() adress_longitude: EventEmitter<any>;\n\n  latitud = -33.4372;\n  longitud = -70.6506;\n\n  lat: number;\n  lng: number;\n\n  constructor(public snackBar: MatSnackBar, public dialog: MatDialog) {\n\n    this.adrees_latitude = new EventEmitter();\n    this.adress_longitude = new EventEmitter();\n\n    if ( localStorage.getItem('marcadores' )){\n      this.marcadores = JSON.parse(localStorage.getItem('marcadores'));\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  agregarMarcadores( event: any ){\n    console.log(event);\n    const coords: { lat: number, lng: number } = event.coords;\n    const nuevoMarcador = new Marcador( coords.lat, coords.lng );\n    this.marcadores.push( nuevoMarcador );\n    this.guardarStorage();\n    this.adrees_latitude.emit(coords.lat);\n    this.adress_longitude.emit(coords.lng);\n    this.snackBar.open('Marcador agregado', 'cerrar', { duration: 3000 });\n  }\n\n  guardarStorage(){\n    localStorage.setItem('marcadores', JSON.stringify(this.marcadores));\n  }\n\n  borrarMarcador(i: number){\n    this.marcadores.splice(i, 1);\n    this.guardarStorage();\n    this.snackBar.open('Marcador borrado', 'cerrar', { duration: 3000 });\n  }\n\n  editarMarcador(marcador: Marcador){\n\n    const dialogRef = this.dialog.open(MapEditarComponent, {\n      width: '250px',\n      data: {titulo: marcador.titulo, desc: marcador.desc}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n\n      if ( !result ){\n        return;\n      }\n\n      marcador.titulo = result.titulo;\n      marcador.desc = result.desc;\n      this.guardarStorage();\n      this.snackBar.open('Marcador actualizado', 'cerrar', { duration: 3000 });\n\n    });\n\n  }\n\n\n}\n\n","<mat-card>\r\n    <mat-card-title class=\"orange family-400 mb-4\">Ubicación geográfica</mat-card-title>\r\n    <agm-map    (mapClick)=\"agregarMarcadores($event)\" \r\n                [latitude]=\"latitud\" \r\n                [longitude]=\"longitud\"\r\n                [zoom]=\"8\">\r\n\r\n        <agm-marker *ngFor=\"let marcador of marcadores; let i = index\" \r\n                    [latitude]=\"marcador.lat\" \r\n                    [longitude]=\"marcador.lng\">\r\n\r\n                <agm-info-window>\r\n                    <strong class=\"family-600\">{{marcador.titulo}}</strong>\r\n                    <p>\r\n                        {{marcador.desc}}\r\n                    </p>\r\n                    <p>\r\n                      <strong>Latitud:</strong> \r\n                      <span class=\"size-12\">{{marcador.lat}}</span> \r\n                    </p>\r\n                    <p>\r\n                        <strong>Longitud:</strong> \r\n                        <span class=\"size-12\">{{marcador.lng}}</span>\r\n                    </p>\r\n                    <div>\r\n\r\n                        <button (click)=\"editarMarcador( marcador )\" \r\n                                mat-raised-button color=\"primary\" \r\n                                class=\"mr-3\">\r\n                                Editar\r\n                        </button>\r\n\r\n                        <button (click)=\"borrarMarcador(i)\" \r\n                                mat-raised-button \r\n                                color=\"warn\">\r\n                                Borrar\r\n                        </button>\r\n                    </div>\r\n                </agm-info-window>\r\n\r\n        </agm-marker>\r\n    </agm-map>\r\n</mat-card>","import { Component, OnInit,  Output, EventEmitter } from '@angular/core';\nimport { UsuarioService } from '../../../services/usuario/usuario.service';\nimport { ImageCroppedEvent } from 'ngx-image-cropper';\nimport { FormGroup, FormControl, Validators, FormArray, AbstractControl, } from '@angular/forms';\nimport { Avatar } from '../../../models/avatar.model';\nimport { URL_SERVICIOS } from 'src/app/config/config';\n\n@Component({\n  selector: 'app-photo-user-edit',\n  templateUrl: './photo-user-edit.component.html',\n  styleUrls: ['./photo-user-edit.component.css']\n})\nexport class PhotoUserEditComponent implements OnInit {\n\n  cropper: FormGroup;\n  imageChangedEvent: any = '';\n  // tslint:disable-next-line: member-ordering\n  croppedImage: any = '';\n  textFooterImages = false;\n  imagenSubir: File;\n  avatar: File;\n  mostrarAvatar = false;\n  IMG_USER: string;\n  spinner = false;\n\n  // sALIDAS//\n  // tslint:disable-next-line: variable-name\n  @Output() mostarComponent: EventEmitter<any>;\n\n  constructor(public usuarioService: UsuarioService) {\n\n    this.mostarComponent = new EventEmitter();\n\n    this.cropper = new FormGroup({\n      avatar: new FormControl(''),\n    });\n  }\n\n  ngOnInit() {\n    this.GetAvatar();\n  }\n\n\n  fileChangeEvent(archivo: File) {\n    if ( !archivo ) {\n      this.imageChangedEvent = null;\n      return;\n    }\n    this.mostrarAvatar = true;\n    this.imageChangedEvent = archivo;\n    this.textFooterImages = true;\n  }\n\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n    this.cropper.get('avatar').setValue(this.croppedImage);\n  }\n  imageLoaded() {\n    // show cropper\n  }\n  cropperReady() {\n    // cropper ready\n  }\n  loadImageFailed() {\n    // show message\n  }\n  CropperImg(){\n    //  this.usuarioService.subirArchivo(localStorage.getItem('id'))\n  }\n\n  cambiarImagen(){\n    const avatar = new Avatar(\n      this.cropper.value.avatar\n    );\n    this.usuarioService.cambiarImagen(avatar, localStorage.getItem('id')).subscribe((Response: any) => {\n      console.log(Response.src);\n      this.IMG_USER = URL_SERVICIOS + '/' + Response.src;\n      console.log(this.IMG_USER);\n    });\n    this.mostrarAvatar = false;\n  }\n\n\n  GetAvatar(){\n    this.usuarioService.datosUserImages(localStorage.getItem('id')).subscribe( (Response: any) => {\n      this.IMG_USER = URL_SERVICIOS + '/' + Response[0].src;\n      this.spinner = true;\n    });\n  }\n\n\n}\n","<form   [formGroup]=\"cropper\"\n        enctype='multipart/form-data' \n        (ngSubmit)=\"CropperImg()\"\n        enctype=\"multipart/form-data\" \n        class=\"col-md-12\"\n        >\n\n    <div class=\"col-md-12\">\n        <section>\n            <label  for=\"cropper\" \n                class=\"cursor-poniter width-100 text-align-end pr-5\">\n                Editar\n            </label>\n            <div class=\"display-flex flex-direction-column align-items-center\">\n                <input accept=\"image/*\" type=\"file\" (change)=\"fileChangeEvent($event)\" id=\"cropper\"/>\n                <image-cropper style=\"width: 310px\"\n                    *ngIf=\"mostrarAvatar\"                        \n                    [imageChangedEvent]=\"imageChangedEvent\"\n                    [maintainAspectRatio]=\"true\"\n                    [aspectRatio]=\"2 / 2\"\n                    [resizeToWidth]=\"300\"\n                    [resizeToHeight]=\"300\"\n                    format=\"png\"\n                    (imageCropped)=\"imageCropped($event)\"\n                    (imageLoaded)=\"imageLoaded()\"\n                    (cropperReady)=\"cropperReady()\"\n                    (loadImageFailed)=\"loadImageFailed()\"\n                ></image-cropper>\n\n                <label  *ngIf=\"mostrarAvatar\" \n                    class=\"family-400 size-14 pt-1\">\n                    Las imágenes deben ser de 600X600 px y 2MG\n                </label>\n\n            </div>\n        </section>\n    </div>\n\n    <footer class=\"display-flex justify-content-flex-end pr-5\">\n        <button     class=\"btn btn-outline-primary button width-30 fredoka\" \n                    type=\"submit\"\n                    *ngIf=\"mostrarAvatar\"\n                    (click)=\"cambiarImagen()\"\n                    >\n                    Aceptar\n        </button>\n    </footer>\n\n    <section>\n        <mat-spinner *ngIf=\"!spinner\"></mat-spinner>\n        <img [src]=\"IMG_USER\" class=\"w150\" *ngIf=\"!mostrarAvatar\">\n    </section>\n\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { UsuarioService } from '../../../services/usuario/usuario.service';\n\n@Component({\n  selector: 'app-photo-user',\n  templateUrl: './photo-user.component.html',\n  styleUrls: ['./photo-user.component.css']\n})\nexport class PhotoUserComponent implements OnInit {\n\n\n  constructor(public usuarioService: UsuarioService) { }\n\n  ngOnInit() {\n\n  }\n\n\n}\n","\n\n<section class=\"display-flex\">\n\n    <app-navbarstore id=\"header\"></app-navbarstore>\n    \n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            \n            <app-aside></app-aside>\n\n            <div class=\"col-sm-8 col-md-8 col-lg-8 col-xl-10\">\n\n                <app-banner-tienda></app-banner-tienda>\n\n                <div class=\"container pt-3 pb-4\" *ngFor=\"let data of dataStore\"> \n                    <div class=\"row\">\n                        <div class=\"col-md-6 pl-4\">\n                            <h5 class=\"name-store family-600 size-27 pl-2\">\n                                {{data.name}}\n                            </h5>\n                            <span  class=\"pl-2 family-300 size-16\">\n                               RUT {{data.rut}}\n                            </span>\n                        </div>\n                    </div>\n                </div>\n\n                <form   [formGroup]=\"forma\" \n                        (ngSubmit)=\"actualizarDatosStore()\" \n                        novalidate=\"novalidate\"\n                        >\n\n                    <div class=\"container\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6 pl-4\">\n\n                                <div class=\"display-flex\">\n\n                                    <span class=\"orange family-500\">Datos del negocio</span>\n\n                                    <button class=\"button-edit family-400 ml-3\" \n                                            (click)=\"atrasDescripcion()\"\n                                            *ngIf=\"editarDescripcion\">\n                                            Atrás\n                                    </button>\n\n                                    <button class=\"button-edit family-400 ml-3\" \n                                            (click)=\"EditarDescripcion()\"\n                                            *ngIf=\"!editarDescripcion\">\n                                            Editar\n                                    </button>\n                                \n                                </div>\n\n                                <!--======================================================================-->\n                                <!--================== DESCRIPCIÓN DE LA TIENDA  EDITABLE ==================-->\n                                <app-contact-description-edit   *ngIf=\"editarDescripcion\" \n                                                                class=\"animated fadeIn\" \n                                                                [forma]=\"forma\">\n                                </app-contact-description-edit>\n                                <!--======================================================================-->\n                                <!--====================== End DESCRIPCIÓN DE LA TIENDA  ===================-->\n\n                                <!--======================================================= =============-->\n                                <!--================== PARRAFO DESCRIPCIÓN DE LA TIENDA =================-->\n                                <app-contact-description *ngIf=\"!editarDescripcion\"></app-contact-description>\n                                <!--======================================================================-->\n                                <!--================= END PARRAFO DESCRIPCIÓN DE LA TIENDA ===============-->\n\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"display-flex\">\n\n                                    <span class=\"orange family-500 size-18\">Información de contacto</span>\n                                    <button class=\"button-edit family-400 ml-3\" \n                                            (click)=\"atras()\"\n                                            *ngIf=\"editar\">\n                                            Atrás\n                                    </button>\n\n                                    <button class=\"button-edit family-400 ml-3\" \n                                            (click)=\"Editar()\"\n                                            *ngIf=\"!editar\">\n                                            Editar\n                                    </button>\n                                \n                                </div>\n\n                                <!-- ================ INFORMACIón DE CONTACTO EDITABLE ===================-->\n                                <app-contact-information-edit   *ngIf=\"editar\" \n                                                                class=\"animated fadeIn\" \n                                                                [forma]=\"forma\">\n                                </app-contact-information-edit>\n                                <!--======================================================================-->\n\n                                <!-- ====================END INFORMACIón DE CONTACTO======================-->\n\n                                <!-- ================ TABLA INFORMACIón DE CONTACTO ======================-->\n                                <app-contact-information *ngIf=\"!editar\" class=\"width-90\"></app-contact-information>\n                                <!--======================================================================-->\n                                <!-- ====================END TABLA INFORMACIón DE CONTACTO================-->\n\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <div class=\"col-md-10 mb-4\">\n\n                                <!-- ==================  GOOGLE MAPS================= -->\n                                <!-- ===============================================  -->\n                                <app-mapa class=\"animated fadeIn\" (adrees_latitude)=\"adress_latitude($event)\" (adress_longitude)=\"adress_longitude( $event )\"></app-mapa>\n                                <!-- ================================================ -->\n                                <!-- ===================END GOOGLE MAPS============== -->\n                            </div>\n                            \n                        </div>\n                    </div>\n\n                    <button class=\"btn btn-outline-primary fredoka\"\n                            type=\"submit\"\n                            (click)=\"Actualizar()\">\n                        Guardar cambios\n                    </button>\n\n                </form>\n\n            </div>\n            \n        </div>\n    </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\nimport { UserStoreService } from '../../services/user-store/user-store.service';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { DataStore } from '../../models/dataStore.model';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  forma: FormGroup;\n  name: any = null;\n  title = false;\n  // tslint:disable-next-line: variable-name\n  adress_lat: any;\n  // tslint:disable-next-line: variable-name\n  adress_lng: any;\n\n  editar = false;\n  editarDescripcion = false;\n\n\n  // tslint:disable-next-line: ban-types\n  dataStore: any[] = [];\n\n  constructor(public userStoreServices: UserStoreService,\n              public snackBar: MatSnackBar) {\n\n    this.forma = new FormGroup({\n      social_reason: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      rut: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      name: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      description: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      email_1: new FormControl('' , [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]),\n      email_2: new FormControl('' , [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]),\n      phone_1: new FormControl('', [Validators.required, Validators.minLength(10)]),\n      phone_2: new FormControl('', [Validators.required, Validators.minLength(10)]),\n      webside: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      direction: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      facebook: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      instagram: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      twitter: new FormControl('', [Validators.required, Validators.minLength(5)]),\n      address_latitude: new FormControl(),\n      address_longitude: new FormControl(),\n    });\n\n  }\n\n  ngOnInit(){\n    this.traerIdStore();\n  }\n\n  async traerIdStore(){\n    await this.userStoreServices.getStoreAccountEdit(localStorage.getItem('id')).subscribe( data => {\n     this.dataStore = data;\n     this.title = true;\n   });\n  }\n\n\n  actualizarDatosStore(){\n\n    const data = new DataStore(\n      this.forma.value.social_reason,\n      this.forma.value.rut,\n      this.forma.value.name,\n      this.forma.value.description,\n      this.forma.value.email_1,\n      this.forma.value.email_2,\n      this.forma.value.phone_1,\n      this.forma.value.phone_2,\n      this.forma.value.webside,\n      this.forma.value.direction,\n      this.forma.value.facebook,\n      this.forma.value.instagram,\n      this.forma.value.twitter,\n      this.forma.value.address_latitude,\n      this.forma.value.address_latitude,\n    );\n\n    this.userStoreServices.ActualizarDataStore\n    (\n      localStorage.getItem('id'),\n      this.dataStore[0].id,\n      data\n    );\n\n    console.log(this.forma);\n\n  }\n\n  Actualizar(){\n    this.snackBar.open('Cambios Guardados', 'cerrar', { duration: 3000 });\n  }\n\n  adress_latitude( e ){\n    console.log('lat', e);\n    return this.adress_lat = e;\n  }\n  adress_longitude( e ){\n    console.log('lng', e);\n    return this.adress_lng = e;\n  }\n\n  atras(){\n    this.editar = false;\n  }\n\n  Editar(){\n    this.editar = true;\n  }\n\n  EditarDescripcion(){\n    this.editarDescripcion = true;\n  }\n\n  atrasDescripcion(){\n    this.editarDescripcion = false;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { UsuarioService } from '../../services/usuario/usuario.service';\r\nimport { Usuario } from 'src/app/models/usuario.model';\r\nimport { UserStoreService } from '../../services/user-store/user-store.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n\r\nitems: any = {};\r\n\r\n\r\nconstructor(public userStoreServices: UserStoreService) { }\r\n\r\nngOnInit() {\r\n    this.getUserConnet();\r\n  }\r\n\r\ngetUserConnet(){\r\n    this.userStoreServices.getStore().subscribe( resp => {\r\n      console.log(resp);\r\n      this.items = resp;\r\n    });\r\n}\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-form-account',\r\n  templateUrl: './form-account.component.html',\r\n  styleUrls: ['./form-account.component.css']\r\n})\r\nexport class FormAccountComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>form-account works!</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { FormAccountComponent } from './form-account/form-account.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { ComponentsModule } from '../components/components.module';\r\nimport { APP_ROUTING } from '../app.routes';\r\nimport { ContactInformationEditComponent } from './components/contact-information-edit/contact-information-edit.component';\r\nimport { ContactInformationComponent } from './components/contact-information/contact-information.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MapaComponent } from './components/mapa/mapa.component';\r\nimport { MapEditarComponent } from './components/map-editar/map-editar.component';\r\nimport { ImageCropperModule } from 'ngx-image-cropper';\r\n\r\n// Mapa //\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\n\r\nimport { ContactDescriptionEditComponent } from './components/contact-description-edit/contact-description-edit.component';\r\nimport { ContactDescriptionComponent } from './components/contact-description/contact-description.component';\r\nimport { AsideComponent } from './shared/aside/aside.component';\r\nimport { PhotoUserEditComponent } from './components/photo-user-edit/photo-user-edit.component';\r\nimport { PhotoUserComponent } from './components/photo-user/photo-user.component';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n    entryComponents: [\r\n      MapEditarComponent,\r\n      ContactDescriptionEditComponent\r\n    ],\r\n    // tslint:disable-next-line: max-line-length\r\n    declarations: [DashboardComponent,\r\n      FormAccountComponent,\r\n      ContactComponent,\r\n      ContactInformationEditComponent,\r\n      ContactInformationComponent,\r\n      MapaComponent,\r\n      MapEditarComponent,\r\n      ContactDescriptionEditComponent,\r\n      ContactDescriptionComponent,\r\n      AsideComponent,\r\n      PhotoUserEditComponent,\r\n      PhotoUserComponent],\r\n\r\n    imports: [CommonModule,\r\n      SharedModule,\r\n      ImageCropperModule,\r\n      MatInputModule,\r\n      MatGridListModule,\r\n      MatSnackBarModule,\r\n      MatButtonModule,\r\n      MatDialogModule,\r\n      MatCardModule,\r\n      BrowserAnimationsModule,\r\n      ComponentsModule,\r\n      APP_ROUTING,\r\n      MatProgressSpinnerModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n      AgmCoreModule.forRoot({\r\n        apiKey: 'AIzaSyDNOu2JQ001PxZY-GVwFvVou0_6h_Sj-14'\r\n      })\r\n      ],\r\n\r\n    exports: [PhotoUserEditComponent,\r\n      PhotoUserComponent]\r\n  })\r\n  export class PrivateviewModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-aside',\n  templateUrl: './aside.component.html',\n  styleUrls: ['./aside.component.css']\n})\nexport class AsideComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col-sm-4 col-md-4 col-lg-4 col-xl-2\">\n    <aside>\n        <nav>\n            <ul class=\"pt-5\">\n\n                <li>\n                    <input type=\"file\">\n                </li>\n    \n                <li class=\"family-400 size-16 pb-2 pt-2 puntero\">\n                    <a routerLinkActive=\"active\" [routerLink]=\"['/contact']\">Contacto</a>\n                </li>\n                <li class=\"family-400 size-16 pb-2 pt-2 puntero\">\n                    <a>Productos</a>\n                </li>\n                <li class=\"family-400 size-16 pb-2 puntero\">\n                    <a>Sincronización</a>\n                </li>\n                <li class=\"family-400 size-16 pb-2 puntero\">\n                    <a>Ventas</a>\n                </li>\n                \n            </ul>\n        </nav>\n    </aside>\n</div>\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { AccountComponent } from './account/account.component';\r\nimport { LoginGuardGuard } from '../services/guards/login-guard.guard';\r\n\r\n\r\nconst VIEW_ROUTES: Routes = [\r\n\r\n    // {   path: 'account',\r\n    // component: AccountComponent,\r\n    // },\r\n\r\n];\r\n\r\nexport const VIEW_ROUTING = RouterModule.forRoot(VIEW_ROUTES, {useHash: true});\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-form-data-usuario></app-form-data-usuario>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"degradado animated fadeIn fast\">\r\n    <div class=\"row\">\r\n       <div class=\"col-md-5 display-flex justify-content-center animated fadeIn fast\">\r\n            <img src=\"../../../assets/img/IconosHome/NIÑA.svg\" style=\"max-height: 700px;\">\r\n       </div>\r\n       <div class=\"col-md-7 white display-flex align-items-center justify-content-center flex-direction-column\">\r\n\r\n           <h2 class=\"fredoka size-45 mb-4\">\r\n            ¿Qué medicinas estás buscando?\r\n           </h2>\r\n\r\n            <form class=\"form-inline my-2 my-lg-0 width-90 shadow\">\r\n                <input  class=\"form-control mr-sm-2 width-75 icon-magnifying-glass\" \r\n                        type=\"search\" \r\n                        placeholder=\"¿ Qué medicina o farmacia estás buscando ?\" \r\n                        aria-label=\"Search\"\r\n                >\r\n                <button class=\"btn btn-outline-success my-2 my-sm-0 fredoka width-20\" \r\n                        type=\"submit\"\r\n                        >\r\n                        Buscar\r\n                </button>\r\n            </form>\r\n\r\n            <p class=\"family-700 black size-18 mt-5\">Categorias</p>\r\n\r\n            <app-categorias></app-categorias>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HomeComponent } from '../vistas-publicas/home/home.component';\r\nimport { RegisterComponent } from './Registers/Usuario/register.component';\r\nimport { FormularioRegisterModule } from '../form-register/formulario-register.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { APP_ROUTING } from '../app.routes';\r\nimport { LoginModule } from '../Login/login.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    RegisterComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormularioRegisterModule,\r\n    SharedModule,\r\n    APP_ROUTING,\r\n    LoginModule,\r\n  ],\r\n  exports: [\r\n    HomeComponent,\r\n    RegisterComponent,\r\n  ]\r\n})\r\nexport class VistasPublicasModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true,\r\n  url: 'https://api.themoviedb.org/3',\r\n  apiKey: 'aac1706fe8a46b5700714aead65c5e39',\r\n  imgPath: 'https://image.tmdb.org/t/p'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}